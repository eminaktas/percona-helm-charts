---
# Source: everest/crds/backupstorages.everest.percona.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "everest-crds.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: backupstorages.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: BackupStorage
    listKind: BackupStorageList
    plural: backupstorages
    singular: backupstorage
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BackupStorage is the Schema for the backupstorages API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object.

              Servers should convert recognized schemas to the latest internal value,
              and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents.

              Servers may infer this from the endpoint the client submits requests
              to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupStorageSpec defines the desired state of BackupStorage.
            properties:
              allowedNamespaces:
                description: 'AllowedNamespaces is the list of namespaces where the
                  operator will copy secrets provided in the CredentialsSecretsName.


                  Deprecated: BackupStorages are now used only in the namespaces where
                  they are created.'
                items:
                  type: string
                type: array
              bucket:
                description: Bucket is a name of bucket.
                type: string
              credentialsSecretName:
                description: CredentialsSecretName is the name of the secret with
                  credentials.
                type: string
              description:
                description: Description stores description of a backup storage.
                type: string
              endpointURL:
                description: EndpointURL is an endpoint URL of backup storage.
                type: string
              forcePathStyle:
                default: false
                description: 'ForcePathStyle is set to use path-style URLs.

                  If unspecified, the default value is false.'
                type: boolean
              region:
                description: Region is a region where the bucket is located.
                type: string
              type:
                description: Type is a type of backup storage.
                enum:
                - s3
                - azure
                type: string
              verifyTLS:
                default: true
                description: 'VerifyTLS is set to ensure TLS/SSL verification.

                  If unspecified, the default value is true.'
                type: boolean
            required:
            - bucket
            - credentialsSecretName
            - type
            type: object
          status:
            description: BackupStorageStatus defines the observed state of BackupStorage.
            properties:
              usedNamespaces:
                additionalProperties:
                  type: boolean
                description: 'Deprecated: BackupStorages are now used only in the
                  namespaces where they are created.'
                type: object
            required:
            - usedNamespaces
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/crds/databaseclusterbackups.everest.percona.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "everest-crds.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseclusterbackups.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseClusterBackup
    listKind: DatabaseClusterBackupList
    plural: databaseclusterbackups
    shortNames:
    - dbbackup
    - dbb
    singular: databaseclusterbackup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The original database cluster name
      jsonPath: .spec.dbClusterName
      name: Cluster
      type: string
    - description: Backup destination
      jsonPath: .status.destination
      name: Destination
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Time the job was completed
      jsonPath: .status.completed
      name: Completed
      type: date
    - description: Age of the resource
      jsonPath: .status.created
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseClusterBackup is the Schema for the databaseclusterbackups
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object.

              Servers should convert recognized schemas to the latest internal value,
              and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents.

              Servers may infer this from the endpoint the client submits requests
              to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterBackupSpec defines the desired state of DatabaseClusterBackup.
            properties:
              backupStorageName:
                description: 'BackupStorageName is the name of the BackupStorage used
                  for backups.

                  The BackupStorage must be created in the same namespace as the DatabaseCluster.'
                type: string
              dbClusterName:
                description: DBClusterName is the original database cluster name.
                type: string
            required:
            - backupStorageName
            - dbClusterName
            type: object
          status:
            description: DatabaseClusterBackupStatus defines the observed state of
              DatabaseClusterBackup.
            properties:
              completed:
                description: Completed is the time when the job was completed.
                format: date-time
                type: string
              created:
                description: Created is the timestamp of the upstream backup's creation.
                format: date-time
                type: string
              destination:
                description: Destination is the full path to the backup.
                type: string
              gaps:
                description: Gaps identifies if there are gaps detected in the PITR
                  logs
                type: boolean
              latestRestorableTime:
                description: LatestRestorableTime is the latest time that can be used
                  for PITR restore
                format: date-time
                type: string
              state:
                description: State is the DatabaseBackup state.
                type: string
            required:
            - gaps
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/crds/databaseclusterrestores.everest.percona.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "everest-crds.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseclusterrestores.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseClusterRestore
    listKind: DatabaseClusterRestoreList
    plural: databaseclusterrestores
    shortNames:
    - dbrestore
    - dbr
    singular: databaseclusterrestore
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster name
      jsonPath: .spec.dbClusterName
      name: Cluster
      type: string
    - description: DBClusterBackup name
      jsonPath: .spec.dataSource.dbClusterBackupName
      name: Backup
      type: string
    - description: Backup path
      jsonPath: .spec.dataSource.backupSource.path
      name: Path
      type: string
    - description: Storage name
      jsonPath: .spec.dataSource.backupSource.backupStorageName
      name: Storage
      type: string
    - description: Job status
      jsonPath: .status.state
      name: Status
      type: string
    - description: Completed time
      jsonPath: .status.completed
      name: Completed
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseClusterRestore is the Schema for the databaseclusterrestores
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object.

              Servers should convert recognized schemas to the latest internal value,
              and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents.

              Servers may infer this from the endpoint the client submits requests
              to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterRestoreSpec defines the desired state of DatabaseClusterRestore.
            properties:
              dataSource:
                description: DataSource defines a data source for restoration.
                properties:
                  backupSource:
                    description: BackupSource is the backup source to restore from
                    properties:
                      backupStorageName:
                        description: 'BackupStorageName is the name of the BackupStorage
                          used for backups.

                          The BackupStorage must be created in the same namespace
                          as the DatabaseCluster.'
                        type: string
                      path:
                        description: Path is the path to the backup file/directory.
                        type: string
                    required:
                    - backupStorageName
                    - path
                    type: object
                  dbClusterBackupName:
                    description: DBClusterBackupName is the name of the DB cluster
                      backup to restore from
                    type: string
                  pitr:
                    description: PITR is the point-in-time recovery configuration
                    properties:
                      date:
                        description: 'Date is the UTC date to recover to. The accepted
                          format: "2006-01-02T15:04:05Z".'
                        type: string
                      type:
                        default: date
                        description: Type is the type of recovery.
                        enum:
                        - date
                        - latest
                        type: string
                    type: object
                type: object
              dbClusterName:
                description: DBClusterName defines the cluster name to restore.
                type: string
            required:
            - dataSource
            - dbClusterName
            type: object
          status:
            description: DatabaseClusterRestoreStatus defines the observed state of
              DatabaseClusterRestore.
            properties:
              completed:
                format: date-time
                type: string
              message:
                type: string
              state:
                description: RestoreState represents state of restoration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/crds/databaseclusters.everest.percona.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "everest-crds.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseclusters.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseCluster
    listKind: DatabaseClusterList
    plural: databaseclusters
    shortNames:
    - db
    - dbc
    - dbcluster
    singular: databasecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.size
      name: Size
      type: string
    - jsonPath: .status.ready
      name: Ready
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.hostname
      name: Hostname
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseCluster is the Schema for the databaseclusters API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object.

              Servers should convert recognized schemas to the latest internal value,
              and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents.

              Servers may infer this from the endpoint the client submits requests
              to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseClusterSpec defines the desired state of DatabaseCluster.
            properties:
              allowUnsafeConfiguration:
                description: 'AllowUnsafeConfiguration field used to ensure that the
                  user can create configurations unfit for production use.


                  Deprecated: AllowUnsafeConfiguration will not be supported in the
                  future releases.'
                type: boolean
              backup:
                description: Backup is the backup specification
                properties:
                  enabled:
                    description: 'Enabled is a flag to enable backups

                      Deprecated. Please use db.spec.backup.schedules[].enabled to
                      control each schedule separately and db.spec.backup.pitr.enabled
                      to control PITR.'
                    type: boolean
                  pitr:
                    description: PITR is the configuration of the point in time recovery
                    properties:
                      backupStorageName:
                        description: 'BackupStorageName is the name of the BackupStorage
                          where the PITR is enabled

                          The BackupStorage must be created in the same namespace
                          as the DatabaseCluster.'
                        type: string
                      enabled:
                        description: Enabled is a flag to enable PITR
                        type: boolean
                      uploadIntervalSec:
                        description: UploadIntervalSec number of seconds between the
                          binlogs uploads
                        type: integer
                    required:
                    - enabled
                    type: object
                  schedules:
                    description: Schedules is a list of backup schedules
                    items:
                      description: BackupSchedule is the backup schedule configuration.
                      properties:
                        backupStorageName:
                          description: 'BackupStorageName is the name of the BackupStorage
                            CR that defines the

                            storage location.

                            The BackupStorage must be created in the same namespace
                            as the DatabaseCluster.'
                          type: string
                        enabled:
                          description: Enabled is a flag to enable the schedule
                          type: boolean
                        name:
                          description: Name is the name of the schedule
                          type: string
                        retentionCopies:
                          description: RetentionCopies is the number of backup copies
                            to retain
                          format: int32
                          type: integer
                        schedule:
                          description: Schedule is the cron schedule
                          type: string
                      required:
                      - backupStorageName
                      - enabled
                      - name
                      - schedule
                      type: object
                    type: array
                type: object
              dataSource:
                description: DataSource defines a data source for bootstraping a new
                  cluster
                properties:
                  backupSource:
                    description: BackupSource is the backup source to restore from
                    properties:
                      backupStorageName:
                        description: 'BackupStorageName is the name of the BackupStorage
                          used for backups.

                          The BackupStorage must be created in the same namespace
                          as the DatabaseCluster.'
                        type: string
                      path:
                        description: Path is the path to the backup file/directory.
                        type: string
                    required:
                    - backupStorageName
                    - path
                    type: object
                  dbClusterBackupName:
                    description: DBClusterBackupName is the name of the DB cluster
                      backup to restore from
                    type: string
                  pitr:
                    description: PITR is the point-in-time recovery configuration
                    properties:
                      date:
                        description: 'Date is the UTC date to recover to. The accepted
                          format: "2006-01-02T15:04:05Z".'
                        type: string
                      type:
                        default: date
                        description: Type is the type of recovery.
                        enum:
                        - date
                        - latest
                        type: string
                    type: object
                type: object
              engine:
                description: Engine is the database engine specification
                properties:
                  config:
                    description: Config is the engine configuration
                    type: string
                  crVersion:
                    description: 'CRVersion is the desired version of the CR to use
                      with the

                      underlying operator.

                      If unspecified, everest-operator will use the same version as
                      the operator.


                      NOTE: Updating this property post installation may lead to a
                      restart of the cluster.'
                    type: string
                  replicas:
                    description: Replicas is the number of engine replicas
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    description: 'Resources are the resource limits for each engine
                      replica.

                      If not set, resource limits are not imposed'
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU is the CPU resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory is the memory resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  storage:
                    description: Storage is the engine storage configuration
                    properties:
                      class:
                        description: Class is the storage class to use for the persistent
                          volume claim
                        type: string
                      size:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Size is the size of the persistent volume claim
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    required:
                    - size
                    type: object
                  type:
                    description: Type is the engine type
                    enum:
                    - pxc
                    - postgresql
                    - psmdb
                    type: string
                  userSecretsName:
                    description: UserSecretsName is the name of the secret containing
                      the user secrets
                    type: string
                  version:
                    description: Version is the engine version
                    type: string
                required:
                - storage
                - type
                type: object
              monitoring:
                description: Monitoring is the monitoring configuration
                properties:
                  monitoringConfigName:
                    description: 'MonitoringConfigName is the name of a monitoringConfig
                      CR.

                      The MonitoringConfig must be created in the same namespace as
                      the DatabaseCluster.'
                    type: string
                  resources:
                    description: Resources defines resource limitations for the monitoring.
                    properties:
                      claims:
                        description: 'Claims lists the names of resources, defined
                          in spec.resourceClaims,

                          that are used by this container.


                          This is an alpha field and requires enabling the

                          DynamicResourceAllocation feature gate.


                          This field is immutable. It can only be set for containers.'
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: 'Name must match the name of one entry
                                in pod.spec.resourceClaims of

                                the Pod where this field is used. It makes that resource
                                available

                                inside a container.'
                              type: string
                            request:
                              description: 'Request is the name chosen for a request
                                in the referenced claim.

                                If empty, everything from the claim is made available,
                                otherwise

                                only the result of this request.'
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Limits describes the maximum amount of compute
                          resources allowed.

                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: 'Requests describes the minimum amount of compute
                          resources required.

                          If Requests is omitted for a container, it defaults to Limits
                          if that is explicitly specified,

                          otherwise to an implementation-defined value. Requests cannot
                          exceed Limits.

                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                    type: object
                type: object
              paused:
                description: Paused is a flag to stop the cluster
                type: boolean
              proxy:
                description: 'Proxy is the proxy specification. If not set, an appropriate

                  proxy specification will be applied for the given engine. A

                  common use case for setting this field is to control the

                  external access to the database cluster.'
                properties:
                  config:
                    description: Config is the proxy configuration
                    type: string
                  expose:
                    description: Expose is the proxy expose configuration
                    properties:
                      ipSourceRanges:
                        description: 'IPSourceRanges is the list of IP source ranges
                          (CIDR notation)

                          to allow access from. If not set, there is no limitations'
                        items:
                          description: IPSourceRange represents IP addresses in CIDR
                            notation or without a netmask.
                          type: string
                        type: array
                      type:
                        default: internal
                        description: Type is the expose type, can be internal or external
                        enum:
                        - internal
                        - external
                        type: string
                    type: object
                  replicas:
                    description: Replicas is the number of proxy replicas
                    format: int32
                    minimum: 1
                    type: integer
                  resources:
                    description: 'Resources are the resource limits for each proxy
                      replica.

                      If not set, resource limits are not imposed'
                    properties:
                      cpu:
                        anyOf:
                        - type: integer
                        - type: string
                        description: CPU is the CPU resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      memory:
                        anyOf:
                        - type: integer
                        - type: string
                        description: Memory is the memory resource requirements
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  type:
                    description: Type is the proxy type
                    enum:
                    - mongos
                    - haproxy
                    - proxysql
                    - pgbouncer
                    type: string
                type: object
              sharding:
                description: Sharding is the sharding configuration. PSMDB-only
                properties:
                  configServer:
                    description: ConfigServer represents the sharding configuration
                      server settings
                    properties:
                      replicas:
                        description: Replicas is the amount of configServers
                        format: int32
                        minimum: 1
                        type: integer
                    required:
                    - replicas
                    type: object
                  enabled:
                    description: Enabled defines if the sharding is enabled
                    type: boolean
                  shards:
                    description: Shards defines the number of shards
                    format: int32
                    minimum: 1
                    type: integer
                required:
                - configServer
                - enabled
                - shards
                type: object
            required:
            - engine
            type: object
          status:
            description: DatabaseClusterStatus defines the observed state of DatabaseCluster.
            properties:
              activeStorage:
                description: ActiveStorage is the storage used in cluster (psmdb only)
                type: string
              conditions:
                description: Conditions contains the observed conditions of the DatabaseCluster.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: 'lastTransitionTime is the last time the condition
                        transitioned from one status to another.

                        This should be when the underlying condition changed.  If
                        that is not known, then using the time when the API field
                        changed is acceptable.'
                      format: date-time
                      type: string
                    message:
                      description: 'message is a human readable message indicating
                        details about the transition.

                        This may be an empty string.'
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: 'observedGeneration represents the .metadata.generation
                        that the condition was set based upon.

                        For instance, if .metadata.generation is currently 12, but
                        the .status.conditions[x].observedGeneration is 9, the condition
                        is out of date

                        with respect to the current state of the instance.'
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: 'reason contains a programmatic identifier indicating
                        the reason for the condition''s last transition.

                        Producers of specific condition types may define expected
                        values and meanings for this field,

                        and whether the values are considered a guaranteed API.

                        The value should be a CamelCase string.

                        This field may not be empty.'
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              crVersion:
                description: CRVersion is the observed version of the CR used with
                  the underlying operator.
                type: string
              details:
                description: Details provides full status of the upstream cluster
                  as a plain text.
                type: string
              hostname:
                description: Hostname is the hostname where the cluster can be reached
                type: string
              message:
                description: Message is extra information about the cluster
                type: string
              observedGeneration:
                description: ObservedGeneration is the most recent generation observed
                  for this DatabaseCluster.
                format: int64
                type: integer
              port:
                description: Port is the port where the cluster can be reached
                format: int32
                type: integer
              ready:
                description: Ready is the number of ready pods
                format: int32
                type: integer
              recommendedCRVersion:
                description: 'RecommendedCRVersion is the recommended version of the
                  CR to use.

                  If set, the CR needs to be updated to this version before upgrading
                  the operator.

                  If unset, the CR is already at the recommended version.'
                type: string
              size:
                description: Size is the total number of pods
                format: int32
                type: integer
              status:
                description: Status is the status of the cluster
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/crds/databaseengines.everest.percona.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "everest-crds.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: databaseengines.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: DatabaseEngine
    listKind: DatabaseEngineList
    plural: databaseengines
    shortNames:
    - dbengine
    singular: databaseengine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.type
      name: Type
      type: string
    - jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .status.operatorVersion
      name: Operator Version
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DatabaseEngine is the Schema for the databaseengines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object.

              Servers should convert recognized schemas to the latest internal value,
              and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents.

              Servers may infer this from the endpoint the client submits requests
              to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DatabaseEngineSpec is a spec for a database engine.
            properties:
              allowedVersions:
                items:
                  type: string
                type: array
              type:
                description: 'EngineType stands for the supported database engines.
                  Right now it''s only pxc

                  and psmdb. However, it can be ps, pg and any other source.'
                type: string
            required:
            - type
            type: object
          status:
            description: DatabaseEngineStatus defines the observed state of DatabaseEngine.
            properties:
              availableVersions:
                description: Versions struct represents available versions of database
                  engine components.
                properties:
                  backup:
                    additionalProperties:
                      description: 'Component contains information of the database
                        engine component.

                        Database Engine component can be database engine, database
                        proxy or tools image path.'
                      properties:
                        critical:
                          type: boolean
                        imageHash:
                          type: string
                        imagePath:
                          type: string
                        status:
                          description: ComponentStatus represents status of the database
                            engine component.
                          type: string
                      type: object
                    description: ComponentsMap is a map of database engine components.
                    type: object
                  engine:
                    additionalProperties:
                      description: 'Component contains information of the database
                        engine component.

                        Database Engine component can be database engine, database
                        proxy or tools image path.'
                      properties:
                        critical:
                          type: boolean
                        imageHash:
                          type: string
                        imagePath:
                          type: string
                        status:
                          description: ComponentStatus represents status of the database
                            engine component.
                          type: string
                      type: object
                    description: ComponentsMap is a map of database engine components.
                    type: object
                  proxy:
                    additionalProperties:
                      additionalProperties:
                        description: 'Component contains information of the database
                          engine component.

                          Database Engine component can be database engine, database
                          proxy or tools image path.'
                        properties:
                          critical:
                            type: boolean
                          imageHash:
                            type: string
                          imagePath:
                            type: string
                          status:
                            description: ComponentStatus represents status of the
                              database engine component.
                            type: string
                        type: object
                      description: ComponentsMap is a map of database engine components.
                      type: object
                    type: object
                  tools:
                    additionalProperties:
                      additionalProperties:
                        description: 'Component contains information of the database
                          engine component.

                          Database Engine component can be database engine, database
                          proxy or tools image path.'
                        properties:
                          critical:
                            type: boolean
                          imageHash:
                            type: string
                          imagePath:
                            type: string
                          status:
                            description: ComponentStatus represents status of the
                              database engine component.
                            type: string
                        type: object
                      description: ComponentsMap is a map of database engine components.
                      type: object
                    type: object
                type: object
              operatorUpgrade:
                description: OperatorUpgrade contains the status of the operator upgrade.
                properties:
                  installPlanRef:
                    description: 'InstallPlanRef is a reference to the InstallPlan
                      object created for the operator upgrade.


                      We do not recommended approving this InstallPlan directly from
                      the Kubernetes API.

                      This is because this InstallPlan may also upgrade other operators
                      in the namespace and that

                      can have unintended consequences.

                      This behaviour is not a bug from Everest, but an unfortunate
                      limitation of OLM.

                      We suggest using the Everest API/UI to handle operator upgrades,
                      which will perform a series

                      of checks and safely upgrade all operators in the namespace.'
                    properties:
                      name:
                        default: ''
                        description: 'Name of the referent.

                          This field is effectively required, but due to backwards
                          compatibility is

                          allowed to be empty. Instances of this type with an empty
                          value here are

                          almost certainly wrong.

                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  message:
                    type: string
                  phase:
                    description: UpgradePhase represents the phase of the operator
                      upgrade.
                    type: string
                  startedAt:
                    format: date-time
                    type: string
                  targetVersion:
                    description: TargetVersion is the version to which the operator
                      should be upgraded.
                    type: string
                type: object
              operatorVersion:
                type: string
              pendingOperatorUpgrades:
                items:
                  description: OperatorUpgrade contains the information about the
                    operator upgrade.
                  properties:
                    installPlanRef:
                      description: 'InstallPlanRef is a reference to the InstallPlan
                        object created for the operator upgrade.


                        We do not recommended approving this InstallPlan directly
                        from the Kubernetes API.

                        This is because this InstallPlan may also upgrade other operators
                        in the namespace and that

                        can have unintended consequences.

                        This behaviour is not a bug from Everest, but an unfortunate
                        limitation of OLM.

                        We suggest using the Everest API/UI to handle operator upgrades,
                        which will perform a series

                        of checks and safely upgrade all operators in the namespace.'
                      properties:
                        name:
                          default: ''
                          description: 'Name of the referent.

                            This field is effectively required, but due to backwards
                            compatibility is

                            allowed to be empty. Instances of this type with an empty
                            value here are

                            almost certainly wrong.

                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    targetVersion:
                      description: TargetVersion is the version to which the operator
                        should be upgraded.
                      type: string
                  type: object
                type: array
              status:
                description: EngineState represents state of engine in a k8s cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/crds/monitoringconfigs.everest.percona.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "everest-crds.labels" . | nindent 4 }}
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: monitoringconfigs.everest.percona.com
spec:
  group: everest.percona.com
  names:
    kind: MonitoringConfig
    listKind: MonitoringConfigList
    plural: monitoringconfigs
    singular: monitoringconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Monitoring instance type
      jsonPath: .spec.type
      name: Type
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MonitoringConfig is the Schema for the monitoringconfigs API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object.

              Servers should convert recognized schemas to the latest internal value,
              and

              may reject unrecognized values.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents.

              Servers may infer this from the endpoint the client submits requests
              to.

              Cannot be updated.

              In CamelCase.

              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitoringConfigSpec defines the desired state of MonitoringConfig.
            properties:
              allowedNamespaces:
                description: AllowedNamespaces is the list of namespaces where the
                  operator will copy secrets provided in the CredentialsSecretsName.
                items:
                  type: string
                type: array
              credentialsSecretName:
                description: CredentialsSecretName is the name of the secret with
                  credentials.
                type: string
              pmm:
                description: PMM is configuration for the PMM monitoring type.
                properties:
                  image:
                    description: Image is a Docker image name to use for deploying
                      PMM client. Defaults to using the latest version.
                    type: string
                  url:
                    description: URL is url to the monitoring instance.
                    type: string
                required:
                - image
                - url
                type: object
              type:
                description: Type is type of monitoring.
                enum:
                - pmm
                type: string
              verifyTLS:
                default: true
                description: 'VerifyTLS is set to ensure TLS/SSL verification.

                  If unspecified, the default value is true.'
                type: boolean
            required:
            - credentialsSecretName
            - type
            type: object
          status:
            description: MonitoringConfigStatus defines the observed state of MonitoringConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/monitoring/charts/crds/crds/crd.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vlogs.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VLogs
    listKind: VLogsList
    plural: vlogs
    singular: vlogs
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of logs instance update process
      jsonPath: .status.status
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VLogs is fast, cost-effective and scalable logs database.
          VLogs is the Schema for the vlogs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VLogsSpec defines the desired state of VLogs
            properties:
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/configs/CONFIGMAP_NAME folder
                items:
                  type: string
                type: array
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              disableAutomountServiceAccountToken:
                description: |-
                  DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                  Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                  For example, vmagent and vm-config-reloader requires k8s API access.
                  Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                  And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                type: boolean
              disableSelfServiceScrape:
                description: |-
                  DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                  for the application.
                  Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                type: boolean
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                items:
                  x-kubernetes-preserve-unknown-fields: true
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: |-
                            Name is this DNS resolver option's name.
                            Required.
                          type: string
                        value:
                          description: Value is this DNS resolver option's value.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to the application container
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be passed to the application container
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              futureRetention:
                description: |-
                  FutureRetention for the stored logs
                  Log entries with timestamps bigger than now+futureRetention are rejected during data ingestion; see https://docs.victoriametrics.com/victorialogs/#retention
                type: string
              host_aliases:
                description: |-
                  HostAliasesUnderScore provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                  Has Priority over hostAliases field
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings
                  if no specified operator uses default version from operator config
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition.
                  Any errors during the execution of an initContainer will lead to a restart of the Pod.
                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: LogFormat for VLogs to be configured with.
                enum:
                - default
                - json
                type: string
              logIngestedRows:
                description: Whether to log all the ingested log entries; this can
                  be useful for debugging of data ingestion; see https://docs.victoriametrics.com/victorialogs/data-ingestion/
                type: boolean
              logLevel:
                description: LogLevel for VictoriaLogs to be configured with.
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              logNewStreams:
                description: LogNewStreams Whether to log creation of new streams;
                  this can be useful for debugging of high cardinality issues with
                  log streams; see https://docs.victoriametrics.com/victorialogs/keyconcepts/#stream-fields
                type: boolean
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                  if previous in healthy state
                  Has no effect for VLogs and VMSingle
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the VLogs pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen address
                type: string
              priorityClassName:
                description: PriorityClassName class assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              removePvcAfterDelete:
                description: |-
                  RemovePvcAfterDelete - if true, controller adds ownership to pvc
                  and after VLogs object deletion - pvc will be garbage collected
                  by controller manager
                type: boolean
              replicaCount:
                description: ReplicaCount is the expected size of the Application.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              retentionPeriod:
                description: RetentionPeriod for the stored logs
                type: string
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the Deployment revision history.
                  Has no effect at StatefulSets
                  Defaults to 10.
                format: int32
                type: integer
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/secrets/SECRET_NAME folder
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to use to run the pods
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vlogs VMServiceScrape
                  spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vlogs service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              storage:
                description: |-
                  Storage is the definition of how storage will be used by the VLogs
                  by default it`s empty dir
                properties:
                  accessModes:
                    description: |-
                      accessModes contains the desired access modes the volume should have.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  dataSource:
                    description: |-
                      dataSource field can be used to specify either:
                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim)
                      If the provisioner or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified data source.
                      When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                      and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                      If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  dataSourceRef:
                    description: |-
                      dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                      volume is desired. This may be any object from a non-empty API group (non
                      core object) or a PersistentVolumeClaim object.
                      When this field is specified, volume binding will only succeed if the type of
                      the specified object matches some installed volume populator or dynamic
                      provisioner.
                      This field will replace the functionality of the dataSource field and as such
                      if both fields are non-empty, they must have the same value. For backwards
                      compatibility, when namespace isn't specified in dataSourceRef,
                      both fields (dataSource and dataSourceRef) will be set to the same
                      value automatically if one of them is empty and the other is non-empty.
                      When namespace is specified in dataSourceRef,
                      dataSource isn't set to the same value and must be empty.
                      There are three important differences between dataSource and dataSourceRef:
                      * While dataSource only allows two specific types of objects, dataSourceRef
                        allows any non-core object, as well as PersistentVolumeClaim objects.
                      * While dataSource ignores disallowed values (dropping them), dataSourceRef
                        preserves all values, and generates an error if a disallowed value is
                        specified.
                      * While dataSource only allows local objects, dataSourceRef allows objects
                        in any namespaces.
                      (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                      (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of resource being referenced
                          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: |-
                      resources represents the minimum resources the volume should have.
                      If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                      that are lower than previous value but must still be higher than capacity recorded in the
                      status field of the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  selector:
                    description: selector is a label query over volumes to consider
                      for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClassName:
                    description: |-
                      storageClassName is the name of the StorageClass required by the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                    type: string
                  volumeAttributesClassName:
                    description: |-
                      volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                      If specified, the CSI driver will create or update the volume with the attributes defined
                      in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                      it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                      will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                      If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                      will be set by the persistentvolume controller if it exists.
                      If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                      set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                      exists.
                      More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                      (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                    type: string
                  volumeMode:
                    description: |-
                      volumeMode defines what type of volume is required by the claim.
                      Value of Filesystem is implied when not included in claim spec.
                    type: string
                  volumeName:
                    description: volumeName is the binding reference to the PersistentVolume
                      backing this claim.
                    type: string
                type: object
              storageDataPath:
                description: |-
                  StorageDataPath disables spec.storage option and overrides arg for victoria-logs binary --storageDataPath,
                  its users responsibility to mount proper device into given path.
                type: string
              storageMetadata:
                description: StorageMeta defines annotations and labels attached to
                  PVC for given vlogs CR
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              useDefaultResources:
                description: |-
                  UseDefaultResources controls resource settings
                  By default, operator sets built-in resource requirements
                type: boolean
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the Application container
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                  Volumes specified will be appended to other volumes that are generated.
                  / +optional
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            required:
            - retentionPeriod
            type: object
          status:
            description: VLogsStatus defines the observed state of VLogs
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmagents.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMAgent
    listKind: VMAgentList
    plural: vmagents
    singular: vmagent
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: current number of shards
      jsonPath: .status.shards
      name: Shards Count
      type: integer
    - description: current number of replicas
      jsonPath: .status.replicas
      name: Replica Count
      type: integer
    - description: Current status of update rollout
      jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VMAgent - is a tiny but brave agent, which helps you collect metrics from various sources and stores them in VictoriaMetrics
          or any other Prometheus-compatible storage system that supports the remote_write protocol.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMAgentSpec defines the desired state of VMAgent
            properties:
              aPIServerConfig:
                description: |-
                  APIServerConfig allows specifying a host and auth methods to access apiserver.
                  If left empty, VMAgent is assumed to run inside of the cluster
                  and will discover API servers automatically and use the pod's CA certificate
                  and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
                  aPIServerConfig is deprecated use apiServerConfig instead
                required:
                - host
                type: object
                x-kubernetes-preserve-unknown-fields: true
              additionalScrapeConfigs:
                description: |-
                  AdditionalScrapeConfigs As scrape configs are appended, the user is responsible to make sure it
                  is valid. Note that using this feature may expose the possibility to
                  break upgrades of VMAgent. It is advised to review VMAgent release
                  notes to ensure that no incompatible scrape configs are going to break
                  VMAgent after the upgrade.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              apiServerConfig:
                description: |-
                  APIServerConfig allows specifying a host and auth methods to access apiserver.
                  If left empty, VMAgent is assumed to run inside of the cluster
                  and will discover API servers automatically and use the pod's CA certificate
                  and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
                properties:
                  authorization:
                    description: Authorization configures generic authorization params
                    properties:
                      credentials:
                        description: Reference to the secret with value for authorization
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      credentialsFile:
                        description: File with value for authorization
                        type: string
                      type:
                        description: Type of authorization, default to bearer
                        type: string
                    type: object
                  basicAuth:
                    description: BasicAuth allow an endpoint to authenticate over
                      basic authentication
                    properties:
                      password:
                        description: |-
                          Password defines reference for secret with password value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      password_file:
                        description: |-
                          PasswordFile defines path to password file at disk
                          must be pre-mounted
                        type: string
                      username:
                        description: |-
                          Username defines reference for secret with username value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  bearerToken:
                    description: Bearer token for accessing apiserver.
                    type: string
                  bearerTokenFile:
                    description: File to read bearer token for accessing apiserver.
                    type: string
                  host:
                    description: |-
                      Host of apiserver.
                      A valid string consisting of a hostname or IP followed by an optional port number
                    type: string
                  tlsConfig:
                    description: TLSConfig Config to use for accessing apiserver.
                    properties:
                      ca:
                        description: Stuct containing the CA cert to use for the targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      caFile:
                        description: Path to the CA cert in the container to use for
                          the targets.
                        type: string
                      cert:
                        description: Struct containing the client cert file for the
                          targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      certFile:
                        description: Path to the client cert file in the container
                          for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: Path to the client key file in the container
                          for the targets.
                        type: string
                      keySecret:
                        description: Secret containing the client key file for the
                          targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                required:
                - host
                type: object
              arbitraryFSAccessThroughSMs:
                description: |-
                  ArbitraryFSAccessThroughSMs configures whether configuration
                  based on EndpointAuth can access arbitrary files on the file system
                  of the VMAgent container e.g. bearer token files, basic auth, tls certs
                properties:
                  deny:
                    type: boolean
                type: object
              claimTemplates:
                description: ClaimTemplates allows adding additional VolumeClaimTemplates
                  for VMAgent in StatefulMode
                items:
                  description: PersistentVolumeClaim is a user's request for and claim
                    to a persistent volume
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: |-
                        spec defines the desired characteristics of a volume requested by a pod author.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        accessModes:
                          description: |-
                            accessModes contains the desired access modes the volume should have.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        dataSource:
                          description: |-
                            dataSource field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim)
                            If the provisioner or an external controller can support the specified data source,
                            it will create a new volume based on the contents of the specified data source.
                            When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                            and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                            If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                          x-kubernetes-map-type: atomic
                        dataSourceRef:
                          description: |-
                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                            volume is desired. This may be any object from a non-empty API group (non
                            core object) or a PersistentVolumeClaim object.
                            When this field is specified, volume binding will only succeed if the type of
                            the specified object matches some installed volume populator or dynamic
                            provisioner.
                            This field will replace the functionality of the dataSource field and as such
                            if both fields are non-empty, they must have the same value. For backwards
                            compatibility, when namespace isn't specified in dataSourceRef,
                            both fields (dataSource and dataSourceRef) will be set to the same
                            value automatically if one of them is empty and the other is non-empty.
                            When namespace is specified in dataSourceRef,
                            dataSource isn't set to the same value and must be empty.
                            There are three important differences between dataSource and dataSourceRef:
                            * While dataSource only allows two specific types of objects, dataSourceRef
                              allows any non-core object, as well as PersistentVolumeClaim objects.
                            * While dataSource ignores disallowed values (dropping them), dataSourceRef
                              preserves all values, and generates an error if a disallowed value is
                              specified.
                            * While dataSource only allows local objects, dataSourceRef allows objects
                              in any namespaces.
                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                            (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                            namespace:
                              description: |-
                                Namespace is the namespace of resource being referenced
                                Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: |-
                            resources represents the minimum resources the volume should have.
                            If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                            that are lower than previous value but must still be higher than capacity recorded in the
                            status field of the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        selector:
                          description: selector is a label query over volumes to consider
                            for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        storageClassName:
                          description: |-
                            storageClassName is the name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                          type: string
                        volumeAttributesClassName:
                          description: |-
                            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                            If specified, the CSI driver will create or update the volume with the attributes defined
                            in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                            it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                            will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                            If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                            will be set by the persistentvolume controller if it exists.
                            If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                            set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                            exists.
                            More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                            (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                          type: string
                        volumeMode:
                          description: |-
                            volumeMode defines what type of volume is required by the claim.
                            Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: volumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: |-
                        status represents the current information/status of a persistent volume claim.
                        Read-only.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        accessModes:
                          description: |-
                            accessModes contains the actual access modes the volume backing the PVC has.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        allocatedResourceStatuses:
                          additionalProperties:
                            description: |-
                              When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                              that it does not recognizes, then it should ignore that update and let other controllers
                              handle it.
                            type: string
                          description: "allocatedResourceStatuses stores status of
                            resource being resized for the given PVC.\nKey names follow
                            standard Kubernetes label syntax. Valid values are either:\n\t*
                            Un-prefixed keys:\n\t\t- storage - the capacity of the
                            volume.\n\t* Custom resources must use implementation-defined
                            prefixed names such as \"example.com/my-custom-resource\"\nApart
                            from above values - keys that are unprefixed or have kubernetes.io
                            prefix are considered\nreserved and hence may not be used.\n\nClaimResourceStatus
                            can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState
                            set when resize controller starts resizing the volume
                            in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                            set when resize has failed in resize controller with a
                            terminal error.\n\t- NodeResizePending:\n\t\tState set
                            when resize controller has finished resizing the volume
                            but further resizing of\n\t\tvolume is needed on the node.\n\t-
                            NodeResizeInProgress:\n\t\tState set when kubelet starts
                            resizing the volume.\n\t- NodeResizeFailed:\n\t\tState
                            set when resizing has failed in kubelet with a terminal
                            error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor
                            example: if expanding a PVC for more capacity - this field
                            can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                            = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"NodeResizeFailed\"\nWhen this field is not set, it
                            means that no resize operation is in progress for the
                            given PVC.\n\nA controller that receives PVC update with
                            previously unknown resourceName or ClaimResourceStatus\nshould
                            ignore the update for the purpose it was designed. For
                            example - a controller that\nonly is responsible for resizing
                            capacity of the volume, should ignore PVC updates that
                            change other valid\nresources associated with PVC.\n\nThis
                            is an alpha field and requires enabling RecoverVolumeExpansionFailure
                            feature."
                          type: object
                          x-kubernetes-map-type: granular
                        allocatedResources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: "allocatedResources tracks the resources allocated
                            to a PVC including its capacity.\nKey names follow standard
                            Kubernetes label syntax. Valid values are either:\n\t*
                            Un-prefixed keys:\n\t\t- storage - the capacity of the
                            volume.\n\t* Custom resources must use implementation-defined
                            prefixed names such as \"example.com/my-custom-resource\"\nApart
                            from above values - keys that are unprefixed or have kubernetes.io
                            prefix are considered\nreserved and hence may not be used.\n\nCapacity
                            reported here may be larger than the actual capacity when
                            a volume expansion operation\nis requested.\nFor storage
                            quota, the larger value from allocatedResources and PVC.spec.resources
                            is used.\nIf allocatedResources is not set, PVC.spec.resources
                            alone is used for quota calculation.\nIf a volume expansion
                            capacity request is lowered, allocatedResources is only\nlowered
                            if there are no expansion operations in progress and if
                            the actual volume capacity\nis equal or lower than the
                            requested capacity.\n\nA controller that receives PVC
                            update with previously unknown resourceName\nshould ignore
                            the update for the purpose it was designed. For example
                            - a controller that\nonly is responsible for resizing
                            capacity of the volume, should ignore PVC updates that
                            change other valid\nresources associated with PVC.\n\nThis
                            is an alpha field and requires enabling RecoverVolumeExpansionFailure
                            feature."
                          type: object
                        capacity:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: capacity represents the actual resources of
                            the underlying volume.
                          type: object
                        conditions:
                          description: |-
                            conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                            resized then the Condition will be set to 'Resizing'.
                          items:
                            description: PersistentVolumeClaimCondition contains details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: lastProbeTime is the time we probed the
                                  condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: lastTransitionTime is the time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: message is the human-readable message
                                  indicating details about last transition.
                                type: string
                              reason:
                                description: |-
                                  reason is a unique, this should be a short, machine understandable string that gives the reason
                                  for condition's last transition. If it reports "Resizing" that means the underlying
                                  persistent volume is being resized.
                                type: string
                              status:
                                description: |-
                                  Status is the status of the condition.
                                  Can be True, False, Unknown.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                type: string
                              type:
                                description: |-
                                  Type is the type of the condition.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        currentVolumeAttributesClassName:
                          description: |-
                            currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                            When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                            This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                          type: string
                        modifyVolumeStatus:
                          description: |-
                            ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                            When this is unset, there is no ModifyVolume operation being attempted.
                            This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                          properties:
                            status:
                              description: "status is the status of the ControllerModifyVolume
                                operation. It can be in any of following states:\n
                                - Pending\n   Pending indicates that the PersistentVolumeClaim
                                cannot be modified due to unmet requirements, such
                                as\n   the specified VolumeAttributesClass not existing.\n
                                - InProgress\n   InProgress indicates that the volume
                                is being modified.\n - Infeasible\n  Infeasible indicates
                                that the request has been rejected as invalid by the
                                CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass
                                needs to be specified.\nNote: New statuses can be
                                added in the future. Consumers should check for unknown
                                statuses and fail appropriately."
                              type: string
                            targetVolumeAttributesClassName:
                              description: targetVolumeAttributesClassName is the
                                name of the VolumeAttributesClass the PVC currently
                                being reconciled
                              type: string
                          required:
                          - status
                          type: object
                        phase:
                          description: phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
                type: array
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/configs/CONFIGMAP_NAME folder
                items:
                  type: string
                type: array
              configReloaderExtraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container
                  for example resyncInterval: "30s"
                type: object
              configReloaderImageTag:
                description: ConfigReloaderImageTag defines image:tag for config-reloader
                  container
                type: string
              configReloaderResources:
                description: |-
                  ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              disableAutomountServiceAccountToken:
                description: |-
                  DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                  Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                  For example, vmagent and vm-config-reloader requires k8s API access.
                  Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                  And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                type: boolean
              disableSelfServiceScrape:
                description: |-
                  DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                  for the application.
                  Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                type: boolean
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                items:
                  x-kubernetes-preserve-unknown-fields: true
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: |-
                            Name is this DNS resolver option's name.
                            Required.
                          type: string
                        value:
                          description: Value is this DNS resolver option's value.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              enforcedNamespaceLabel:
                description: |-
                  EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert
                  and metric that is user created. The label value will always be the namespace of the object that is
                  being created.
                type: string
              externalLabels:
                additionalProperties:
                  type: string
                description: |-
                  ExternalLabels The labels to add to any time series scraped by vmagent.
                  it doesn't affect metrics ingested directly by push API's
                type: object
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to the application container
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be passed to the application container
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              host_aliases:
                description: |-
                  HostAliasesUnderScore provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                  Has Priority over hostAliases field
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              ignoreNamespaceSelectors:
                description: |-
                  IgnoreNamespaceSelectors if set to true will ignore NamespaceSelector settings from
                  scrape objects, and they will only discover endpoints
                  within their current namespace.  Defaults to false.
                type: boolean
              image:
                description: |-
                  Image - docker image settings
                  if no specified operator uses default version from operator config
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              ingestOnlyMode:
                description: |-
                  IngestOnlyMode switches vmagent into unmanaged mode
                  it disables any config generation for scraping
                  Currently it prevents vmagent from managing tls and auth options for remote write
                type: boolean
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition.
                  Any errors during the execution of an initContainer will lead to a restart of the Pod.
                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              inlineRelabelConfig:
                description: InlineRelabelConfig - defines GlobalRelabelConfig for
                  vmagent, can be defined directly at CRD.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              inlineScrapeConfig:
                description: |-
                  InlineScrapeConfig As scrape configs are appended, the user is responsible to make sure it
                  is valid. Note that using this feature may expose the possibility to
                  break upgrades of VMAgent. It is advised to review VMAgent release
                  notes to ensure that no incompatible scrape configs are going to break
                  VMAgent after the upgrade.
                  it should be defined as single yaml file.
                  inlineScrapeConfig: |
                      - job_name: "prometheus"
                        static_configs:
                        - targets: ["localhost:9090"]
                type: string
              insertPorts:
                description: InsertPorts - additional listen ports for data ingestion.
                properties:
                  graphitePort:
                    description: GraphitePort listen port
                    type: string
                  influxPort:
                    description: InfluxPort listen port
                    type: string
                  openTSDBHTTPPort:
                    description: OpenTSDBHTTPPort for http connections.
                    type: string
                  openTSDBPort:
                    description: OpenTSDBPort for tcp and udp listen
                    type: string
                type: object
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See [here](https://docs.victoriametrics.com/enterprise)
                properties:
                  forceOffline:
                    description: Enforce offline verification of the license key.
                    type: boolean
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in [VictoriaMetrics enterprise](https://docs.victoriametrics.com/enterprise).
                      To request a trial license, [go to](https://victoriametrics.com/products/enterprise/trial)
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  reloadInterval:
                    description: Interval to be used for checking for license key
                      changes. Note that this is only applicable when using KeyRef.
                    type: string
                type: object
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: LogFormat for VMAgent to be configured with.
                enum:
                - default
                - json
                type: string
              logLevel:
                description: |-
                  LogLevel for VMAgent to be configured with.
                  INFO, WARN, ERROR, FATAL, PANIC
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              maxScrapeInterval:
                description: |-
                  MaxScrapeInterval allows limiting maximum scrape interval for VMServiceScrape, VMPodScrape and other scrapes
                  If interval is higher than defined limit, `maxScrapeInterval` will be used.
                type: string
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                  if previous in healthy state
                  Has no effect for VLogs and VMSingle
                format: int32
                type: integer
              minScrapeInterval:
                description: |-
                  MinScrapeInterval allows limiting minimal scrape interval for VMServiceScrape, VMPodScrape and other scrapes
                  If interval is lower than defined limit, `minScrapeInterval` will be used.
                type: string
              nodeScrapeNamespaceSelector:
                description: |-
                  NodeScrapeNamespaceSelector defines Namespaces to be selected for VMNodeScrape discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              nodeScrapeRelabelTemplate:
                description: |-
                  NodeScrapeRelabelTemplate defines relabel config, that will be added to each VMNodeScrape.
                  it's useful for adding specific labels to all targets
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              nodeScrapeSelector:
                description: |-
                  NodeScrapeSelector defines VMNodeScrape to be selected for scraping.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              overrideHonorLabels:
                description: |-
                  OverrideHonorLabels if set to true overrides all user configured honor_labels.
                  If HonorLabels is set in scrape objects  to true, this overrides honor_labels to false.
                type: boolean
              overrideHonorTimestamps:
                description: OverrideHonorTimestamps allows to globally enforce honoring
                  timestamps in all scrape configs.
                type: boolean
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podDisruptionBudget:
                description: PodDisruptionBudget created by operator
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at most "maxUnavailable" pods selected by
                      "selector" are unavailable after the eviction, i.e. even in absence of
                      the evicted pod. For example, one can prevent all voluntary evictions
                      by specifying 0. This is a mutually exclusive setting with "minAvailable".
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at least "minAvailable" pods selected by
                      "selector" will still be available after the eviction, i.e. even in the
                      absence of the evicted pod.  So for example you can prevent all voluntary
                      evictions by specifying "100%".
                    x-kubernetes-int-or-string: true
                  selectorLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      replaces default labels selector generated by operator
                      it's useful when you need to create custom budget
                    type: object
                type: object
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the vmagent pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              podScrapeNamespaceSelector:
                description: |-
                  PodScrapeNamespaceSelector defines Namespaces to be selected for VMPodScrape discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              podScrapeRelabelTemplate:
                description: |-
                  PodScrapeRelabelTemplate defines relabel config, that will be added to each VMPodScrape.
                  it's useful for adding specific labels to all targets
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              podScrapeSelector:
                description: |-
                  PodScrapeSelector defines PodScrapes to be selected for target discovery.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              port:
                description: Port listen address
                type: string
              priorityClassName:
                description: PriorityClassName class assigned to the Pods
                type: string
              probeNamespaceSelector:
                description: |-
                  ProbeNamespaceSelector defines Namespaces to be selected for VMProbe discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              probeScrapeRelabelTemplate:
                description: |-
                  ProbeScrapeRelabelTemplate defines relabel config, that will be added to each VMProbeScrape.
                  it's useful for adding specific labels to all targets
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              probeSelector:
                description: |-
                  ProbeSelector defines VMProbe to be selected for target probing.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              relabelConfig:
                description: |-
                  RelabelConfig ConfigMap with global relabel config -remoteWrite.relabelConfig
                  This relabeling is applied to all the collected metrics before sending them to remote storage.
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the ConfigMap or its key must be
                      defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              remoteWrite:
                description: |-
                  RemoteWrite list of victoria metrics /some other remote write system
                  for vm it must looks like: http://victoria-metrics-single:8429/api/v1/write
                  or for cluster different url
                  https://github.com/VictoriaMetrics/VictoriaMetrics/tree/master/app/vmagent#splitting-data-streams-among-multiple-systems
                items:
                  description: VMAgentRemoteWriteSpec defines the remote storage configuration
                    for VmAgent
                  properties:
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    bearerTokenSecret:
                      description: Optional bearer auth token to use for -remoteWrite.url
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    forceVMProto:
                      description: ForceVMProto forces using VictoriaMetrics protocol
                        for sending data to -remoteWrite.url
                      type: boolean
                    headers:
                      description: |-
                        Headers allow configuring custom http headers
                        Must be in form of semicolon separated header with value
                        e.g.
                        headerName: headerValue
                        vmagent supports since 1.79.0 version
                      items:
                        type: string
                      type: array
                    inlineUrlRelabelConfig:
                      description: InlineUrlRelabelConfig defines relabeling config
                        for remoteWriteURL, it can be defined at crd spec.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    maxDiskUsage:
                      description: MaxDiskUsage defines the maximum file-based buffer
                        size in bytes for -remoteWrite.url
                      type: string
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    sendTimeout:
                      description: Timeout for sending a single block of data to -remoteWrite.url
                        (default 1m0s)
                      pattern: '[0-9]+(ms|s|m|h)'
                      type: string
                    streamAggrConfig:
                      description: StreamAggrConfig defines stream aggregation configuration
                        for VMAgent for -remoteWrite.url
                      properties:
                        configmap:
                          description: ConfigMap with stream aggregation rules
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        dedupInterval:
                          description: Allows setting different de-duplication intervals
                            per each configured remote storage
                          type: string
                        dropInput:
                          description: Allow drop all the input samples after the
                            aggregation
                          type: boolean
                        dropInputLabels:
                          description: labels to drop from samples for aggregator
                            before stream de-duplication and aggregation
                          items:
                            type: string
                          type: array
                        enableWindows:
                          description: EnableWindows enables aggregating data in separate
                            windows ( available from v0.54.0).
                          type: boolean
                        ignoreFirstIntervals:
                          description: IgnoreFirstIntervals instructs to ignore first
                            interval
                          type: integer
                        ignoreOldSamples:
                          description: IgnoreOldSamples instructs to ignore samples
                            with old timestamps outside the current aggregation interval.
                          type: boolean
                        keepInput:
                          description: Allows writing both raw and aggregate data
                          type: boolean
                        rules:
                          description: Stream aggregation rules
                          items:
                            description: StreamAggrRule defines the rule in stream
                              aggregation config
                            properties:
                              by:
                                description: |-
                                  By is an optional list of labels for grouping input series.

                                  See also Without.

                                  If neither By nor Without are set, then the Outputs are calculated
                                  individually per each input time series.
                                items:
                                  type: string
                                type: array
                              dedup_interval:
                                description: DedupInterval is an optional interval
                                  for deduplication.
                                type: string
                              drop_input_labels:
                                description: |-
                                  DropInputLabels is an optional list with labels, which must be dropped before further processing of input samples.

                                  Labels are dropped before de-duplication and aggregation.
                                items:
                                  type: string
                                type: array
                              enable_windows:
                                description: EnableWindows enables aggregating data
                                  in separate windows
                                type: boolean
                              flush_on_shutdown:
                                description: |-
                                  FlushOnShutdown defines whether to flush the aggregation state on process termination
                                  or config reload. Is `false` by default.
                                  It is not recommended changing this setting, unless unfinished aggregations states
                                  are preferred to missing data points.
                                type: boolean
                              ignore_first_intervals:
                                type: integer
                              ignore_old_samples:
                                description: IgnoreOldSamples instructs to ignore
                                  samples with old timestamps outside the current
                                  aggregation interval.
                                type: boolean
                              input_relabel_configs:
                                description: |-
                                  InputRelabelConfigs is an optional relabeling rules, which are applied on the input
                                  before aggregation.
                                items:
                                  description: |-
                                    RelabelConfig allows dynamic rewriting of the label set
                                    More info: https://docs.victoriametrics.com/#relabeling
                                  properties:
                                    action:
                                      description: Action to perform based on regex
                                        matching. Default is 'replace'
                                      type: string
                                    if:
                                      description: 'If represents metricsQL match
                                        expression (or list of expressions): ''{__name__=~"foo_.*"}'''
                                      x-kubernetes-preserve-unknown-fields: true
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: 'Labels is used together with Match
                                        for `action: graphite`'
                                      type: object
                                    match:
                                      description: 'Match is used together with Labels
                                        for `action: graphite`'
                                      type: string
                                    modulus:
                                      description: Modulus to take of the hash of
                                        the source label values.
                                      format: int64
                                      type: integer
                                    regex:
                                      description: |-
                                        Regular expression against which the extracted value is matched. Default is '(.*)'
                                        victoriaMetrics supports multiline regex joined with |
                                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                      x-kubernetes-preserve-unknown-fields: true
                                    replacement:
                                      description: |-
                                        Replacement value against which a regex replace is performed if the
                                        regular expression matches. Regex capture groups are available. Default is '$1'
                                      type: string
                                    separator:
                                      description: Separator placed between concatenated
                                        source label values. default is ';'.
                                      type: string
                                    source_labels:
                                      description: |-
                                        UnderScoreSourceLabels - additional form of source labels source_labels
                                        for compatibility with original relabel config.
                                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                                        for details https://github.com/VictoriaMetrics/operator/issues/131
                                      items:
                                        type: string
                                      type: array
                                    sourceLabels:
                                      description: |-
                                        The source labels select values from existing labels. Their content is concatenated
                                        using the configured separator and matched against the configured regular expression
                                        for the replace, keep, and drop actions.
                                      items:
                                        type: string
                                      type: array
                                    target_label:
                                      description: |-
                                        UnderScoreTargetLabel - additional form of target label - target_label
                                        for compatibility with original relabel config.
                                        if set  both targetLabel and target_label, targetLabel has priority.
                                        for details https://github.com/VictoriaMetrics/operator/issues/131
                                      type: string
                                    targetLabel:
                                      description: |-
                                        Label to which the resulting value is written in a replace action.
                                        It is mandatory for replace actions. Regex capture groups are available.
                                      type: string
                                  type: object
                                type: array
                              interval:
                                description: Interval is the interval between aggregations.
                                type: string
                              keep_metric_names:
                                description: KeepMetricNames instructs to leave metric
                                  names as is for the output time series without adding
                                  any suffix.
                                type: boolean
                              match:
                                description: |-
                                  Match is a label selector (or list of label selectors) for filtering time series for the given selector.

                                  If the match isn't set, then all the input time series are processed.
                                x-kubernetes-preserve-unknown-fields: true
                              no_align_flush_to_interval:
                                description: |-
                                  NoAlignFlushToInterval disables aligning of flushes to multiples of Interval.
                                  By default flushes are aligned to Interval.
                                type: boolean
                              output_relabel_configs:
                                description: |-
                                  OutputRelabelConfigs is an optional relabeling rules, which are applied
                                  on the aggregated output before being sent to remote storage.
                                items:
                                  description: |-
                                    RelabelConfig allows dynamic rewriting of the label set
                                    More info: https://docs.victoriametrics.com/#relabeling
                                  properties:
                                    action:
                                      description: Action to perform based on regex
                                        matching. Default is 'replace'
                                      type: string
                                    if:
                                      description: 'If represents metricsQL match
                                        expression (or list of expressions): ''{__name__=~"foo_.*"}'''
                                      x-kubernetes-preserve-unknown-fields: true
                                    labels:
                                      additionalProperties:
                                        type: string
                                      description: 'Labels is used together with Match
                                        for `action: graphite`'
                                      type: object
                                    match:
                                      description: 'Match is used together with Labels
                                        for `action: graphite`'
                                      type: string
                                    modulus:
                                      description: Modulus to take of the hash of
                                        the source label values.
                                      format: int64
                                      type: integer
                                    regex:
                                      description: |-
                                        Regular expression against which the extracted value is matched. Default is '(.*)'
                                        victoriaMetrics supports multiline regex joined with |
                                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                      x-kubernetes-preserve-unknown-fields: true
                                    replacement:
                                      description: |-
                                        Replacement value against which a regex replace is performed if the
                                        regular expression matches. Regex capture groups are available. Default is '$1'
                                      type: string
                                    separator:
                                      description: Separator placed between concatenated
                                        source label values. default is ';'.
                                      type: string
                                    source_labels:
                                      description: |-
                                        UnderScoreSourceLabels - additional form of source labels source_labels
                                        for compatibility with original relabel config.
                                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                                        for details https://github.com/VictoriaMetrics/operator/issues/131
                                      items:
                                        type: string
                                      type: array
                                    sourceLabels:
                                      description: |-
                                        The source labels select values from existing labels. Their content is concatenated
                                        using the configured separator and matched against the configured regular expression
                                        for the replace, keep, and drop actions.
                                      items:
                                        type: string
                                      type: array
                                    target_label:
                                      description: |-
                                        UnderScoreTargetLabel - additional form of target label - target_label
                                        for compatibility with original relabel config.
                                        if set  both targetLabel and target_label, targetLabel has priority.
                                        for details https://github.com/VictoriaMetrics/operator/issues/131
                                      type: string
                                    targetLabel:
                                      description: |-
                                        Label to which the resulting value is written in a replace action.
                                        It is mandatory for replace actions. Regex capture groups are available.
                                      type: string
                                  type: object
                                type: array
                              outputs:
                                description: |-
                                  Outputs is a list of output aggregate functions to produce.

                                  The following names are allowed:

                                  - total - aggregates input counters
                                  - increase - counts the increase over input counters
                                  - count_series - counts the input series
                                  - count_samples - counts the input samples
                                  - sum_samples - sums the input samples
                                  - last - the last biggest sample value
                                  - min - the minimum sample value
                                  - max - the maximum sample value
                                  - avg - the average value across all the samples
                                  - stddev - standard deviation across all the samples
                                  - stdvar - standard variance across all the samples
                                  - histogram_bucket - creates VictoriaMetrics histogram for input samples
                                  - quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1]

                                  The output time series will have the following names:

                                    input_name:aggr_<interval>_<output>
                                items:
                                  type: string
                                type: array
                              staleness_interval:
                                description: |-
                                  Staleness interval is interval after which the series state will be reset if no samples have been sent during it.
                                  The parameter is only relevant for outputs: total, total_prometheus, increase, increase_prometheus and histogram_bucket.
                                type: string
                              without:
                                description: |-
                                  Without is an optional list of labels, which must be excluded when grouping input series.

                                  See also By.

                                  If neither By nor Without are set, then the Outputs are calculated
                                  individually per each input time series.
                                items:
                                  type: string
                                type: array
                            required:
                            - interval
                            - outputs
                            type: object
                          type: array
                      type: object
                    tlsConfig:
                      description: TLSConfig describes tls configuration for remote
                        write target
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    url:
                      description: URL of the endpoint to send samples to.
                      type: string
                    urlRelabelConfig:
                      description: ConfigMap with relabeling config which is applied
                        to metrics before sending them to the corresponding -remoteWrite.url
                      properties:
                        key:
                          description: The key to select.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the ConfigMap or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - url
                  type: object
                type: array
              remoteWriteSettings:
                description: RemoteWriteSettings defines global settings for all remoteWrite
                  urls.
                properties:
                  flushInterval:
                    description: Interval for flushing the data to remote storage.
                      (default 1s)
                    pattern: '[0-9]+(ms|s|m|h)'
                    type: string
                  label:
                    additionalProperties:
                      type: string
                    description: Labels in the form 'name=value' to add to all the
                      metrics before sending them. This overrides the label if it
                      already exists.
                    type: object
                  maxBlockSize:
                    description: The maximum size in bytes of unpacked request to
                      send to remote storage
                    format: int32
                    type: integer
                  maxDiskUsagePerURL:
                    description: The maximum file-based buffer size in bytes at -remoteWrite.tmpDataPath
                    format: int64
                    type: integer
                  queues:
                    description: The number of concurrent queues
                    format: int32
                    type: integer
                  showURL:
                    description: Whether to show -remoteWrite.url in the exported
                      metrics. It is hidden by default, since it can contain sensitive
                      auth info
                    type: boolean
                  tmpDataPath:
                    description: Path to directory where temporary data for remote
                      write component is stored (default vmagent-remotewrite-data)
                    type: string
                  useMultiTenantMode:
                    description: |-
                      Configures vmagent accepting data via the same multitenant endpoints as vminsert at VictoriaMetrics cluster does,
                      see [here](https://docs.victoriametrics.com/vmagent/#multitenancy).
                      it's global setting and affects all remote storage configurations
                    type: boolean
                type: object
              replicaCount:
                description: ReplicaCount is the expected size of the Application.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the Deployment revision history.
                  Has no effect at StatefulSets
                  Defaults to 10.
                format: int32
                type: integer
              rollingUpdate:
                description: RollingUpdate - overrides deployment update params.
                properties:
                  maxSurge:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      The maximum number of pods that can be scheduled above the desired number of
                      pods.
                      Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                      This can not be 0 if MaxUnavailable is 0.
                      Absolute number is calculated from percentage by rounding up.
                      Defaults to 25%.
                      Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
                      the rolling update starts, such that the total number of old and new pods do not exceed
                      130% of desired pods. Once old pods have been killed,
                      new ReplicaSet can be scaled up further, ensuring that total number of pods running
                      at any time during the update is at most 130% of desired pods.
                    x-kubernetes-int-or-string: true
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      The maximum number of pods that can be unavailable during the update.
                      Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                      Absolute number is calculated from percentage by rounding down.
                      This can not be 0 if MaxSurge is 0.
                      Defaults to 25%.
                      Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
                      immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
                      can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
                      that the total number of pods available at all times during the update is at
                      least 70% of desired pods.
                    x-kubernetes-int-or-string: true
                type: object
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              scrapeConfigNamespaceSelector:
                description: |-
                  ScrapeConfigNamespaceSelector defines Namespaces to be selected for VMScrapeConfig discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              scrapeConfigRelabelTemplate:
                description: |-
                  ScrapeConfigRelabelTemplate defines relabel config, that will be added to each VMScrapeConfig.
                  it's useful for adding specific labels to all targets
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              scrapeConfigSelector:
                description: |-
                  ScrapeConfigSelector defines VMScrapeConfig to be selected for target discovery.
                  Works in combination with NamespaceSelector.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              scrapeInterval:
                description: ScrapeInterval defines how often scrape targets by default
                pattern: '[0-9]+(ms|s|m|h)'
                type: string
              scrapeTimeout:
                description: ScrapeTimeout defines global timeout for targets scrape
                pattern: '[0-9]+(ms|s|m|h)'
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/secrets/SECRET_NAME folder
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              selectAllByDefault:
                description: |-
                  SelectAllByDefault changes default behavior for empty CRD selectors, such ServiceScrapeSelector.
                  with selectAllByDefault: true and empty serviceScrapeSelector and ServiceScrapeNamespaceSelector
                  Operator selects all exist serviceScrapes
                  with selectAllByDefault: false - selects nothing
                type: boolean
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to use to run the pods
                type: string
              serviceScrapeNamespaceSelector:
                description: |-
                  ServiceScrapeNamespaceSelector Namespaces to be selected for VMServiceScrape discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              serviceScrapeRelabelTemplate:
                description: |-
                  ServiceScrapeRelabelTemplate defines relabel config, that will be added to each VMServiceScrape.
                  it's useful for adding specific labels to all targets
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              serviceScrapeSelector:
                description: |-
                  ServiceScrapeSelector defines ServiceScrapes to be selected for target discovery.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmagent VMServiceScrape
                  spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vmagent service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              shardCount:
                description: |-
                  ShardCount - numbers of shards of VMAgent
                  in this case operator will use 1 deployment/sts per shard with
                  replicas count according to spec.replicas,
                  see [here](https://docs.victoriametrics.com/vmagent/#scraping-big-number-of-targets)
                type: integer
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              statefulMode:
                description: |-
                  StatefulMode enables StatefulSet for `VMAgent` instead of Deployment
                  it allows using persistent storage for vmagent's persistentQueue
                type: boolean
              statefulRollingUpdateStrategy:
                description: |-
                  StatefulRollingUpdateStrategy allows configuration for strategyType
                  set it to RollingUpdate for disabling operator statefulSet rollingUpdate
                type: string
              statefulStorage:
                description: StatefulStorage configures storage for StatefulSet
                properties:
                  disableMountSubPath:
                    description: |-
                      Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.
                      DisableMountSubPath allows to remove any subPath usage in volume mounts.
                    type: boolean
                  emptyDir:
                    description: |-
                      EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More
                      info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
                    properties:
                      medium:
                        description: |-
                          medium represents what type of storage medium should back this directory.
                          The default is "" which means to use the node's default medium.
                          Must be an empty string (default) or Memory.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        type: string
                      sizeLimit:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          sizeLimit is the total amount of local storage required for this EmptyDir volume.
                          The size limit is also applicable for memory medium.
                          The maximum usage on memory medium EmptyDir would be the minimum value between
                          the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                          The default is nil which means that the limit is undefined.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  volumeClaimTemplate:
                    description: A PVC spec to be used by the VMAlertManager StatefulSets.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion defines the versioned schema of this representation of an object.
                          Servers should convert recognized schemas to the latest internal value, and
                          may reject unrecognized values.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                        type: string
                      kind:
                        description: |-
                          Kind is a string value representing the REST resource this object represents.
                          Servers may infer this from the endpoint the client submits requests to.
                          Cannot be updated.
                          In CamelCase.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      metadata:
                        description: EmbeddedMetadata contains metadata relevant to
                          an EmbeddedResource.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Labels Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                            type: object
                          name:
                            description: |-
                              Name must be unique within a namespace. Is required when creating resources, although
                              some resources may allow a client to request the generation of an appropriate name
                              automatically. Name is primarily intended for creation idempotence and configuration
                              definition.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                            type: string
                        type: object
                      spec:
                        description: |-
                          Spec defines the desired characteristics of a volume requested by a pod author.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                        properties:
                          accessModes:
                            description: |-
                              accessModes contains the desired access modes the volume should have.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          dataSource:
                            description: |-
                              dataSource field can be used to specify either:
                              * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim)
                              If the provisioner or an external controller can support the specified data source,
                              it will create a new volume based on the contents of the specified data source.
                              When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                              and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                              If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                            properties:
                              apiGroup:
                                description: |-
                                  APIGroup is the group for the resource being referenced.
                                  If APIGroup is not specified, the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                          dataSourceRef:
                            description: |-
                              dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                              volume is desired. This may be any object from a non-empty API group (non
                              core object) or a PersistentVolumeClaim object.
                              When this field is specified, volume binding will only succeed if the type of
                              the specified object matches some installed volume populator or dynamic
                              provisioner.
                              This field will replace the functionality of the dataSource field and as such
                              if both fields are non-empty, they must have the same value. For backwards
                              compatibility, when namespace isn't specified in dataSourceRef,
                              both fields (dataSource and dataSourceRef) will be set to the same
                              value automatically if one of them is empty and the other is non-empty.
                              When namespace is specified in dataSourceRef,
                              dataSource isn't set to the same value and must be empty.
                              There are three important differences between dataSource and dataSourceRef:
                              * While dataSource only allows two specific types of objects, dataSourceRef
                                allows any non-core object, as well as PersistentVolumeClaim objects.
                              * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                preserves all values, and generates an error if a disallowed value is
                                specified.
                              * While dataSource only allows local objects, dataSourceRef allows objects
                                in any namespaces.
                              (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                              (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                            properties:
                              apiGroup:
                                description: |-
                                  APIGroup is the group for the resource being referenced.
                                  If APIGroup is not specified, the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of resource being referenced
                                  Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                  (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          resources:
                            description: |-
                              resources represents the minimum resources the volume should have.
                              If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                              that are lower than previous value but must still be higher than capacity recorded in the
                              status field of the claim.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          selector:
                            description: selector is a label query over volumes to
                              consider for binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          storageClassName:
                            description: |-
                              storageClassName is the name of the StorageClass required by the claim.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                            type: string
                          volumeAttributesClassName:
                            description: |-
                              volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                              If specified, the CSI driver will create or update the volume with the attributes defined
                              in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                              it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                              will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                              If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                              will be set by the persistentvolume controller if it exists.
                              If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                              set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                              exists.
                              More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                              (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                            type: string
                          volumeMode:
                            description: |-
                              volumeMode defines what type of volume is required by the claim.
                              Value of Filesystem is implied when not included in claim spec.
                            type: string
                          volumeName:
                            description: volumeName is the binding reference to the
                              PersistentVolume backing this claim.
                            type: string
                        type: object
                      status:
                        description: |-
                          Status represents the current information/status of a persistent volume claim.
                          Read-only.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                        properties:
                          accessModes:
                            description: |-
                              accessModes contains the actual access modes the volume backing the PVC has.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          allocatedResourceStatuses:
                            additionalProperties:
                              description: |-
                                When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                                that it does not recognizes, then it should ignore that update and let other controllers
                                handle it.
                              type: string
                            description: "allocatedResourceStatuses stores status
                              of resource being resized for the given PVC.\nKey names
                              follow standard Kubernetes label syntax. Valid values
                              are either:\n\t* Un-prefixed keys:\n\t\t- storage -
                              the capacity of the volume.\n\t* Custom resources must
                              use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart
                              from above values - keys that are unprefixed or have
                              kubernetes.io prefix are considered\nreserved and hence
                              may not be used.\n\nClaimResourceStatus can be in any
                              of following states:\n\t- ControllerResizeInProgress:\n\t\tState
                              set when resize controller starts resizing the volume
                              in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                              set when resize has failed in resize controller with
                              a terminal error.\n\t- NodeResizePending:\n\t\tState
                              set when resize controller has finished resizing the
                              volume but further resizing of\n\t\tvolume is needed
                              on the node.\n\t- NodeResizeInProgress:\n\t\tState set
                              when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState
                              set when resizing has failed in kubelet with a terminal
                              error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor
                              example: if expanding a PVC for more capacity - this
                              field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                              = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"NodeResizeFailed\"\nWhen this field is not set,
                              it means that no resize operation is in progress for
                              the given PVC.\n\nA controller that receives PVC update
                              with previously unknown resourceName or ClaimResourceStatus\nshould
                              ignore the update for the purpose it was designed. For
                              example - a controller that\nonly is responsible for
                              resizing capacity of the volume, should ignore PVC updates
                              that change other valid\nresources associated with PVC.\n\nThis
                              is an alpha field and requires enabling RecoverVolumeExpansionFailure
                              feature."
                            type: object
                            x-kubernetes-map-type: granular
                          allocatedResources:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: "allocatedResources tracks the resources
                              allocated to a PVC including its capacity.\nKey names
                              follow standard Kubernetes label syntax. Valid values
                              are either:\n\t* Un-prefixed keys:\n\t\t- storage -
                              the capacity of the volume.\n\t* Custom resources must
                              use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart
                              from above values - keys that are unprefixed or have
                              kubernetes.io prefix are considered\nreserved and hence
                              may not be used.\n\nCapacity reported here may be larger
                              than the actual capacity when a volume expansion operation\nis
                              requested.\nFor storage quota, the larger value from
                              allocatedResources and PVC.spec.resources is used.\nIf
                              allocatedResources is not set, PVC.spec.resources alone
                              is used for quota calculation.\nIf a volume expansion
                              capacity request is lowered, allocatedResources is only\nlowered
                              if there are no expansion operations in progress and
                              if the actual volume capacity\nis equal or lower than
                              the requested capacity.\n\nA controller that receives
                              PVC update with previously unknown resourceName\nshould
                              ignore the update for the purpose it was designed. For
                              example - a controller that\nonly is responsible for
                              resizing capacity of the volume, should ignore PVC updates
                              that change other valid\nresources associated with PVC.\n\nThis
                              is an alpha field and requires enabling RecoverVolumeExpansionFailure
                              feature."
                            type: object
                          capacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: capacity represents the actual resources
                              of the underlying volume.
                            type: object
                          conditions:
                            description: |-
                              conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                              resized then the Condition will be set to 'Resizing'.
                            items:
                              description: PersistentVolumeClaimCondition contains
                                details about state of pvc
                              properties:
                                lastProbeTime:
                                  description: lastProbeTime is the time we probed
                                    the condition.
                                  format: date-time
                                  type: string
                                lastTransitionTime:
                                  description: lastTransitionTime is the time the
                                    condition transitioned from one status to another.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is the human-readable message
                                    indicating details about last transition.
                                  type: string
                                reason:
                                  description: |-
                                    reason is a unique, this should be a short, machine understandable string that gives the reason
                                    for condition's last transition. If it reports "Resizing" that means the underlying
                                    persistent volume is being resized.
                                  type: string
                                status:
                                  description: |-
                                    Status is the status of the condition.
                                    Can be True, False, Unknown.
                                    More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                  type: string
                                type:
                                  description: |-
                                    Type is the type of the condition.
                                    More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                  type: string
                              required:
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          currentVolumeAttributesClassName:
                            description: |-
                              currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                              When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                              This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                            type: string
                          modifyVolumeStatus:
                            description: |-
                              ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                              When this is unset, there is no ModifyVolume operation being attempted.
                              This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                            properties:
                              status:
                                description: "status is the status of the ControllerModifyVolume
                                  operation. It can be in any of following states:\n
                                  - Pending\n   Pending indicates that the PersistentVolumeClaim
                                  cannot be modified due to unmet requirements, such
                                  as\n   the specified VolumeAttributesClass not existing.\n
                                  - InProgress\n   InProgress indicates that the volume
                                  is being modified.\n - Infeasible\n  Infeasible
                                  indicates that the request has been rejected as
                                  invalid by the CSI driver. To\n\t  resolve the error,
                                  a valid VolumeAttributesClass needs to be specified.\nNote:
                                  New statuses can be added in the future. Consumers
                                  should check for unknown statuses and fail appropriately."
                                type: string
                              targetVolumeAttributesClassName:
                                description: targetVolumeAttributesClassName is the
                                  name of the VolumeAttributesClass the PVC currently
                                  being reconciled
                                type: string
                            required:
                            - status
                            type: object
                          phase:
                            description: phase represents the current phase of PersistentVolumeClaim.
                            type: string
                        type: object
                    type: object
                type: object
              staticScrapeNamespaceSelector:
                description: |-
                  StaticScrapeNamespaceSelector defines Namespaces to be selected for VMStaticScrape discovery.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              staticScrapeRelabelTemplate:
                description: |-
                  StaticScrapeRelabelTemplate defines relabel config, that will be added to each VMStaticScrape.
                  it's useful for adding specific labels to all targets
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              staticScrapeSelector:
                description: |-
                  StaticScrapeSelector defines VMStaticScrape to be selected for target discovery.
                  Works in combination with NamespaceSelector.
                  If both nil - match everything.
                  NamespaceSelector nil - only objects at VMAgent namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              streamAggrConfig:
                description: StreamAggrConfig defines global stream aggregation configuration
                  for VMAgent
                properties:
                  configmap:
                    description: ConfigMap with stream aggregation rules
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  dedupInterval:
                    description: Allows setting different de-duplication intervals
                      per each configured remote storage
                    type: string
                  dropInput:
                    description: Allow drop all the input samples after the aggregation
                    type: boolean
                  dropInputLabels:
                    description: labels to drop from samples for aggregator before
                      stream de-duplication and aggregation
                    items:
                      type: string
                    type: array
                  enableWindows:
                    description: EnableWindows enables aggregating data in separate
                      windows ( available from v0.54.0).
                    type: boolean
                  ignoreFirstIntervals:
                    description: IgnoreFirstIntervals instructs to ignore first interval
                    type: integer
                  ignoreOldSamples:
                    description: IgnoreOldSamples instructs to ignore samples with
                      old timestamps outside the current aggregation interval.
                    type: boolean
                  keepInput:
                    description: Allows writing both raw and aggregate data
                    type: boolean
                  rules:
                    description: Stream aggregation rules
                    items:
                      description: StreamAggrRule defines the rule in stream aggregation
                        config
                      properties:
                        by:
                          description: |-
                            By is an optional list of labels for grouping input series.

                            See also Without.

                            If neither By nor Without are set, then the Outputs are calculated
                            individually per each input time series.
                          items:
                            type: string
                          type: array
                        dedup_interval:
                          description: DedupInterval is an optional interval for deduplication.
                          type: string
                        drop_input_labels:
                          description: |-
                            DropInputLabels is an optional list with labels, which must be dropped before further processing of input samples.

                            Labels are dropped before de-duplication and aggregation.
                          items:
                            type: string
                          type: array
                        enable_windows:
                          description: EnableWindows enables aggregating data in separate
                            windows
                          type: boolean
                        flush_on_shutdown:
                          description: |-
                            FlushOnShutdown defines whether to flush the aggregation state on process termination
                            or config reload. Is `false` by default.
                            It is not recommended changing this setting, unless unfinished aggregations states
                            are preferred to missing data points.
                          type: boolean
                        ignore_first_intervals:
                          type: integer
                        ignore_old_samples:
                          description: IgnoreOldSamples instructs to ignore samples
                            with old timestamps outside the current aggregation interval.
                          type: boolean
                        input_relabel_configs:
                          description: |-
                            InputRelabelConfigs is an optional relabeling rules, which are applied on the input
                            before aggregation.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set
                              More info: https://docs.victoriametrics.com/#relabeling
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        interval:
                          description: Interval is the interval between aggregations.
                          type: string
                        keep_metric_names:
                          description: KeepMetricNames instructs to leave metric names
                            as is for the output time series without adding any suffix.
                          type: boolean
                        match:
                          description: |-
                            Match is a label selector (or list of label selectors) for filtering time series for the given selector.

                            If the match isn't set, then all the input time series are processed.
                          x-kubernetes-preserve-unknown-fields: true
                        no_align_flush_to_interval:
                          description: |-
                            NoAlignFlushToInterval disables aligning of flushes to multiples of Interval.
                            By default flushes are aligned to Interval.
                          type: boolean
                        output_relabel_configs:
                          description: |-
                            OutputRelabelConfigs is an optional relabeling rules, which are applied
                            on the aggregated output before being sent to remote storage.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set
                              More info: https://docs.victoriametrics.com/#relabeling
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        outputs:
                          description: |-
                            Outputs is a list of output aggregate functions to produce.

                            The following names are allowed:

                            - total - aggregates input counters
                            - increase - counts the increase over input counters
                            - count_series - counts the input series
                            - count_samples - counts the input samples
                            - sum_samples - sums the input samples
                            - last - the last biggest sample value
                            - min - the minimum sample value
                            - max - the maximum sample value
                            - avg - the average value across all the samples
                            - stddev - standard deviation across all the samples
                            - stdvar - standard variance across all the samples
                            - histogram_bucket - creates VictoriaMetrics histogram for input samples
                            - quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1]

                            The output time series will have the following names:

                              input_name:aggr_<interval>_<output>
                          items:
                            type: string
                          type: array
                        staleness_interval:
                          description: |-
                            Staleness interval is interval after which the series state will be reset if no samples have been sent during it.
                            The parameter is only relevant for outputs: total, total_prometheus, increase, increase_prometheus and histogram_bucket.
                          type: string
                        without:
                          description: |-
                            Without is an optional list of labels, which must be excluded when grouping input series.

                            See also By.

                            If neither By nor Without are set, then the Outputs are calculated
                            individually per each input time series.
                          items:
                            type: string
                          type: array
                      required:
                      - interval
                      - outputs
                      type: object
                    type: array
                type: object
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              updateStrategy:
                description: |-
                  UpdateStrategy - overrides default update strategy.
                  works only for deployments, statefulset always use OnDelete.
                enum:
                - Recreate
                - RollingUpdate
                type: string
              useDefaultResources:
                description: |-
                  UseDefaultResources controls resource settings
                  By default, operator sets built-in resource requirements
                type: boolean
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              useVMConfigReloader:
                description: |-
                  UseVMConfigReloader replaces prometheus-like config-reloader
                  with vm one. It uses secrets watch instead of file watch
                  which greatly increases speed of config updates
                type: boolean
              vmAgentExternalLabelName:
                description: |-
                  VMAgentExternalLabelName Name of vmAgent external label used to denote vmAgent instance
                  name. Defaults to the value of `prometheus`. External label will
                  _not_ be added when value is set to empty string (`""`).
                type: string
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the Application container
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                  Volumes specified will be appended to other volumes that are generated.
                  / +optional
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            required:
            - remoteWrite
            type: object
          status:
            description: VMAgentStatus defines the observed state of VMAgent
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              replicas:
                description: ReplicaCount Total number of pods targeted by this VMAgent
                format: int32
                type: integer
              selector:
                description: Selector string form of label value set for autoscaling
                type: string
              shards:
                description: Shards represents total number of vmagent deployments
                  with uniq scrape targets
                format: int32
                type: integer
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        labelSelectorPath: .status.selector
        specReplicasPath: .spec.shardCount
        statusReplicasPath: .status.shards
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmalertmanagerconfigs.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMAlertmanagerConfig
    listKind: VMAlertmanagerConfigList
    plural: vmalertmanagerconfigs
    singular: vmalertmanagerconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMAlertmanagerConfig is the Schema for the vmalertmanagerconfigs
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              VMAlertmanagerConfigSpec defines configuration for VMAlertmanagerConfig
              it must reference only locally defined objects
            properties:
              inhibit_rules:
                description: |-
                  InhibitRules will only apply for alerts matching
                  the resource's namespace.
                items:
                  description: |-
                    InhibitRule defines an inhibition rule that allows to mute alerts when other
                    alerts are already firing.
                    Note, it doesn't support deprecated alertmanager config options.
                    See https://prometheus.io/docs/alerting/latest/configuration/#inhibit_rule
                  properties:
                    equal:
                      description: |-
                        Labels that must have an equal value in the source and target alert for
                        the inhibition to take effect.
                      items:
                        type: string
                      type: array
                    source_matchers:
                      description: |-
                        SourceMatchers defines a list of matchers for which one or more alerts have
                        to exist for the inhibition to take effect.
                      items:
                        type: string
                      type: array
                    target_matchers:
                      description: |-
                        TargetMatchers defines a list of matchers that have to be fulfilled by the target
                        alerts to be muted.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              receivers:
                description: Receivers defines alert receivers
                items:
                  description: Receiver defines one or more notification integrations.
                  properties:
                    discord_configs:
                      items:
                        properties:
                          http_config:
                            description: HTTP client configuration.
                            properties:
                              authorization:
                                description: |-
                                  Authorization header configuration for the client.
                                  This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.
                                properties:
                                  credentials:
                                    description: Reference to the secret with value
                                      for authorization
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  credentialsFile:
                                    description: File with value for authorization
                                    type: string
                                  type:
                                    description: Type of authorization, default to
                                      bearer
                                    type: string
                                type: object
                              basic_auth:
                                description: BasicAuth for the client.
                                properties:
                                  password:
                                    description: |-
                                      Password defines reference for secret with password value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  password_file:
                                    description: |-
                                      PasswordFile defines path to password file at disk
                                      must be pre-mounted
                                    type: string
                                  username:
                                    description: |-
                                      Username defines reference for secret with username value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              bearer_token_file:
                                description: BearerTokenFile defines filename for
                                  bearer token, it must be mounted to pod.
                                type: string
                              bearer_token_secret:
                                description: |-
                                  The secret's key that contains the bearer token
                                  It must be at them same namespace as CRD
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              oauth2:
                                description: OAuth2 client credentials used to fetch
                                  a token for the targets.
                                properties:
                                  client_id:
                                    description: The secret or configmap containing
                                      the OAuth2 client id
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  client_secret:
                                    description: The secret containing the OAuth2
                                      client secret
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  client_secret_file:
                                    description: ClientSecretFile defines path for
                                      client secret file.
                                    type: string
                                  endpoint_params:
                                    additionalProperties:
                                      type: string
                                    description: Parameters to append to the token
                                      URL
                                    type: object
                                  scopes:
                                    description: OAuth2 scopes used for the token
                                      request
                                    items:
                                      type: string
                                    type: array
                                  token_url:
                                    description: The URL to fetch the token from
                                    minLength: 1
                                    type: string
                                required:
                                - client_id
                                - token_url
                                type: object
                              proxyURL:
                                description: Optional proxy URL.
                                type: string
                              tls_config:
                                description: TLS configuration for the client.
                                properties:
                                  ca:
                                    description: Stuct containing the CA cert to use
                                      for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  caFile:
                                    description: Path to the CA cert in the container
                                      to use for the targets.
                                    type: string
                                  cert:
                                    description: Struct containing the client cert
                                      file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  certFile:
                                    description: Path to the client cert file in the
                                      container for the targets.
                                    type: string
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keyFile:
                                    description: Path to the client key file in the
                                      container for the targets.
                                    type: string
                                  keySecret:
                                    description: Secret containing the client key
                                      file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverName:
                                    description: Used to verify the hostname for the
                                      targets.
                                    type: string
                                type: object
                            type: object
                          message:
                            description: The message body template
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          title:
                            description: The message title template
                            type: string
                          webhook_url:
                            description: |-
                              The discord webhook URL
                              one of `urlSecret` and `url` must be defined.
                            type: string
                          webhook_url_secret:
                            description: |-
                              URLSecret defines secret name and key at the CRD namespace.
                              It must contain the webhook URL.
                              one of `urlSecret` and `url` must be defined.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    email_configs:
                      description: EmailConfigs defines email notification configurations.
                      items:
                        description: EmailConfig configures notifications via Email.
                        properties:
                          auth_identity:
                            description: The identity to use for authentication.
                            type: string
                          auth_password:
                            description: AuthPassword defines secret name and key
                              at CRD namespace.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          auth_secret:
                            description: |-
                              AuthSecret defines secrent name and key at CRD namespace.
                              It must contain the CRAM-MD5 secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          auth_username:
                            description: The username to use for authentication.
                            type: string
                          from:
                            description: |-
                              The sender address.
                              fallback to global setting if empty
                            type: string
                          headers:
                            additionalProperties:
                              type: string
                            description: |-
                              Further headers email header key/value pairs. Overrides any headers
                              previously set by the notification implementation.
                            type: object
                          hello:
                            description: The hostname to identify to the SMTP server.
                            type: string
                          html:
                            description: The HTML body of the email notification.
                            type: string
                          require_tls:
                            description: |-
                              The SMTP TLS requirement.
                              Note that Go does not support unencrypted connections to remote SMTP endpoints.
                            type: boolean
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          smarthost:
                            description: |-
                              The SMTP host through which emails are sent.
                              fallback to global setting if empty
                            type: string
                          text:
                            description: The text body of the email notification.
                            type: string
                          tls_config:
                            description: TLS configuration
                            properties:
                              ca:
                                description: Stuct containing the CA cert to use for
                                  the targets.
                                properties:
                                  configMap:
                                    description: ConfigMap containing data to use
                                      for the targets.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secret:
                                    description: Secret containing data to use for
                                      the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              caFile:
                                description: Path to the CA cert in the container
                                  to use for the targets.
                                type: string
                              cert:
                                description: Struct containing the client cert file
                                  for the targets.
                                properties:
                                  configMap:
                                    description: ConfigMap containing data to use
                                      for the targets.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secret:
                                    description: Secret containing data to use for
                                      the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              certFile:
                                description: Path to the client cert file in the container
                                  for the targets.
                                type: string
                              insecureSkipVerify:
                                description: Disable target certificate validation.
                                type: boolean
                              keyFile:
                                description: Path to the client key file in the container
                                  for the targets.
                                type: string
                              keySecret:
                                description: Secret containing the client key file
                                  for the targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              serverName:
                                description: Used to verify the hostname for the targets.
                                type: string
                            type: object
                          to:
                            description: The email address to send notifications to.
                            type: string
                        type: object
                      type: array
                    msteams_configs:
                      items:
                        properties:
                          http_config:
                            description: HTTP client configuration.
                            properties:
                              authorization:
                                description: |-
                                  Authorization header configuration for the client.
                                  This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.
                                properties:
                                  credentials:
                                    description: Reference to the secret with value
                                      for authorization
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  credentialsFile:
                                    description: File with value for authorization
                                    type: string
                                  type:
                                    description: Type of authorization, default to
                                      bearer
                                    type: string
                                type: object
                              basic_auth:
                                description: BasicAuth for the client.
                                properties:
                                  password:
                                    description: |-
                                      Password defines reference for secret with password value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  password_file:
                                    description: |-
                                      PasswordFile defines path to password file at disk
                                      must be pre-mounted
                                    type: string
                                  username:
                                    description: |-
                                      Username defines reference for secret with username value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              bearer_token_file:
                                description: BearerTokenFile defines filename for
                                  bearer token, it must be mounted to pod.
                                type: string
                              bearer_token_secret:
                                description: |-
                                  The secret's key that contains the bearer token
                                  It must be at them same namespace as CRD
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              oauth2:
                                description: OAuth2 client credentials used to fetch
                                  a token for the targets.
                                properties:
                                  client_id:
                                    description: The secret or configmap containing
                                      the OAuth2 client id
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  client_secret:
                                    description: The secret containing the OAuth2
                                      client secret
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  client_secret_file:
                                    description: ClientSecretFile defines path for
                                      client secret file.
                                    type: string
                                  endpoint_params:
                                    additionalProperties:
                                      type: string
                                    description: Parameters to append to the token
                                      URL
                                    type: object
                                  scopes:
                                    description: OAuth2 scopes used for the token
                                      request
                                    items:
                                      type: string
                                    type: array
                                  token_url:
                                    description: The URL to fetch the token from
                                    minLength: 1
                                    type: string
                                required:
                                - client_id
                                - token_url
                                type: object
                              proxyURL:
                                description: Optional proxy URL.
                                type: string
                              tls_config:
                                description: TLS configuration for the client.
                                properties:
                                  ca:
                                    description: Stuct containing the CA cert to use
                                      for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  caFile:
                                    description: Path to the CA cert in the container
                                      to use for the targets.
                                    type: string
                                  cert:
                                    description: Struct containing the client cert
                                      file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  certFile:
                                    description: Path to the client cert file in the
                                      container for the targets.
                                    type: string
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keyFile:
                                    description: Path to the client key file in the
                                      container for the targets.
                                    type: string
                                  keySecret:
                                    description: Secret containing the client key
                                      file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverName:
                                    description: Used to verify the hostname for the
                                      targets.
                                    type: string
                                type: object
                            type: object
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          text:
                            description: The text body of the teams notification.
                            type: string
                          title:
                            description: The title of the teams notification.
                            type: string
                          webhook_url:
                            description: |-
                              The incoming webhook URL
                              one of `urlSecret` and `url` must be defined.
                            type: string
                          webhook_url_secret:
                            description: |-
                              URLSecret defines secret name and key at the CRD namespace.
                              It must contain the webhook URL.
                              one of `urlSecret` and `url` must be defined.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    name:
                      description: Name of the receiver. Must be unique across all
                        items from the list.
                      minLength: 1
                      type: string
                    opsgenie_configs:
                      description: OpsGenieConfigs defines ops genie notification
                        configurations.
                      items:
                        description: |-
                          OpsGenieConfig configures notifications via OpsGenie.
                          See https://prometheus.io/docs/alerting/latest/configuration/#opsgenie_config
                        properties:
                          actions:
                            description: Comma separated list of actions that will
                              be available for the alert.
                            type: string
                          api_key:
                            description: |-
                              The secret's key that contains the OpsGenie API key.
                              It must be at them same namespace as CRD
                              fallback to global setting if empty
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          apiURL:
                            description: The URL to send OpsGenie API requests to.
                            type: string
                          description:
                            description: Description of the incident.
                            type: string
                          details:
                            additionalProperties:
                              type: string
                            description: A set of arbitrary key/value pairs that provide
                              further detail about the incident.
                            type: object
                          entity:
                            description: Optional field that can be used to specify
                              which domain alert is related to.
                            type: string
                          http_config:
                            description: HTTP client configuration.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Alert text limited to 130 characters.
                            type: string
                          note:
                            description: Additional alert note.
                            type: string
                          priority:
                            description: Priority level of alert. Possible values
                              are P1, P2, P3, P4, and P5.
                            type: string
                          responders:
                            description: List of responders responsible for notifications.
                            items:
                              description: |-
                                OpsGenieConfigResponder defines a responder to an incident.
                                One of `id`, `name` or `username` has to be defined.
                              properties:
                                id:
                                  description: ID of the responder.
                                  type: string
                                name:
                                  description: Name of the responder.
                                  type: string
                                type:
                                  description: Type of responder.
                                  minLength: 1
                                  type: string
                                username:
                                  description: Username of the responder.
                                  type: string
                              required:
                              - type
                              type: object
                            type: array
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          source:
                            description: Backlink to the sender of the notification.
                            type: string
                          tags:
                            description: Comma separated list of tags attached to
                              the notifications.
                            type: string
                          update_alerts:
                            description: |-
                              Whether to update message and description of the alert in OpsGenie if it already exists
                              By default, the alert is never updated in OpsGenie, the new message only appears in activity log.
                            type: boolean
                        type: object
                      type: array
                    pagerduty_configs:
                      description: PagerDutyConfigs defines pager duty notification
                        configurations.
                      items:
                        description: |-
                          PagerDutyConfig configures notifications via PagerDuty.
                          See https://prometheus.io/docs/alerting/latest/configuration/#pagerduty_config
                        properties:
                          class:
                            description: The class/type of the event.
                            type: string
                          client:
                            description: Client identification.
                            type: string
                          client_url:
                            description: Backlink to the sender of notification.
                            type: string
                          component:
                            description: The part or component of the affected system
                              that is broken.
                            type: string
                          description:
                            description: Description of the incident.
                            type: string
                          details:
                            additionalProperties:
                              type: string
                            description: Arbitrary key/value pairs that provide further
                              detail about the incident.
                            type: object
                          group:
                            description: A cluster or grouping of sources.
                            type: string
                          http_config:
                            description: HTTP client configuration.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          images:
                            description: Images to attach to the incident.
                            items:
                              description: |-
                                ImageConfig is used to attach images to the incident.
                                See https://developer.pagerduty.com/docs/ZG9jOjExMDI5NTgx-send-an-alert-event#the-images-property
                                for more information.
                              properties:
                                alt:
                                  type: string
                                href:
                                  type: string
                                source:
                                  type: string
                              required:
                              - source
                              type: object
                            type: array
                          links:
                            description: Links to attach to the incident.
                            items:
                              description: |-
                                LinkConfig is used to attach text links to the incident.
                                See https://developer.pagerduty.com/docs/ZG9jOjExMDI5NTgx-send-an-alert-event#the-links-property
                                for more information.
                              properties:
                                href:
                                  type: string
                                text:
                                  type: string
                              required:
                              - href
                              type: object
                            type: array
                          routing_key:
                            description: |-
                              The secret's key that contains the PagerDuty integration key (when using
                              Events API v2). Either this field or `serviceKey` needs to be defined.
                              It must be at them same namespace as CRD
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          service_key:
                            description: |-
                              The secret's key that contains the PagerDuty service key (when using
                              integration type "Prometheus"). Either this field or `routingKey` needs to
                              be defined.
                              It must be at them same namespace as CRD
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          severity:
                            description: Severity of the incident.
                            type: string
                          url:
                            description: The URL to send requests to.
                            type: string
                        type: object
                      type: array
                    pushover_configs:
                      description: PushoverConfigs defines push over notification
                        configurations.
                      items:
                        description: |-
                          PushoverConfig configures notifications via Pushover.
                          See https://prometheus.io/docs/alerting/latest/configuration/#pushover_config
                        properties:
                          expire:
                            description: |-
                              How long your notification will continue to be retried for, unless the user
                              acknowledges the notification.
                            type: string
                          html:
                            description: Whether notification message is HTML or plain
                              text.
                            type: boolean
                          http_config:
                            description: HTTP client configuration.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Notification message.
                            type: string
                          priority:
                            description: Priority, see https://pushover.net/api#priority
                            type: string
                          retry:
                            description: |-
                              How often the Pushover servers will send the same notification to the user.
                              Must be at least 30 seconds.
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          sound:
                            description: The name of one of the sounds supported by
                              device clients to override the user's default sound
                              choice
                            type: string
                          title:
                            description: Notification title.
                            type: string
                          token:
                            description: |-
                              The secret's key that contains the registered application’s API token, see https://pushover.net/apps.
                              It must be at them same namespace as CRD
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          url:
                            description: A supplementary URL shown alongside the message.
                            type: string
                          url_title:
                            description: A title for supplementary URL, otherwise
                              just the URL is shown
                            type: string
                          user_key:
                            description: |-
                              The secret's key that contains the recipient user’s user key.
                              It must be at them same namespace as CRD
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    slack_configs:
                      description: SlackConfigs defines slack notification configurations.
                      items:
                        description: |-
                          SlackConfig configures notifications via Slack.
                          See https://prometheus.io/docs/alerting/latest/configuration/#slack_config
                        properties:
                          actions:
                            description: A list of Slack actions that are sent with
                              each notification.
                            items:
                              description: |-
                                SlackAction configures a single Slack action that is sent with each
                                notification.
                                See https://api.slack.com/docs/message-attachments#action_fields and
                                https://api.slack.com/docs/message-buttons for more information.
                              properties:
                                confirm:
                                  description: |-
                                    SlackConfirmationField protect users from destructive actions or
                                    particularly distinguished decisions by asking them to confirm their button
                                    click one more time.
                                    See https://api.slack.com/docs/interactive-message-field-guide#confirmation_fields
                                    for more information.
                                  properties:
                                    dismiss_text:
                                      type: string
                                    ok_text:
                                      type: string
                                    text:
                                      minLength: 1
                                      type: string
                                    title:
                                      type: string
                                  required:
                                  - text
                                  type: object
                                name:
                                  type: string
                                style:
                                  type: string
                                text:
                                  minLength: 1
                                  type: string
                                type:
                                  minLength: 1
                                  type: string
                                url:
                                  type: string
                                value:
                                  type: string
                              required:
                              - text
                              - type
                              type: object
                            type: array
                          api_url:
                            description: |-
                              The secret's key that contains the Slack webhook URL.
                              It must be at them same namespace as CRD
                              fallback to global setting if empty
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          callback_id:
                            type: string
                          channel:
                            description: The channel or user to send notifications
                              to.
                            type: string
                          color:
                            type: string
                          fallback:
                            type: string
                          fields:
                            description: A list of Slack fields that are sent with
                              each notification.
                            items:
                              description: |-
                                SlackField configures a single Slack field that is sent with each notification.
                                See https://api.slack.com/docs/message-attachments#fields for more information.
                              properties:
                                short:
                                  type: boolean
                                title:
                                  minLength: 1
                                  type: string
                                value:
                                  minLength: 1
                                  type: string
                              required:
                              - title
                              - value
                              type: object
                            type: array
                          footer:
                            type: string
                          http_config:
                            description: HTTP client configuration.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          icon_emoji:
                            type: string
                          icon_url:
                            type: string
                          image_url:
                            type: string
                          link_names:
                            type: boolean
                          mrkdwn_in:
                            items:
                              type: string
                            type: array
                          pretext:
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          short_fields:
                            type: boolean
                          text:
                            type: string
                          thumb_url:
                            type: string
                          title:
                            type: string
                          title_link:
                            type: string
                          username:
                            type: string
                        type: object
                      type: array
                    sns_configs:
                      items:
                        properties:
                          api_url:
                            description: The api URL
                            type: string
                          attributes:
                            additionalProperties:
                              type: string
                            description: SNS message attributes
                            type: object
                          http_config:
                            description: HTTP client configuration.
                            properties:
                              authorization:
                                description: |-
                                  Authorization header configuration for the client.
                                  This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.
                                properties:
                                  credentials:
                                    description: Reference to the secret with value
                                      for authorization
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  credentialsFile:
                                    description: File with value for authorization
                                    type: string
                                  type:
                                    description: Type of authorization, default to
                                      bearer
                                    type: string
                                type: object
                              basic_auth:
                                description: BasicAuth for the client.
                                properties:
                                  password:
                                    description: |-
                                      Password defines reference for secret with password value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  password_file:
                                    description: |-
                                      PasswordFile defines path to password file at disk
                                      must be pre-mounted
                                    type: string
                                  username:
                                    description: |-
                                      Username defines reference for secret with username value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              bearer_token_file:
                                description: BearerTokenFile defines filename for
                                  bearer token, it must be mounted to pod.
                                type: string
                              bearer_token_secret:
                                description: |-
                                  The secret's key that contains the bearer token
                                  It must be at them same namespace as CRD
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              oauth2:
                                description: OAuth2 client credentials used to fetch
                                  a token for the targets.
                                properties:
                                  client_id:
                                    description: The secret or configmap containing
                                      the OAuth2 client id
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  client_secret:
                                    description: The secret containing the OAuth2
                                      client secret
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  client_secret_file:
                                    description: ClientSecretFile defines path for
                                      client secret file.
                                    type: string
                                  endpoint_params:
                                    additionalProperties:
                                      type: string
                                    description: Parameters to append to the token
                                      URL
                                    type: object
                                  scopes:
                                    description: OAuth2 scopes used for the token
                                      request
                                    items:
                                      type: string
                                    type: array
                                  token_url:
                                    description: The URL to fetch the token from
                                    minLength: 1
                                    type: string
                                required:
                                - client_id
                                - token_url
                                type: object
                              proxyURL:
                                description: Optional proxy URL.
                                type: string
                              tls_config:
                                description: TLS configuration for the client.
                                properties:
                                  ca:
                                    description: Stuct containing the CA cert to use
                                      for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  caFile:
                                    description: Path to the CA cert in the container
                                      to use for the targets.
                                    type: string
                                  cert:
                                    description: Struct containing the client cert
                                      file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  certFile:
                                    description: Path to the client cert file in the
                                      container for the targets.
                                    type: string
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keyFile:
                                    description: Path to the client key file in the
                                      container for the targets.
                                    type: string
                                  keySecret:
                                    description: Secret containing the client key
                                      file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverName:
                                    description: Used to verify the hostname for the
                                      targets.
                                    type: string
                                type: object
                            type: object
                          message:
                            description: The message content of the SNS notification.
                            type: string
                          phone_number:
                            description: |-
                              Phone number if message is delivered via SMS
                              Specify this, topic_arn or target_arn
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          sigv4:
                            description: Configure the AWS Signature Verification
                              4 signing process
                            properties:
                              access_key:
                                description: |-
                                  The AWS API keys. Both access_key and secret_key must be supplied or both must be blank.
                                  If blank the environment variables `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` are used.
                                type: string
                              access_key_selector:
                                description: secret key selector to get the keys from
                                  a Kubernetes Secret
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              profile:
                                description: Named AWS profile used to authenticate
                                type: string
                              region:
                                description: AWS region, if blank the region from
                                  the default credentials chain is used
                                type: string
                              role_arn:
                                description: AWS Role ARN, an alternative to using
                                  AWS API keys
                                type: string
                              secret_key_selector:
                                description: secret key selector to get the keys from
                                  a Kubernetes Secret
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          subject:
                            description: The subject line if message is delivered
                              to an email endpoint.
                            type: string
                          target_arn:
                            description: |-
                              Mobile platform endpoint ARN if message is delivered via mobile notifications
                              Specify this, topic_arn or phone_number
                            type: string
                          topic_arn:
                            description: SNS topic ARN, either specify this, phone_number
                              or target_arn
                            type: string
                        type: object
                      type: array
                    telegram_configs:
                      items:
                        description: |-
                          TelegramConfig configures notification via telegram
                          https://prometheus.io/docs/alerting/latest/configuration/#telegram_config
                        properties:
                          api_url:
                            description: APIUrl the Telegram API URL i.e. https://api.telegram.org.
                            type: string
                          bot_token:
                            description: |-
                              BotToken token for the bot
                              https://core.telegram.org/bots/api
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          chat_id:
                            description: ChatID is ID of the chat where to send the
                              messages.
                            type: integer
                          disable_notifications:
                            description: DisableNotifications
                            type: boolean
                          http_config:
                            description: HTTP client configuration.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is templated message
                            type: string
                          message_thread_id:
                            description: MessageThreadID defines ID of the message
                              thread where to send the messages.
                            type: integer
                          parse_mode:
                            description: |-
                              ParseMode for telegram message,
                              supported values are MarkdownV2, Markdown, Markdown and empty string for plain text.
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                        required:
                        - bot_token
                        - chat_id
                        type: object
                      type: array
                    victorops_configs:
                      description: VictorOpsConfigs defines victor ops notification
                        configurations.
                      items:
                        description: |-
                          VictorOpsConfig configures notifications via VictorOps.
                          See https://prometheus.io/docs/alerting/latest/configuration/#victorops_config
                        properties:
                          api_key:
                            description: |-
                              The secret's key that contains the API key to use when talking to the VictorOps API.
                              It must be at them same namespace as CRD
                              fallback to global setting if empty
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          api_url:
                            description: The VictorOps API URL.
                            type: string
                          custom_fields:
                            additionalProperties:
                              type: string
                            description: |-
                              Adds optional custom fields
                              https://github.com/prometheus/alertmanager/blob/v0.24.0/config/notifiers.go#L537
                            type: object
                          entity_display_name:
                            description: Contains summary of the alerted problem.
                            type: string
                          http_config:
                            description: The HTTP client's configuration.
                            properties:
                              authorization:
                                description: |-
                                  Authorization header configuration for the client.
                                  This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.
                                properties:
                                  credentials:
                                    description: Reference to the secret with value
                                      for authorization
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  credentialsFile:
                                    description: File with value for authorization
                                    type: string
                                  type:
                                    description: Type of authorization, default to
                                      bearer
                                    type: string
                                type: object
                              basic_auth:
                                description: BasicAuth for the client.
                                properties:
                                  password:
                                    description: |-
                                      Password defines reference for secret with password value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  password_file:
                                    description: |-
                                      PasswordFile defines path to password file at disk
                                      must be pre-mounted
                                    type: string
                                  username:
                                    description: |-
                                      Username defines reference for secret with username value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              bearer_token_file:
                                description: BearerTokenFile defines filename for
                                  bearer token, it must be mounted to pod.
                                type: string
                              bearer_token_secret:
                                description: |-
                                  The secret's key that contains the bearer token
                                  It must be at them same namespace as CRD
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              oauth2:
                                description: OAuth2 client credentials used to fetch
                                  a token for the targets.
                                properties:
                                  client_id:
                                    description: The secret or configmap containing
                                      the OAuth2 client id
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  client_secret:
                                    description: The secret containing the OAuth2
                                      client secret
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  client_secret_file:
                                    description: ClientSecretFile defines path for
                                      client secret file.
                                    type: string
                                  endpoint_params:
                                    additionalProperties:
                                      type: string
                                    description: Parameters to append to the token
                                      URL
                                    type: object
                                  scopes:
                                    description: OAuth2 scopes used for the token
                                      request
                                    items:
                                      type: string
                                    type: array
                                  token_url:
                                    description: The URL to fetch the token from
                                    minLength: 1
                                    type: string
                                required:
                                - client_id
                                - token_url
                                type: object
                              proxyURL:
                                description: Optional proxy URL.
                                type: string
                              tls_config:
                                description: TLS configuration for the client.
                                properties:
                                  ca:
                                    description: Stuct containing the CA cert to use
                                      for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  caFile:
                                    description: Path to the CA cert in the container
                                      to use for the targets.
                                    type: string
                                  cert:
                                    description: Struct containing the client cert
                                      file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  certFile:
                                    description: Path to the client cert file in the
                                      container for the targets.
                                    type: string
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keyFile:
                                    description: Path to the client key file in the
                                      container for the targets.
                                    type: string
                                  keySecret:
                                    description: Secret containing the client key
                                      file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverName:
                                    description: Used to verify the hostname for the
                                      targets.
                                    type: string
                                type: object
                            type: object
                          message_type:
                            description: Describes the behavior of the alert (CRITICAL,
                              WARNING, INFO).
                            type: string
                          monitoring_tool:
                            description: The monitoring tool the state message is
                              from.
                            type: string
                          routing_key:
                            description: A key used to map the alert to a team.
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          state_message:
                            description: Contains long explanation of the alerted
                              problem.
                            type: string
                        required:
                        - routing_key
                        type: object
                      type: array
                    webex_configs:
                      items:
                        properties:
                          api_url:
                            description: The Webex Teams API URL, i.e. https://webexapis.com/v1/messages
                            type: string
                          http_config:
                            description: HTTP client configuration. You must use this
                              configuration to supply the bot token as part of the
                              HTTP `Authorization` header.
                            properties:
                              authorization:
                                description: |-
                                  Authorization header configuration for the client.
                                  This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.
                                properties:
                                  credentials:
                                    description: Reference to the secret with value
                                      for authorization
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  credentialsFile:
                                    description: File with value for authorization
                                    type: string
                                  type:
                                    description: Type of authorization, default to
                                      bearer
                                    type: string
                                type: object
                              basic_auth:
                                description: BasicAuth for the client.
                                properties:
                                  password:
                                    description: |-
                                      Password defines reference for secret with password value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  password_file:
                                    description: |-
                                      PasswordFile defines path to password file at disk
                                      must be pre-mounted
                                    type: string
                                  username:
                                    description: |-
                                      Username defines reference for secret with username value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              bearer_token_file:
                                description: BearerTokenFile defines filename for
                                  bearer token, it must be mounted to pod.
                                type: string
                              bearer_token_secret:
                                description: |-
                                  The secret's key that contains the bearer token
                                  It must be at them same namespace as CRD
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              oauth2:
                                description: OAuth2 client credentials used to fetch
                                  a token for the targets.
                                properties:
                                  client_id:
                                    description: The secret or configmap containing
                                      the OAuth2 client id
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  client_secret:
                                    description: The secret containing the OAuth2
                                      client secret
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  client_secret_file:
                                    description: ClientSecretFile defines path for
                                      client secret file.
                                    type: string
                                  endpoint_params:
                                    additionalProperties:
                                      type: string
                                    description: Parameters to append to the token
                                      URL
                                    type: object
                                  scopes:
                                    description: OAuth2 scopes used for the token
                                      request
                                    items:
                                      type: string
                                    type: array
                                  token_url:
                                    description: The URL to fetch the token from
                                    minLength: 1
                                    type: string
                                required:
                                - client_id
                                - token_url
                                type: object
                              proxyURL:
                                description: Optional proxy URL.
                                type: string
                              tls_config:
                                description: TLS configuration for the client.
                                properties:
                                  ca:
                                    description: Stuct containing the CA cert to use
                                      for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  caFile:
                                    description: Path to the CA cert in the container
                                      to use for the targets.
                                    type: string
                                  cert:
                                    description: Struct containing the client cert
                                      file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  certFile:
                                    description: Path to the client cert file in the
                                      container for the targets.
                                    type: string
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keyFile:
                                    description: Path to the client key file in the
                                      container for the targets.
                                    type: string
                                  keySecret:
                                    description: Secret containing the client key
                                      file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverName:
                                    description: Used to verify the hostname for the
                                      targets.
                                    type: string
                                type: object
                            type: object
                          message:
                            description: The message body template
                            type: string
                          room_id:
                            description: The ID of the Webex Teams room where to send
                              the messages
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                        required:
                        - room_id
                        type: object
                      type: array
                    webhook_configs:
                      description: WebhookConfigs defines webhook notification configurations.
                      items:
                        description: |-
                          WebhookConfig configures notifications via a generic receiver supporting the webhook payload.
                          See https://prometheus.io/docs/alerting/latest/configuration/#webhook_config
                        properties:
                          http_config:
                            description: HTTP client configuration.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          max_alerts:
                            description: Maximum number of alerts to be sent per webhook
                              message. When 0, all alerts are included.
                            format: int32
                            minimum: 0
                            type: integer
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          url:
                            description: |-
                              URL to send requests to,
                              one of `urlSecret` and `url` must be defined.
                            type: string
                          url_secret:
                            description: |-
                              URLSecret defines secret name and key at the CRD namespace.
                              It must contain the webhook URL.
                              one of `urlSecret` and `url` must be defined.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    wechat_configs:
                      description: WeChatConfigs defines wechat notification configurations.
                      items:
                        description: |-
                          WeChatConfig configures notifications via WeChat.
                          See https://prometheus.io/docs/alerting/latest/configuration/#wechat_config
                        properties:
                          agent_id:
                            type: string
                          api_secret:
                            description: |-
                              The secret's key that contains the WeChat API key.
                              The secret needs to be in the same namespace as the AlertmanagerConfig
                              fallback to global alertmanager setting if empty
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          api_url:
                            description: |-
                              The WeChat API URL.
                              fallback to global alertmanager setting if empty
                            type: string
                          corp_id:
                            description: |-
                              The corp id for authentication.
                              fallback to global alertmanager setting if empty
                            type: string
                          http_config:
                            description: HTTP client configuration.
                            properties:
                              authorization:
                                description: |-
                                  Authorization header configuration for the client.
                                  This is mutually exclusive with BasicAuth and is only available starting from Alertmanager v0.22+.
                                properties:
                                  credentials:
                                    description: Reference to the secret with value
                                      for authorization
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  credentialsFile:
                                    description: File with value for authorization
                                    type: string
                                  type:
                                    description: Type of authorization, default to
                                      bearer
                                    type: string
                                type: object
                              basic_auth:
                                description: BasicAuth for the client.
                                properties:
                                  password:
                                    description: |-
                                      Password defines reference for secret with password value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  password_file:
                                    description: |-
                                      PasswordFile defines path to password file at disk
                                      must be pre-mounted
                                    type: string
                                  username:
                                    description: |-
                                      Username defines reference for secret with username value
                                      The secret needs to be in the same namespace as scrape object
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              bearer_token_file:
                                description: BearerTokenFile defines filename for
                                  bearer token, it must be mounted to pod.
                                type: string
                              bearer_token_secret:
                                description: |-
                                  The secret's key that contains the bearer token
                                  It must be at them same namespace as CRD
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              oauth2:
                                description: OAuth2 client credentials used to fetch
                                  a token for the targets.
                                properties:
                                  client_id:
                                    description: The secret or configmap containing
                                      the OAuth2 client id
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  client_secret:
                                    description: The secret containing the OAuth2
                                      client secret
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  client_secret_file:
                                    description: ClientSecretFile defines path for
                                      client secret file.
                                    type: string
                                  endpoint_params:
                                    additionalProperties:
                                      type: string
                                    description: Parameters to append to the token
                                      URL
                                    type: object
                                  scopes:
                                    description: OAuth2 scopes used for the token
                                      request
                                    items:
                                      type: string
                                    type: array
                                  token_url:
                                    description: The URL to fetch the token from
                                    minLength: 1
                                    type: string
                                required:
                                - client_id
                                - token_url
                                type: object
                              proxyURL:
                                description: Optional proxy URL.
                                type: string
                              tls_config:
                                description: TLS configuration for the client.
                                properties:
                                  ca:
                                    description: Stuct containing the CA cert to use
                                      for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  caFile:
                                    description: Path to the CA cert in the container
                                      to use for the targets.
                                    type: string
                                  cert:
                                    description: Struct containing the client cert
                                      file for the targets.
                                    properties:
                                      configMap:
                                        description: ConfigMap containing data to
                                          use for the targets.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secret:
                                        description: Secret containing data to use
                                          for the targets.
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                  certFile:
                                    description: Path to the client cert file in the
                                      container for the targets.
                                    type: string
                                  insecureSkipVerify:
                                    description: Disable target certificate validation.
                                    type: boolean
                                  keyFile:
                                    description: Path to the client key file in the
                                      container for the targets.
                                    type: string
                                  keySecret:
                                    description: Secret containing the client key
                                      file for the targets.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        default: ""
                                        description: |-
                                          Name of the referent.
                                          This field is effectively required, but due to backwards compatibility is
                                          allowed to be empty. Instances of this type with an empty value here are
                                          almost certainly wrong.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  serverName:
                                    description: Used to verify the hostname for the
                                      targets.
                                    type: string
                                type: object
                            type: object
                          message:
                            description: API request data as defined by the WeChat
                              API.
                            type: string
                          message_type:
                            type: string
                          send_resolved:
                            description: SendResolved controls notify about resolved
                              alerts.
                            type: boolean
                          to_party:
                            type: string
                          to_tag:
                            type: string
                          to_user:
                            type: string
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              route:
                description: Route definition for alertmanager, may include nested
                  routes.
                properties:
                  active_time_intervals:
                    description: |-
                      ActiveTimeIntervals Times when the route should be active
                      These must match the name at time_intervals
                    items:
                      type: string
                    type: array
                  continue:
                    description: |-
                      Continue indicating whether an alert should continue matching subsequent
                      sibling nodes. It will always be true for the first-level route if disableRouteContinueEnforce for vmalertmanager not set.
                    type: boolean
                  group_by:
                    description: List of labels to group by.
                    items:
                      type: string
                    type: array
                  group_interval:
                    description: How long to wait before sending an updated notification.
                    pattern: '[0-9]+(ms|s|m|h)'
                    type: string
                  group_wait:
                    description: How long to wait before sending the initial notification.
                    pattern: '[0-9]+(ms|s|m|h)'
                    type: string
                  matchers:
                    description: |-
                      List of matchers that the alert’s labels should match. For the first
                      level route, the operator adds a namespace: "CRD_NS" matcher.
                      https://prometheus.io/docs/alerting/latest/configuration/#matcher
                    items:
                      type: string
                    type: array
                  mute_time_intervals:
                    description: MuteTimeIntervals is a list of interval names that
                      will mute matched alert
                    items:
                      type: string
                    type: array
                  receiver:
                    description: Name of the receiver for this route.
                    type: string
                  repeat_interval:
                    description: How long to wait before repeating the last notification.
                    pattern: '[0-9]+(ms|s|m|h)'
                    type: string
                  routes:
                    description: |-
                      Child routes.
                      https://prometheus.io/docs/alerting/latest/configuration/#route
                    items:
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                required:
                - receiver
                type: object
              time_intervals:
                description: |-
                  TimeIntervals defines named interval for active/mute notifications interval
                  See https://prometheus.io/docs/alerting/latest/configuration/#time_interval
                items:
                  description: TimeIntervals for alerts
                  properties:
                    name:
                      description: Name of interval
                      type: string
                    time_intervals:
                      description: TimeIntervals interval configuration
                      items:
                        description: TimeInterval defines intervals of time
                        properties:
                          days_of_month:
                            description: |-
                              DayOfMonth defines list of numerical days in the month. Days begin at 1. Negative values are also accepted.
                              for example, ['1:5', '-3:-1']
                            items:
                              type: string
                            type: array
                          location:
                            description: Location in golang time location form, e.g.
                              UTC
                            type: string
                          months:
                            description: |-
                              Months  defines list of calendar months identified by a case-insensitive name (e.g. ‘January’) or numeric 1.
                              For example, ['1:3', 'may:august', 'december']
                            items:
                              type: string
                            type: array
                          times:
                            description: Times defines time range for mute
                            items:
                              description: TimeRange  ranges inclusive of the starting
                                time and exclusive of the end time
                              properties:
                                end_time:
                                  description: EndTime for example HH:MM
                                  type: string
                                start_time:
                                  description: StartTime for example  HH:MM
                                  type: string
                              required:
                              - end_time
                              - start_time
                              type: object
                            type: array
                          weekdays:
                            description: Weekdays defines list of days of the week,
                              where the week begins on Sunday and ends on Saturday.
                            items:
                              type: string
                            type: array
                          years:
                            description: |-
                              Years defines numerical list of years, ranges are accepted.
                              For example, ['2020:2022', '2030']
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  required:
                  - name
                  - time_intervals
                  type: object
                type: array
            required:
            - receivers
            - route
            type: object
          status:
            description: VMAlertmanagerConfigStatus defines the observed state of
              VMAlertmanagerConfig
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              lastErrorParentAlertmanagerName:
                type: string
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmalertmanagers.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMAlertmanager
    listKind: VMAlertmanagerList
    plural: vmalertmanagers
    shortNames:
    - vma
    singular: vmalertmanager
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The desired replicas number of Alertmanagers
      jsonPath: .spec.replicaCount
      name: ReplicaCount
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Current update status
      jsonPath: .status.updateStatus
      name: Update Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMAlertmanager represents Victoria-Metrics deployment for Alertmanager.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              Specification of the desired behavior of the VMAlertmanager cluster. More info:
              https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              additionalPeers:
                description: AdditionalPeers allows injecting a set of additional
                  Alertmanagers to peer with to form a highly available cluster.
                items:
                  type: string
                type: array
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              claimTemplates:
                description: ClaimTemplates allows adding additional VolumeClaimTemplates
                  for StatefulSet
                items:
                  description: PersistentVolumeClaim is a user's request for and claim
                    to a persistent volume
                  properties:
                    apiVersion:
                      description: |-
                        APIVersion defines the versioned schema of this representation of an object.
                        Servers should convert recognized schemas to the latest internal value, and
                        may reject unrecognized values.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                      type: string
                    kind:
                      description: |-
                        Kind is a string value representing the REST resource this object represents.
                        Servers may infer this from the endpoint the client submits requests to.
                        Cannot be updated.
                        In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: |-
                        spec defines the desired characteristics of a volume requested by a pod author.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        accessModes:
                          description: |-
                            accessModes contains the desired access modes the volume should have.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        dataSource:
                          description: |-
                            dataSource field can be used to specify either:
                            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                            * An existing PVC (PersistentVolumeClaim)
                            If the provisioner or an external controller can support the specified data source,
                            it will create a new volume based on the contents of the specified data source.
                            When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                            and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                            If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                          x-kubernetes-map-type: atomic
                        dataSourceRef:
                          description: |-
                            dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                            volume is desired. This may be any object from a non-empty API group (non
                            core object) or a PersistentVolumeClaim object.
                            When this field is specified, volume binding will only succeed if the type of
                            the specified object matches some installed volume populator or dynamic
                            provisioner.
                            This field will replace the functionality of the dataSource field and as such
                            if both fields are non-empty, they must have the same value. For backwards
                            compatibility, when namespace isn't specified in dataSourceRef,
                            both fields (dataSource and dataSourceRef) will be set to the same
                            value automatically if one of them is empty and the other is non-empty.
                            When namespace is specified in dataSourceRef,
                            dataSource isn't set to the same value and must be empty.
                            There are three important differences between dataSource and dataSourceRef:
                            * While dataSource only allows two specific types of objects, dataSourceRef
                              allows any non-core object, as well as PersistentVolumeClaim objects.
                            * While dataSource ignores disallowed values (dropping them), dataSourceRef
                              preserves all values, and generates an error if a disallowed value is
                              specified.
                            * While dataSource only allows local objects, dataSourceRef allows objects
                              in any namespaces.
                            (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                            (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                            namespace:
                              description: |-
                                Namespace is the namespace of resource being referenced
                                Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: |-
                            resources represents the minimum resources the volume should have.
                            If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                            that are lower than previous value but must still be higher than capacity recorded in the
                            status field of the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        selector:
                          description: selector is a label query over volumes to consider
                            for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        storageClassName:
                          description: |-
                            storageClassName is the name of the StorageClass required by the claim.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                          type: string
                        volumeAttributesClassName:
                          description: |-
                            volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                            If specified, the CSI driver will create or update the volume with the attributes defined
                            in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                            it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                            will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                            If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                            will be set by the persistentvolume controller if it exists.
                            If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                            set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                            exists.
                            More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                            (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                          type: string
                        volumeMode:
                          description: |-
                            volumeMode defines what type of volume is required by the claim.
                            Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: volumeName is the binding reference to the
                            PersistentVolume backing this claim.
                          type: string
                      type: object
                    status:
                      description: |-
                        status represents the current information/status of a persistent volume claim.
                        Read-only.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                      properties:
                        accessModes:
                          description: |-
                            accessModes contains the actual access modes the volume backing the PVC has.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        allocatedResourceStatuses:
                          additionalProperties:
                            description: |-
                              When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                              that it does not recognizes, then it should ignore that update and let other controllers
                              handle it.
                            type: string
                          description: "allocatedResourceStatuses stores status of
                            resource being resized for the given PVC.\nKey names follow
                            standard Kubernetes label syntax. Valid values are either:\n\t*
                            Un-prefixed keys:\n\t\t- storage - the capacity of the
                            volume.\n\t* Custom resources must use implementation-defined
                            prefixed names such as \"example.com/my-custom-resource\"\nApart
                            from above values - keys that are unprefixed or have kubernetes.io
                            prefix are considered\nreserved and hence may not be used.\n\nClaimResourceStatus
                            can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState
                            set when resize controller starts resizing the volume
                            in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                            set when resize has failed in resize controller with a
                            terminal error.\n\t- NodeResizePending:\n\t\tState set
                            when resize controller has finished resizing the volume
                            but further resizing of\n\t\tvolume is needed on the node.\n\t-
                            NodeResizeInProgress:\n\t\tState set when kubelet starts
                            resizing the volume.\n\t- NodeResizeFailed:\n\t\tState
                            set when resizing has failed in kubelet with a terminal
                            error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor
                            example: if expanding a PVC for more capacity - this field
                            can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                            = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                            = \"NodeResizeFailed\"\nWhen this field is not set, it
                            means that no resize operation is in progress for the
                            given PVC.\n\nA controller that receives PVC update with
                            previously unknown resourceName or ClaimResourceStatus\nshould
                            ignore the update for the purpose it was designed. For
                            example - a controller that\nonly is responsible for resizing
                            capacity of the volume, should ignore PVC updates that
                            change other valid\nresources associated with PVC.\n\nThis
                            is an alpha field and requires enabling RecoverVolumeExpansionFailure
                            feature."
                          type: object
                          x-kubernetes-map-type: granular
                        allocatedResources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: "allocatedResources tracks the resources allocated
                            to a PVC including its capacity.\nKey names follow standard
                            Kubernetes label syntax. Valid values are either:\n\t*
                            Un-prefixed keys:\n\t\t- storage - the capacity of the
                            volume.\n\t* Custom resources must use implementation-defined
                            prefixed names such as \"example.com/my-custom-resource\"\nApart
                            from above values - keys that are unprefixed or have kubernetes.io
                            prefix are considered\nreserved and hence may not be used.\n\nCapacity
                            reported here may be larger than the actual capacity when
                            a volume expansion operation\nis requested.\nFor storage
                            quota, the larger value from allocatedResources and PVC.spec.resources
                            is used.\nIf allocatedResources is not set, PVC.spec.resources
                            alone is used for quota calculation.\nIf a volume expansion
                            capacity request is lowered, allocatedResources is only\nlowered
                            if there are no expansion operations in progress and if
                            the actual volume capacity\nis equal or lower than the
                            requested capacity.\n\nA controller that receives PVC
                            update with previously unknown resourceName\nshould ignore
                            the update for the purpose it was designed. For example
                            - a controller that\nonly is responsible for resizing
                            capacity of the volume, should ignore PVC updates that
                            change other valid\nresources associated with PVC.\n\nThis
                            is an alpha field and requires enabling RecoverVolumeExpansionFailure
                            feature."
                          type: object
                        capacity:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: capacity represents the actual resources of
                            the underlying volume.
                          type: object
                        conditions:
                          description: |-
                            conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                            resized then the Condition will be set to 'Resizing'.
                          items:
                            description: PersistentVolumeClaimCondition contains details
                              about state of pvc
                            properties:
                              lastProbeTime:
                                description: lastProbeTime is the time we probed the
                                  condition.
                                format: date-time
                                type: string
                              lastTransitionTime:
                                description: lastTransitionTime is the time the condition
                                  transitioned from one status to another.
                                format: date-time
                                type: string
                              message:
                                description: message is the human-readable message
                                  indicating details about last transition.
                                type: string
                              reason:
                                description: |-
                                  reason is a unique, this should be a short, machine understandable string that gives the reason
                                  for condition's last transition. If it reports "Resizing" that means the underlying
                                  persistent volume is being resized.
                                type: string
                              status:
                                description: |-
                                  Status is the status of the condition.
                                  Can be True, False, Unknown.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                type: string
                              type:
                                description: |-
                                  Type is the type of the condition.
                                  More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - type
                          x-kubernetes-list-type: map
                        currentVolumeAttributesClassName:
                          description: |-
                            currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                            When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                            This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                          type: string
                        modifyVolumeStatus:
                          description: |-
                            ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                            When this is unset, there is no ModifyVolume operation being attempted.
                            This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                          properties:
                            status:
                              description: "status is the status of the ControllerModifyVolume
                                operation. It can be in any of following states:\n
                                - Pending\n   Pending indicates that the PersistentVolumeClaim
                                cannot be modified due to unmet requirements, such
                                as\n   the specified VolumeAttributesClass not existing.\n
                                - InProgress\n   InProgress indicates that the volume
                                is being modified.\n - Infeasible\n  Infeasible indicates
                                that the request has been rejected as invalid by the
                                CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass
                                needs to be specified.\nNote: New statuses can be
                                added in the future. Consumers should check for unknown
                                statuses and fail appropriately."
                              type: string
                            targetVolumeAttributesClassName:
                              description: targetVolumeAttributesClassName is the
                                name of the VolumeAttributesClass the PVC currently
                                being reconciled
                              type: string
                          required:
                          - status
                          type: object
                        phase:
                          description: phase represents the current phase of PersistentVolumeClaim.
                          type: string
                      type: object
                  type: object
                type: array
              clusterAdvertiseAddress:
                description: |-
                  ClusterAdvertiseAddress is the explicit address to advertise in cluster.
                  Needs to be provided for non RFC1918 [1] (public) addresses.
                  [1] RFC1918: https://tools.ietf.org/html/rfc1918
                type: string
              clusterDomainName:
                description: |-
                  ClusterDomainName defines domain name suffix for in-cluster dns addresses
                  aka .cluster.local
                  used to build pod peer addresses for in-cluster communication
                type: string
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/configs/CONFIGMAP_NAME folder
                items:
                  type: string
                type: array
              configNamespaceSelector:
                description: |2-
                   ConfigNamespaceSelector defines namespace selector for VMAlertmanagerConfig.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAlertmanager namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              configRawYaml:
                description: |-
                  ConfigRawYaml - raw configuration for alertmanager,
                  it helps it to start without secret.
                  priority -> hardcoded ConfigRaw -> ConfigRaw, provided by user -> ConfigSecret.
                type: string
              configReloaderExtraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container
                  for example resyncInterval: "30s"
                type: object
              configReloaderImageTag:
                description: ConfigReloaderImageTag defines image:tag for config-reloader
                  container
                type: string
              configReloaderResources:
                description: |-
                  ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              configSecret:
                description: |-
                  ConfigSecret is the name of a Kubernetes Secret in the same namespace as the
                  VMAlertmanager object, which contains configuration for this VMAlertmanager,
                  configuration must be inside secret key: alertmanager.yaml.
                  It must be created by user.
                  instance. Defaults to 'vmalertmanager-<alertmanager-name>'
                  The secret is mounted into /etc/alertmanager/config.
                type: string
              configSelector:
                description: |-
                  ConfigSelector defines selector for VMAlertmanagerConfig, result config will be merged with with Raw or Secret config.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAlertmanager namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              disableAutomountServiceAccountToken:
                description: |-
                  DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                  Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                  For example, vmagent and vm-config-reloader requires k8s API access.
                  Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                  And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                type: boolean
              disableNamespaceMatcher:
                description: |-
                  DisableNamespaceMatcher disables top route namespace label matcher for VMAlertmanagerConfig
                  It may be useful if alert doesn't have namespace label for some reason
                type: boolean
              disableRouteContinueEnforce:
                description: DisableRouteContinueEnforce cancel the behavior for VMAlertmanagerConfig
                  that always enforce first-level route continue to true
                type: boolean
              disableSelfServiceScrape:
                description: |-
                  DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                  for the application.
                  Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                type: boolean
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                items:
                  x-kubernetes-preserve-unknown-fields: true
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: |-
                            Name is this DNS resolver option's name.
                            Required.
                          type: string
                        value:
                          description: Value is this DNS resolver option's value.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              enforcedTopRouteMatchers:
                description: |-
                  EnforcedTopRouteMatchers defines label matchers to be added for the top route
                  of VMAlertmanagerConfig
                  It allows to make some set of labels required for alerts.
                  https://prometheus.io/docs/alerting/latest/configuration/#matcher
                items:
                  type: string
                type: array
              externalURL:
                description: |-
                  ExternalURL the VMAlertmanager instances will be available under. This is
                  necessary to generate correct URLs. This is necessary if VMAlertmanager is not
                  served from root of a DNS name.
                type: string
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to the application container
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be passed to the application container
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              gossipConfig:
                description: GossipConfig defines gossip TLS configuration for Alertmanager
                  cluster
                properties:
                  tls_client_config:
                    description: TLSClientConfig defines client TLS configuration
                      for alertmanager
                    properties:
                      ca_file:
                        description: |-
                          CAFile defines path to the pre-mounted file with CA
                          mutually exclusive with CASecretRef
                        type: string
                      ca_secret_ref:
                        description: |-
                          CA defines reference for secret with CA content under given key
                          mutually exclusive with CAFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      cert_file:
                        description: |-
                          CertFile defines path to the pre-mounted file with certificate
                          mutually exclusive with CertSecretRef
                        type: string
                      cert_secret_ref:
                        description: |-
                          CertSecretRef defines reference for secret with certificate content under given key
                          mutually exclusive with CertFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      insecure_skip_verify:
                        description: |-
                          Cert defines reference for secret with CA content under given key
                          mutually exclusive with CertFile
                        type: boolean
                      key_file:
                        description: |-
                          KeyFile defines path to the pre-mounted file with certificate key
                          mutually exclusive with KeySecretRef
                        type: string
                      key_secret_ref:
                        description: |-
                          Key defines reference for secret with certificate key content under given key
                          mutually exclusive with KeyFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      server_name:
                        description: ServerName indicates a name of a server
                        type: string
                    type: object
                  tls_server_config:
                    description: TLSServerConfig defines server TLS configuration
                      for alertmanager
                    properties:
                      cert_file:
                        description: |-
                          CertFile defines path to the pre-mounted file with certificate
                          mutually exclusive with CertSecretRef
                        type: string
                      cert_secret_ref:
                        description: |-
                          CertSecretRef defines reference for secret with certificate content under given key
                          mutually exclusive with CertFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      cipher_suites:
                        description: |-
                          CipherSuites defines list of supported cipher suites for TLS versions up to TLS 1.2
                          https://golang.org/pkg/crypto/tls/#pkg-constants
                        items:
                          type: string
                        type: array
                      client_auth_type:
                        description: |-
                          Cert defines reference for secret with CA content under given key
                          mutually exclusive with CertFile
                          ClientAuthType defines server policy for client authentication
                          If you want to enable client authentication (aka mTLS), you need to use RequireAndVerifyClientCert
                          Note, mTLS is supported only at enterprise version of VictoriaMetrics components
                        enum:
                        - NoClientCert
                        - RequireAndVerifyClientCert
                        type: string
                      client_ca_file:
                        description: |-
                          ClientCAFile defines path to the pre-mounted file with CA
                          mutually exclusive with ClientCASecretRef
                        type: string
                      client_ca_secret_ref:
                        description: |-
                          ClientCASecretRef defines reference for secret with CA content under given key
                          mutually exclusive with ClientCAFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      curve_preferences:
                        description: |-
                          CurvePreferences defines elliptic curves that will be used in an ECDHE handshake, in preference order.
                          https://golang.org/pkg/crypto/tls/#CurveID
                        items:
                          type: string
                        type: array
                      key_file:
                        description: |-
                          KeyFile defines path to the pre-mounted file with certificate key
                          mutually exclusive with KeySecretRef
                        type: string
                      key_secret_ref:
                        description: |-
                          Key defines reference for secret with certificate key content under given key
                          mutually exclusive with KeyFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      max_version:
                        description: MaxVersion maximum TLS version that is acceptable.
                        enum:
                        - TLS10
                        - TLS11
                        - TLS12
                        - TLS13
                        type: string
                      min_version:
                        description: MinVersion minimum TLS version that is acceptable.
                        enum:
                        - TLS10
                        - TLS11
                        - TLS12
                        - TLS13
                        type: string
                      prefer_server_cipher_suites:
                        description: |-
                          PreferServerCipherSuites controls whether the server selects the
                          client's most preferred ciphersuite
                        type: boolean
                    type: object
                type: object
              host_aliases:
                description: |-
                  HostAliasesUnderScore provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                  Has Priority over hostAliases field
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings
                  if no specified operator uses default version from operator config
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition.
                  Any errors during the execution of an initContainer will lead to a restart of the Pod.
                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              listenLocal:
                description: |-
                  ListenLocal makes the VMAlertmanager server listen on loopback, so that it
                  does not bind against the Pod IP. Note this is only for the VMAlertmanager
                  UI, not the gossip communication.
                type: boolean
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: LogFormat for VMAlertmanager to be configured with.
                enum:
                - logfmt
                - json
                type: string
              logLevel:
                description: Log level for VMAlertmanager to be configured with.
                enum:
                - debug
                - info
                - warn
                - error
                - DEBUG
                - INFO
                - WARN
                - ERROR
                type: string
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                  if previous in healthy state
                  Has no effect for VLogs and VMSingle
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podDisruptionBudget:
                description: PodDisruptionBudget created by operator
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at most "maxUnavailable" pods selected by
                      "selector" are unavailable after the eviction, i.e. even in absence of
                      the evicted pod. For example, one can prevent all voluntary evictions
                      by specifying 0. This is a mutually exclusive setting with "minAvailable".
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at least "minAvailable" pods selected by
                      "selector" will still be available after the eviction, i.e. even in the
                      absence of the evicted pod.  So for example you can prevent all voluntary
                      evictions by specifying "100%".
                    x-kubernetes-int-or-string: true
                  selectorLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      replaces default labels selector generated by operator
                      it's useful when you need to create custom budget
                    type: object
                type: object
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the alertmanager pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen address
                type: string
              portName:
                description: |-
                  PortName used for the pods and governing service.
                  This defaults to web
                type: string
              priorityClassName:
                description: PriorityClassName class assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              replicaCount:
                description: ReplicaCount is the expected size of the Application.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              retention:
                description: |-
                  Retention Time duration VMAlertmanager shall retain data for. Default is '120h',
                  and must match the regular expression `[0-9]+(ms|s|m|h)` (milliseconds seconds minutes hours).
                pattern: '[0-9]+(ms|s|m|h)'
                type: string
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the Deployment revision history.
                  Has no effect at StatefulSets
                  Defaults to 10.
                format: int32
                type: integer
              rollingUpdateStrategy:
                description: |-
                  RollingUpdateStrategy defines strategy for application updates
                  Default is OnDelete, in this case operator handles update process
                  Can be changed for RollingUpdate
                type: string
              routePrefix:
                description: |-
                  RoutePrefix VMAlertmanager registers HTTP handlers for. This is useful,
                  if using ExternalURL and a proxy is rewriting HTTP routes of a request,
                  and the actual ExternalURL is still true, but the server serves requests
                  under a different route prefix. For example for use with `kubectl proxy`.
                type: string
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/secrets/SECRET_NAME folder
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              selectAllByDefault:
                description: |-
                  SelectAllByDefault changes default behavior for empty CRD selectors, such ConfigSelector.
                  with selectAllByDefault: true and undefined ConfigSelector and ConfigNamespaceSelector
                  Operator selects all exist alertManagerConfigs
                  with selectAllByDefault: false - selects nothing
                type: boolean
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to use to run the pods
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmalertmanager
                  VMServiceScrape spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vmalertmanager service
                  spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              storage:
                description: |-
                  Storage is the definition of how storage will be used by the VMAlertmanager
                  instances.
                properties:
                  disableMountSubPath:
                    description: |-
                      Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.
                      DisableMountSubPath allows to remove any subPath usage in volume mounts.
                    type: boolean
                  emptyDir:
                    description: |-
                      EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More
                      info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
                    properties:
                      medium:
                        description: |-
                          medium represents what type of storage medium should back this directory.
                          The default is "" which means to use the node's default medium.
                          Must be an empty string (default) or Memory.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        type: string
                      sizeLimit:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          sizeLimit is the total amount of local storage required for this EmptyDir volume.
                          The size limit is also applicable for memory medium.
                          The maximum usage on memory medium EmptyDir would be the minimum value between
                          the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                          The default is nil which means that the limit is undefined.
                          More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                    type: object
                  volumeClaimTemplate:
                    description: A PVC spec to be used by the VMAlertManager StatefulSets.
                    properties:
                      apiVersion:
                        description: |-
                          APIVersion defines the versioned schema of this representation of an object.
                          Servers should convert recognized schemas to the latest internal value, and
                          may reject unrecognized values.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                        type: string
                      kind:
                        description: |-
                          Kind is a string value representing the REST resource this object represents.
                          Servers may infer this from the endpoint the client submits requests to.
                          Cannot be updated.
                          In CamelCase.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      metadata:
                        description: EmbeddedMetadata contains metadata relevant to
                          an EmbeddedResource.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Labels Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                            type: object
                          name:
                            description: |-
                              Name must be unique within a namespace. Is required when creating resources, although
                              some resources may allow a client to request the generation of an appropriate name
                              automatically. Name is primarily intended for creation idempotence and configuration
                              definition.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                            type: string
                        type: object
                      spec:
                        description: |-
                          Spec defines the desired characteristics of a volume requested by a pod author.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                        properties:
                          accessModes:
                            description: |-
                              accessModes contains the desired access modes the volume should have.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          dataSource:
                            description: |-
                              dataSource field can be used to specify either:
                              * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim)
                              If the provisioner or an external controller can support the specified data source,
                              it will create a new volume based on the contents of the specified data source.
                              When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                              and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                              If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                            properties:
                              apiGroup:
                                description: |-
                                  APIGroup is the group for the resource being referenced.
                                  If APIGroup is not specified, the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                            x-kubernetes-map-type: atomic
                          dataSourceRef:
                            description: |-
                              dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                              volume is desired. This may be any object from a non-empty API group (non
                              core object) or a PersistentVolumeClaim object.
                              When this field is specified, volume binding will only succeed if the type of
                              the specified object matches some installed volume populator or dynamic
                              provisioner.
                              This field will replace the functionality of the dataSource field and as such
                              if both fields are non-empty, they must have the same value. For backwards
                              compatibility, when namespace isn't specified in dataSourceRef,
                              both fields (dataSource and dataSourceRef) will be set to the same
                              value automatically if one of them is empty and the other is non-empty.
                              When namespace is specified in dataSourceRef,
                              dataSource isn't set to the same value and must be empty.
                              There are three important differences between dataSource and dataSourceRef:
                              * While dataSource only allows two specific types of objects, dataSourceRef
                                allows any non-core object, as well as PersistentVolumeClaim objects.
                              * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                preserves all values, and generates an error if a disallowed value is
                                specified.
                              * While dataSource only allows local objects, dataSourceRef allows objects
                                in any namespaces.
                              (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                              (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                            properties:
                              apiGroup:
                                description: |-
                                  APIGroup is the group for the resource being referenced.
                                  If APIGroup is not specified, the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of resource being referenced
                                  Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                  (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          resources:
                            description: |-
                              resources represents the minimum resources the volume should have.
                              If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                              that are lower than previous value but must still be higher than capacity recorded in the
                              status field of the claim.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          selector:
                            description: selector is a label query over volumes to
                              consider for binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          storageClassName:
                            description: |-
                              storageClassName is the name of the StorageClass required by the claim.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                            type: string
                          volumeAttributesClassName:
                            description: |-
                              volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                              If specified, the CSI driver will create or update the volume with the attributes defined
                              in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                              it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                              will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                              If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                              will be set by the persistentvolume controller if it exists.
                              If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                              set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                              exists.
                              More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                              (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                            type: string
                          volumeMode:
                            description: |-
                              volumeMode defines what type of volume is required by the claim.
                              Value of Filesystem is implied when not included in claim spec.
                            type: string
                          volumeName:
                            description: volumeName is the binding reference to the
                              PersistentVolume backing this claim.
                            type: string
                        type: object
                      status:
                        description: |-
                          Status represents the current information/status of a persistent volume claim.
                          Read-only.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                        properties:
                          accessModes:
                            description: |-
                              accessModes contains the actual access modes the volume backing the PVC has.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          allocatedResourceStatuses:
                            additionalProperties:
                              description: |-
                                When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                                that it does not recognizes, then it should ignore that update and let other controllers
                                handle it.
                              type: string
                            description: "allocatedResourceStatuses stores status
                              of resource being resized for the given PVC.\nKey names
                              follow standard Kubernetes label syntax. Valid values
                              are either:\n\t* Un-prefixed keys:\n\t\t- storage -
                              the capacity of the volume.\n\t* Custom resources must
                              use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart
                              from above values - keys that are unprefixed or have
                              kubernetes.io prefix are considered\nreserved and hence
                              may not be used.\n\nClaimResourceStatus can be in any
                              of following states:\n\t- ControllerResizeInProgress:\n\t\tState
                              set when resize controller starts resizing the volume
                              in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                              set when resize has failed in resize controller with
                              a terminal error.\n\t- NodeResizePending:\n\t\tState
                              set when resize controller has finished resizing the
                              volume but further resizing of\n\t\tvolume is needed
                              on the node.\n\t- NodeResizeInProgress:\n\t\tState set
                              when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState
                              set when resizing has failed in kubelet with a terminal
                              error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor
                              example: if expanding a PVC for more capacity - this
                              field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                              = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                              = \"NodeResizeFailed\"\nWhen this field is not set,
                              it means that no resize operation is in progress for
                              the given PVC.\n\nA controller that receives PVC update
                              with previously unknown resourceName or ClaimResourceStatus\nshould
                              ignore the update for the purpose it was designed. For
                              example - a controller that\nonly is responsible for
                              resizing capacity of the volume, should ignore PVC updates
                              that change other valid\nresources associated with PVC.\n\nThis
                              is an alpha field and requires enabling RecoverVolumeExpansionFailure
                              feature."
                            type: object
                            x-kubernetes-map-type: granular
                          allocatedResources:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: "allocatedResources tracks the resources
                              allocated to a PVC including its capacity.\nKey names
                              follow standard Kubernetes label syntax. Valid values
                              are either:\n\t* Un-prefixed keys:\n\t\t- storage -
                              the capacity of the volume.\n\t* Custom resources must
                              use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart
                              from above values - keys that are unprefixed or have
                              kubernetes.io prefix are considered\nreserved and hence
                              may not be used.\n\nCapacity reported here may be larger
                              than the actual capacity when a volume expansion operation\nis
                              requested.\nFor storage quota, the larger value from
                              allocatedResources and PVC.spec.resources is used.\nIf
                              allocatedResources is not set, PVC.spec.resources alone
                              is used for quota calculation.\nIf a volume expansion
                              capacity request is lowered, allocatedResources is only\nlowered
                              if there are no expansion operations in progress and
                              if the actual volume capacity\nis equal or lower than
                              the requested capacity.\n\nA controller that receives
                              PVC update with previously unknown resourceName\nshould
                              ignore the update for the purpose it was designed. For
                              example - a controller that\nonly is responsible for
                              resizing capacity of the volume, should ignore PVC updates
                              that change other valid\nresources associated with PVC.\n\nThis
                              is an alpha field and requires enabling RecoverVolumeExpansionFailure
                              feature."
                            type: object
                          capacity:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: capacity represents the actual resources
                              of the underlying volume.
                            type: object
                          conditions:
                            description: |-
                              conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                              resized then the Condition will be set to 'Resizing'.
                            items:
                              description: PersistentVolumeClaimCondition contains
                                details about state of pvc
                              properties:
                                lastProbeTime:
                                  description: lastProbeTime is the time we probed
                                    the condition.
                                  format: date-time
                                  type: string
                                lastTransitionTime:
                                  description: lastTransitionTime is the time the
                                    condition transitioned from one status to another.
                                  format: date-time
                                  type: string
                                message:
                                  description: message is the human-readable message
                                    indicating details about last transition.
                                  type: string
                                reason:
                                  description: |-
                                    reason is a unique, this should be a short, machine understandable string that gives the reason
                                    for condition's last transition. If it reports "Resizing" that means the underlying
                                    persistent volume is being resized.
                                  type: string
                                status:
                                  description: |-
                                    Status is the status of the condition.
                                    Can be True, False, Unknown.
                                    More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                  type: string
                                type:
                                  description: |-
                                    Type is the type of the condition.
                                    More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                  type: string
                              required:
                              - status
                              - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - type
                            x-kubernetes-list-type: map
                          currentVolumeAttributesClassName:
                            description: |-
                              currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                              When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                              This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                            type: string
                          modifyVolumeStatus:
                            description: |-
                              ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                              When this is unset, there is no ModifyVolume operation being attempted.
                              This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                            properties:
                              status:
                                description: "status is the status of the ControllerModifyVolume
                                  operation. It can be in any of following states:\n
                                  - Pending\n   Pending indicates that the PersistentVolumeClaim
                                  cannot be modified due to unmet requirements, such
                                  as\n   the specified VolumeAttributesClass not existing.\n
                                  - InProgress\n   InProgress indicates that the volume
                                  is being modified.\n - Infeasible\n  Infeasible
                                  indicates that the request has been rejected as
                                  invalid by the CSI driver. To\n\t  resolve the error,
                                  a valid VolumeAttributesClass needs to be specified.\nNote:
                                  New statuses can be added in the future. Consumers
                                  should check for unknown statuses and fail appropriately."
                                type: string
                              targetVolumeAttributesClassName:
                                description: targetVolumeAttributesClassName is the
                                  name of the VolumeAttributesClass the PVC currently
                                  being reconciled
                                type: string
                            required:
                            - status
                            type: object
                          phase:
                            description: phase represents the current phase of PersistentVolumeClaim.
                            type: string
                        type: object
                    type: object
                type: object
              templates:
                description: |-
                  Templates is a list of ConfigMap key references for ConfigMaps in the same namespace as the VMAlertmanager
                  object, which shall be mounted into the VMAlertmanager Pods.
                  The Templates are mounted into /etc/vm/templates/<configmap-name>/<configmap-key>.
                items:
                  description: ConfigMapKeyReference refers to a key in a ConfigMap.
                  properties:
                    key:
                      description: The ConfigMap key to refer to.
                      type: string
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  required:
                  - key
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              useDefaultResources:
                description: |-
                  UseDefaultResources controls resource settings
                  By default, operator sets built-in resource requirements
                type: boolean
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              useVMConfigReloader:
                description: |-
                  UseVMConfigReloader replaces prometheus-like config-reloader
                  with vm one. It uses secrets watch instead of file watch
                  which greatly increases speed of config updates
                type: boolean
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the Application container
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                  Volumes specified will be appended to other volumes that are generated.
                  / +optional
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              webConfig:
                description: |-
                  WebConfig defines configuration for webserver
                  https://github.com/prometheus/alertmanager/blob/main/docs/https.md
                properties:
                  basic_auth_users:
                    additionalProperties:
                      type: string
                    description: |-
                      BasicAuthUsers Usernames and hashed passwords that have full access to the web server
                      Passwords must be hashed with bcrypt
                    type: object
                  http_server_config:
                    description: HTTPServerConfig defines http server configuration
                      for alertmanager web server
                    properties:
                      headers:
                        additionalProperties:
                          type: string
                        description: Headers defines list of headers that can be added
                          to HTTP responses.
                        type: object
                      http2:
                        description: |-
                          HTTP2 enables HTTP/2 support. Note that HTTP/2 is only supported with TLS.
                          This can not be changed on the fly.
                        type: boolean
                    type: object
                  tls_server_config:
                    description: TLSServerConfig defines server TLS configuration
                      for alertmanager
                    properties:
                      cert_file:
                        description: |-
                          CertFile defines path to the pre-mounted file with certificate
                          mutually exclusive with CertSecretRef
                        type: string
                      cert_secret_ref:
                        description: |-
                          CertSecretRef defines reference for secret with certificate content under given key
                          mutually exclusive with CertFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      cipher_suites:
                        description: |-
                          CipherSuites defines list of supported cipher suites for TLS versions up to TLS 1.2
                          https://golang.org/pkg/crypto/tls/#pkg-constants
                        items:
                          type: string
                        type: array
                      client_auth_type:
                        description: |-
                          Cert defines reference for secret with CA content under given key
                          mutually exclusive with CertFile
                          ClientAuthType defines server policy for client authentication
                          If you want to enable client authentication (aka mTLS), you need to use RequireAndVerifyClientCert
                          Note, mTLS is supported only at enterprise version of VictoriaMetrics components
                        enum:
                        - NoClientCert
                        - RequireAndVerifyClientCert
                        type: string
                      client_ca_file:
                        description: |-
                          ClientCAFile defines path to the pre-mounted file with CA
                          mutually exclusive with ClientCASecretRef
                        type: string
                      client_ca_secret_ref:
                        description: |-
                          ClientCASecretRef defines reference for secret with CA content under given key
                          mutually exclusive with ClientCAFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      curve_preferences:
                        description: |-
                          CurvePreferences defines elliptic curves that will be used in an ECDHE handshake, in preference order.
                          https://golang.org/pkg/crypto/tls/#CurveID
                        items:
                          type: string
                        type: array
                      key_file:
                        description: |-
                          KeyFile defines path to the pre-mounted file with certificate key
                          mutually exclusive with KeySecretRef
                        type: string
                      key_secret_ref:
                        description: |-
                          Key defines reference for secret with certificate key content under given key
                          mutually exclusive with KeyFile
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      max_version:
                        description: MaxVersion maximum TLS version that is acceptable.
                        enum:
                        - TLS10
                        - TLS11
                        - TLS12
                        - TLS13
                        type: string
                      min_version:
                        description: MinVersion minimum TLS version that is acceptable.
                        enum:
                        - TLS10
                        - TLS11
                        - TLS12
                        - TLS13
                        type: string
                      prefer_server_cipher_suites:
                        description: |-
                          PreferServerCipherSuites controls whether the server selects the
                          client's most preferred ciphersuite
                        type: boolean
                    type: object
                type: object
            type: object
          status:
            description: |-
              Most recent observed status of the VMAlertmanager cluster.
              Operator API itself. More info:
              https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmalerts.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMAlert
    listKind: VMAlertList
    plural: vmalerts
    singular: vmalert
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of update rollout
      jsonPath: .status.updateStatus
      name: Status
      type: string
    - description: The desired replicas number of Alertmanagers
      jsonPath: .spec.replicaCount
      name: ReplicaCount
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMAlert  executes a list of given alerting or recording rules
          against configured address.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMAlertSpec defines the desired state of VMAlert
            properties:
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/configs/CONFIGMAP_NAME folder
                items:
                  type: string
                type: array
              configReloaderExtraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container
                  for example resyncInterval: "30s"
                type: object
              configReloaderImageTag:
                description: ConfigReloaderImageTag defines image:tag for config-reloader
                  container
                type: string
              configReloaderResources:
                description: |-
                  ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              datasource:
                description: Datasource Victoria Metrics or VMSelect url. Required
                  parameter. e.g. http://127.0.0.1:8428
                properties:
                  basicAuth:
                    description: BasicAuth allow an endpoint to authenticate over
                      basic authentication
                    properties:
                      password:
                        description: |-
                          Password defines reference for secret with password value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      password_file:
                        description: |-
                          PasswordFile defines path to password file at disk
                          must be pre-mounted
                        type: string
                      username:
                        description: |-
                          Username defines reference for secret with username value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  bearerTokenFile:
                    description: Path to bearer token file
                    type: string
                  bearerTokenSecret:
                    description: Optional bearer auth token to use for -remoteWrite.url
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  headers:
                    description: |-
                      Headers allow configuring custom http headers
                      Must be in form of semicolon separated header with value
                      e.g.
                      headerName:headerValue
                      vmalert supports it since 1.79.0 version
                    items:
                      type: string
                    type: array
                  oauth2:
                    description: OAuth2 defines OAuth2 configuration
                    required:
                    - client_id
                    - token_url
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  tlsConfig:
                    description: TLSConfig specifies TLSConfig configuration parameters.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  url:
                    description: Victoria Metrics or VMSelect url. Required parameter.
                      E.g. http://127.0.0.1:8428
                    type: string
                required:
                - url
                type: object
              disableAutomountServiceAccountToken:
                description: |-
                  DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                  Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                  For example, vmagent and vm-config-reloader requires k8s API access.
                  Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                  And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                type: boolean
              disableSelfServiceScrape:
                description: |-
                  DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                  for the application.
                  Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                type: boolean
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                items:
                  x-kubernetes-preserve-unknown-fields: true
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: |-
                            Name is this DNS resolver option's name.
                            Required.
                          type: string
                        value:
                          description: Value is this DNS resolver option's value.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              enforcedNamespaceLabel:
                description: |-
                  EnforcedNamespaceLabel enforces adding a namespace label of origin for each alert
                  and metric that is user created. The label value will always be the namespace of the object that is
                  being created.
                type: string
              evaluationInterval:
                description: EvaluationInterval defines how often to evaluate rules
                  by default
                pattern: '[0-9]+(ms|s|m|h)'
                type: string
              externalLabels:
                additionalProperties:
                  type: string
                description: 'ExternalLabels in the form ''name: value'' to add to
                  all generated recording rules and alerts.'
                type: object
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to the application container
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be passed to the application container
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              host_aliases:
                description: |-
                  HostAliasesUnderScore provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                  Has Priority over hostAliases field
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings
                  if no specified operator uses default version from operator config
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition.
                  Any errors during the execution of an initContainer will lead to a restart of the Pod.
                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See [here](https://docs.victoriametrics.com/enterprise)
                properties:
                  forceOffline:
                    description: Enforce offline verification of the license key.
                    type: boolean
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in [VictoriaMetrics enterprise](https://docs.victoriametrics.com/enterprise).
                      To request a trial license, [go to](https://victoriametrics.com/products/enterprise/trial)
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  reloadInterval:
                    description: Interval to be used for checking for license key
                      changes. Note that this is only applicable when using KeyRef.
                    type: string
                type: object
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: |-
                  LogFormat for VMAlert to be configured with.
                  default or json
                enum:
                - default
                - json
                type: string
              logLevel:
                description: LogLevel for VMAlert to be configured with.
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                  if previous in healthy state
                  Has no effect for VLogs and VMSingle
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              notifier:
                description: |-
                  Notifier prometheus alertmanager endpoint spec. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093
                  If specified both notifier and notifiers, notifier will be added as last element to notifiers.
                  only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier
                properties:
                  basicAuth:
                    description: BasicAuth allow an endpoint to authenticate over
                      basic authentication
                    properties:
                      password:
                        description: |-
                          Password defines reference for secret with password value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      password_file:
                        description: |-
                          PasswordFile defines path to password file at disk
                          must be pre-mounted
                        type: string
                      username:
                        description: |-
                          Username defines reference for secret with username value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  bearerTokenFile:
                    description: Path to bearer token file
                    type: string
                  bearerTokenSecret:
                    description: Optional bearer auth token to use for -remoteWrite.url
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  headers:
                    description: |-
                      Headers allow configuring custom http headers
                      Must be in form of semicolon separated header with value
                      e.g.
                      headerName:headerValue
                      vmalert supports it since 1.79.0 version
                    items:
                      type: string
                    type: array
                  oauth2:
                    description: OAuth2 defines OAuth2 configuration
                    required:
                    - client_id
                    - token_url
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  selector:
                    description: |-
                      Selector allows service discovery for alertmanager
                      in this case all matched vmalertmanager replicas will be added into vmalert notifier.url
                      as statefulset pod.fqdn
                    properties:
                      labelSelector:
                        description: |-
                          A label selector is a label query over a set of resources. The result of matchLabels and
                          matchExpressions are ANDed. An empty label selector matches all objects. A null
                          label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaceSelector:
                        description: |-
                          NamespaceSelector is a selector for selecting either all namespaces or a
                          list of namespaces.
                        properties:
                          any:
                            description: |-
                              Boolean describing whether all namespaces are selected in contrast to a
                              list restricting them.
                            type: boolean
                          matchNames:
                            description: List of namespace names.
                            items:
                              type: string
                            type: array
                        type: object
                    type: object
                  tlsConfig:
                    description: TLSConfig specifies TLSConfig configuration parameters.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  url:
                    description: AlertManager url.  E.g. http://127.0.0.1:9093
                    type: string
                type: object
              notifierConfigRef:
                description: |-
                  NotifierConfigRef reference for secret with notifier configuration for vmalert
                  only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              notifiers:
                description: |-
                  Notifiers prometheus alertmanager endpoints. Required at least one of notifier or notifiers when there are alerting rules. e.g. http://127.0.0.1:9093
                  If specified both notifier and notifiers, notifier will be added as last element to notifiers.
                  only one of notifier options could be chosen: notifierConfigRef or notifiers +  notifier
                items:
                  description: VMAlertNotifierSpec defines the notifier url for sending
                    information about alerts
                  properties:
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    bearerTokenFile:
                      description: Path to bearer token file
                      type: string
                    bearerTokenSecret:
                      description: Optional bearer auth token to use for -remoteWrite.url
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    headers:
                      description: |-
                        Headers allow configuring custom http headers
                        Must be in form of semicolon separated header with value
                        e.g.
                        headerName:headerValue
                        vmalert supports it since 1.79.0 version
                      items:
                        type: string
                      type: array
                    oauth2:
                      description: OAuth2 defines OAuth2 configuration
                      required:
                      - client_id
                      - token_url
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    selector:
                      description: |-
                        Selector allows service discovery for alertmanager
                        in this case all matched vmalertmanager replicas will be added into vmalert notifier.url
                        as statefulset pod.fqdn
                      properties:
                        labelSelector:
                          description: |-
                            A label selector is a label query over a set of resources. The result of matchLabels and
                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                            label selector matches no objects.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        namespaceSelector:
                          description: |-
                            NamespaceSelector is a selector for selecting either all namespaces or a
                            list of namespaces.
                          properties:
                            any:
                              description: |-
                                Boolean describing whether all namespaces are selected in contrast to a
                                list restricting them.
                              type: boolean
                            matchNames:
                              description: List of namespace names.
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                    tlsConfig:
                      description: TLSConfig specifies TLSConfig configuration parameters.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    url:
                      description: AlertManager url.  E.g. http://127.0.0.1:9093
                      type: string
                  type: object
                type: array
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podDisruptionBudget:
                description: PodDisruptionBudget created by operator
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at most "maxUnavailable" pods selected by
                      "selector" are unavailable after the eviction, i.e. even in absence of
                      the evicted pod. For example, one can prevent all voluntary evictions
                      by specifying 0. This is a mutually exclusive setting with "minAvailable".
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at least "minAvailable" pods selected by
                      "selector" will still be available after the eviction, i.e. even in the
                      absence of the evicted pod.  So for example you can prevent all voluntary
                      evictions by specifying "100%".
                    x-kubernetes-int-or-string: true
                  selectorLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      replaces default labels selector generated by operator
                      it's useful when you need to create custom budget
                    type: object
                type: object
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the VMAlert pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen address
                type: string
              priorityClassName:
                description: PriorityClassName class assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              remoteRead:
                description: |-
                  RemoteRead Optional URL to read vmalert state (persisted via RemoteWrite)
                  This configuration only makes sense if alerts state has been successfully
                  persisted (via RemoteWrite) before.
                  see -remoteRead.url docs in vmalerts for details.
                  E.g. http://127.0.0.1:8428
                properties:
                  basicAuth:
                    description: BasicAuth allow an endpoint to authenticate over
                      basic authentication
                    properties:
                      password:
                        description: |-
                          Password defines reference for secret with password value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      password_file:
                        description: |-
                          PasswordFile defines path to password file at disk
                          must be pre-mounted
                        type: string
                      username:
                        description: |-
                          Username defines reference for secret with username value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  bearerTokenFile:
                    description: Path to bearer token file
                    type: string
                  bearerTokenSecret:
                    description: Optional bearer auth token to use for -remoteWrite.url
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  headers:
                    description: |-
                      Headers allow configuring custom http headers
                      Must be in form of semicolon separated header with value
                      e.g.
                      headerName:headerValue
                      vmalert supports it since 1.79.0 version
                    items:
                      type: string
                    type: array
                  lookback:
                    description: |-
                      Lookback defines how far to look into past for alerts timeseries. For example, if lookback=1h then range from now() to now()-1h will be scanned. (default 1h0m0s)
                      Applied only to RemoteReadSpec
                    type: string
                  oauth2:
                    description: OAuth2 defines OAuth2 configuration
                    required:
                    - client_id
                    - token_url
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  tlsConfig:
                    description: TLSConfig specifies TLSConfig configuration parameters.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  url:
                    description: URL of the endpoint to send samples to.
                    type: string
                required:
                - url
                type: object
              remoteWrite:
                description: |-
                  RemoteWrite Optional URL to remote-write compatible storage to persist
                  vmalert state and rule results to.
                  Rule results will be persisted according to each rule.
                  Alerts state will be persisted in the form of time series named ALERTS and ALERTS_FOR_STATE
                  see -remoteWrite.url docs in vmalerts for details.
                  E.g. http://127.0.0.1:8428
                properties:
                  basicAuth:
                    description: BasicAuth allow an endpoint to authenticate over
                      basic authentication
                    properties:
                      password:
                        description: |-
                          Password defines reference for secret with password value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      password_file:
                        description: |-
                          PasswordFile defines path to password file at disk
                          must be pre-mounted
                        type: string
                      username:
                        description: |-
                          Username defines reference for secret with username value
                          The secret needs to be in the same namespace as scrape object
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  bearerTokenFile:
                    description: Path to bearer token file
                    type: string
                  bearerTokenSecret:
                    description: Optional bearer auth token to use for -remoteWrite.url
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  concurrency:
                    description: Defines number of readers that concurrently write
                      into remote storage (default 1)
                    format: int32
                    type: integer
                  flushInterval:
                    description: Defines interval of flushes to remote write endpoint
                      (default 5s)
                    pattern: '[0-9]+(ms|s|m|h)'
                    type: string
                  headers:
                    description: |-
                      Headers allow configuring custom http headers
                      Must be in form of semicolon separated header with value
                      e.g.
                      headerName:headerValue
                      vmalert supports it since 1.79.0 version
                    items:
                      type: string
                    type: array
                  maxBatchSize:
                    description: Defines defines max number of timeseries to be flushed
                      at once (default 1000)
                    format: int32
                    type: integer
                  maxQueueSize:
                    description: Defines the max number of pending datapoints to remote
                      write endpoint (default 100000)
                    format: int32
                    type: integer
                  oauth2:
                    description: OAuth2 defines OAuth2 configuration
                    required:
                    - client_id
                    - token_url
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  tlsConfig:
                    description: TLSConfig specifies TLSConfig configuration parameters.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  url:
                    description: URL of the endpoint to send samples to.
                    type: string
                required:
                - url
                type: object
              replicaCount:
                description: ReplicaCount is the expected size of the Application.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the Deployment revision history.
                  Has no effect at StatefulSets
                  Defaults to 10.
                format: int32
                type: integer
              rollingUpdate:
                description: RollingUpdate - overrides deployment update params.
                properties:
                  maxSurge:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      The maximum number of pods that can be scheduled above the desired number of
                      pods.
                      Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                      This can not be 0 if MaxUnavailable is 0.
                      Absolute number is calculated from percentage by rounding up.
                      Defaults to 25%.
                      Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
                      the rolling update starts, such that the total number of old and new pods do not exceed
                      130% of desired pods. Once old pods have been killed,
                      new ReplicaSet can be scaled up further, ensuring that total number of pods running
                      at any time during the update is at most 130% of desired pods.
                    x-kubernetes-int-or-string: true
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      The maximum number of pods that can be unavailable during the update.
                      Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                      Absolute number is calculated from percentage by rounding down.
                      This can not be 0 if MaxSurge is 0.
                      Defaults to 25%.
                      Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
                      immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
                      can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
                      that the total number of pods available at all times during the update is at
                      least 70% of desired pods.
                    x-kubernetes-int-or-string: true
                type: object
              ruleNamespaceSelector:
                description: |-
                  RuleNamespaceSelector to be selected for VMRules discovery.
                  Works in combination with Selector.
                  If both nil - behaviour controlled by selectAllByDefault
                  NamespaceSelector nil - only objects at VMAlert namespace.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              rulePath:
                description: |-
                  RulePath to the file with alert rules.
                  Supports patterns. Flag can be specified multiple times.
                  Examples:
                  -rule /path/to/file. Path to a single file with alerting rules
                  -rule dir/*.yaml -rule /*.yaml. Relative path to all .yaml files in folder,
                  absolute path to all .yaml files in root.
                  by default operator adds /etc/vmalert/configs/base/vmalert.yaml
                items:
                  type: string
                type: array
              ruleSelector:
                description: |-
                  RuleSelector selector to select which VMRules to mount for loading alerting
                  rules from.
                  Works in combination with NamespaceSelector.
                  If both nil - behaviour controlled by selectAllByDefault
                  NamespaceSelector nil - only objects at VMAlert namespace.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/secrets/SECRET_NAME folder
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              selectAllByDefault:
                description: |-
                  SelectAllByDefault changes default behavior for empty CRD selectors, such RuleSelector.
                  with selectAllByDefault: true and empty serviceScrapeSelector and RuleNamespaceSelector
                  Operator selects all exist serviceScrapes
                  with selectAllByDefault: false - selects nothing
                type: boolean
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to use to run the pods
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmalert VMServiceScrape
                  spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vmalert service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              updateStrategy:
                description: UpdateStrategy - overrides default update strategy.
                enum:
                - Recreate
                - RollingUpdate
                type: string
              useDefaultResources:
                description: |-
                  UseDefaultResources controls resource settings
                  By default, operator sets built-in resource requirements
                type: boolean
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              useVMConfigReloader:
                description: |-
                  UseVMConfigReloader replaces prometheus-like config-reloader
                  with vm one. It uses secrets watch instead of file watch
                  which greatly increases speed of config updates
                type: boolean
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the Application container
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                  Volumes specified will be appended to other volumes that are generated.
                  / +optional
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            required:
            - datasource
            type: object
          status:
            description: VMAlertStatus defines the observed state of VMAlert
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmauths.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMAuth
    listKind: VMAuthList
    plural: vmauths
    singular: vmauth
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of update rollout
      jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: The desired replicas number of Alertmanagers
      jsonPath: .spec.replicaCount
      name: ReplicaCount
      type: integer
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMAuth is the Schema for the vmauths API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMAuthSpec defines the desired state of VMAuth
            properties:
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/configs/CONFIGMAP_NAME folder
                items:
                  type: string
                type: array
              configReloaderExtraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ConfigReloaderExtraArgs that will be passed to  VMAuths config-reloader container
                  for example resyncInterval: "30s"
                type: object
              configReloaderImageTag:
                description: ConfigReloaderImageTag defines image:tag for config-reloader
                  container
                type: string
              configReloaderResources:
                description: |-
                  ConfigReloaderResources config-reloader container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              configSecret:
                description: |-
                  ConfigSecret is the name of a Kubernetes Secret in the same namespace as the
                  VMAuth object, which contains auth configuration for vmauth,
                  configuration must be inside secret key: config.yaml.
                  It must be created and managed manually.
                  If it's defined, configuration for vmauth becomes unmanaged and operator'll not create any related secrets/config-reloaders
                  Deprecated, use externalConfig.secretRef instead
                type: string
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              disableAutomountServiceAccountToken:
                description: |-
                  DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                  Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                  For example, vmagent and vm-config-reloader requires k8s API access.
                  Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                  And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                type: boolean
              disableSelfServiceScrape:
                description: |-
                  DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                  for the application.
                  Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                type: boolean
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                items:
                  x-kubernetes-preserve-unknown-fields: true
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: |-
                            Name is this DNS resolver option's name.
                            Required.
                          type: string
                        value:
                          description: Value is this DNS resolver option's value.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              externalConfig:
                description: |-
                  ExternalConfig defines a source of external VMAuth configuration.
                  If it's defined, configuration for vmauth becomes unmanaged and operator'll not create any related secrets/config-reloaders
                properties:
                  localPath:
                    description: |-
                      LocalPath contains static path to a config, which is managed externally for cases
                      when using secrets is not applicable, e.g.: Vault sidecar.
                    type: string
                  secretRef:
                    description: SecretRef defines selector for externally managed
                      secret which contains configuration
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to the application container
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be passed to the application container
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              host_aliases:
                description: |-
                  HostAliasesUnderScore provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                  Has Priority over hostAliases field
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings
                  if no specified operator uses default version from operator config
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              ingress:
                description: Ingress enables ingress configuration for VMAuth.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  class_name:
                    description: ClassName defines ingress class name for VMAuth
                    type: string
                  extraRules:
                    description: |-
                      ExtraRules - additional rules for ingress,
                      must be checked for correctness by user.
                    items:
                      description: |-
                        IngressRule represents the rules mapping the paths under a specified host to
                        the related backend services. Incoming requests are first evaluated for a host
                        match, then routed to the backend associated with the matching IngressRuleValue.
                      properties:
                        host:
                          description: "host is the fully qualified domain name of
                            a network host, as defined by RFC 3986.\nNote the following
                            deviations from the \"host\" part of the\nURI as defined
                            in RFC 3986:\n1. IPs are not allowed. Currently an IngressRuleValue
                            can only apply to\n   the IP in the Spec of the parent
                            Ingress.\n2. The `:` delimiter is not respected because
                            ports are not allowed.\n\t  Currently the port of an Ingress
                            is implicitly :80 for http and\n\t  :443 for https.\nBoth
                            these may change in the future.\nIncoming requests are
                            matched against the host before the\nIngressRuleValue.
                            If the host is unspecified, the Ingress routes all\ntraffic
                            based on the specified IngressRuleValue.\n\nhost can be
                            \"precise\" which is a domain name without the terminating
                            dot of\na network host (e.g. \"foo.bar.com\") or \"wildcard\",
                            which is a domain name\nprefixed with a single wildcard
                            label (e.g. \"*.foo.com\").\nThe wildcard character '*'
                            must appear by itself as the first DNS label and\nmatches
                            only a single label. You cannot have a wildcard label
                            by itself (e.g. Host == \"*\").\nRequests will be matched
                            against the Host field in the following way:\n1. If host
                            is precise, the request matches this rule if the http
                            host header is equal to Host.\n2. If host is a wildcard,
                            then the request matches this rule if the http host header\nis
                            to equal to the suffix (removing the first label) of the
                            wildcard rule."
                          type: string
                        http:
                          description: |-
                            HTTPIngressRuleValue is a list of http selectors pointing to backends.
                            In the example: http://<host>/<path>?<searchpart> -> backend where
                            where parts of the url correspond to RFC 3986, this resource will be used
                            to match against everything after the last '/' and before the first '?'
                            or '#'.
                          properties:
                            paths:
                              description: paths is a collection of paths that map
                                requests to backends.
                              items:
                                description: |-
                                  HTTPIngressPath associates a path with a backend. Incoming urls matching the
                                  path are forwarded to the backend.
                                properties:
                                  backend:
                                    description: |-
                                      backend defines the referenced service endpoint to which the traffic
                                      will be forwarded to.
                                    properties:
                                      resource:
                                        description: |-
                                          resource is an ObjectRef to another Kubernetes resource in the namespace
                                          of the Ingress object. If resource is specified, a service.Name and
                                          service.Port must not be specified.
                                          This is a mutually exclusive setting with "Service".
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                        - kind
                                        - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      service:
                                        description: |-
                                          service references a service as a backend.
                                          This is a mutually exclusive setting with "Resource".
                                        properties:
                                          name:
                                            description: |-
                                              name is the referenced service. The service must exist in
                                              the same namespace as the Ingress object.
                                            type: string
                                          port:
                                            description: |-
                                              port of the referenced service. A port name or port number
                                              is required for a IngressServiceBackend.
                                            properties:
                                              name:
                                                description: |-
                                                  name is the name of the port on the Service.
                                                  This is a mutually exclusive setting with "Number".
                                                type: string
                                              number:
                                                description: |-
                                                  number is the numerical port number (e.g. 80) on the Service.
                                                  This is a mutually exclusive setting with "Name".
                                                format: int32
                                                type: integer
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        required:
                                        - name
                                        type: object
                                    type: object
                                  path:
                                    description: |-
                                      path is matched against the path of an incoming request. Currently it can
                                      contain characters disallowed from the conventional "path" part of a URL
                                      as defined by RFC 3986. Paths must begin with a '/' and must be present
                                      when using PathType with value "Exact" or "Prefix".
                                    type: string
                                  pathType:
                                    description: |-
                                      pathType determines the interpretation of the path matching. PathType can
                                      be one of the following values:
                                      * Exact: Matches the URL path exactly.
                                      * Prefix: Matches based on a URL path prefix split by '/'. Matching is
                                        done on a path element by element basis. A path element refers is the
                                        list of labels in the path split by the '/' separator. A request is a
                                        match for path p if every p is an element-wise prefix of p of the
                                        request path. Note that if the last element of the path is a substring
                                        of the last element in request path, it is not a match (e.g. /foo/bar
                                        matches /foo/bar/baz, but does not match /foo/barbaz).
                                      * ImplementationSpecific: Interpretation of the Path matching is up to
                                        the IngressClass. Implementations can treat this as a separate PathType
                                        or treat it identically to Prefix or Exact path types.
                                      Implementations are required to support all path types.
                                    type: string
                                required:
                                - backend
                                - pathType
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - paths
                          type: object
                      type: object
                    type: array
                  extraTls:
                    description: |-
                      ExtraTLS - additional TLS configuration for ingress
                      must be checked for correctness by user.
                    items:
                      description: IngressTLS describes the transport layer security
                        associated with an ingress.
                      properties:
                        hosts:
                          description: |-
                            hosts is a list of hosts included in the TLS certificate. The values in
                            this list must match the name/s used in the tlsSecret. Defaults to the
                            wildcard host setting for the loadbalancer controller fulfilling this
                            Ingress, if left unspecified.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        secretName:
                          description: |-
                            secretName is the name of the secret used to terminate TLS traffic on
                            port 443. Field is left optional to allow TLS routing based on SNI
                            hostname alone. If the SNI host in a listener conflicts with the "Host"
                            header field used by an IngressRule, the SNI host is used for termination
                            and value of the "Host" header is used for routing.
                          type: string
                      type: object
                    type: array
                  host:
                    description: |-
                      Host defines ingress host parameter for default rule
                      It will be used, only if TlsHosts is empty
                    type: string
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                  tlsHosts:
                    description: TlsHosts configures TLS access for ingress, tlsSecretName
                      must be defined for it.
                    items:
                      type: string
                    type: array
                  tlsSecretName:
                    description: |-
                      TlsSecretName defines secretname at the VMAuth namespace with cert and key
                      https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
                    type: string
                type: object
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition.
                  Any errors during the execution of an initContainer will lead to a restart of the Pod.
                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See [here](https://docs.victoriametrics.com/enterprise)
                properties:
                  forceOffline:
                    description: Enforce offline verification of the license key.
                    type: boolean
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in [VictoriaMetrics enterprise](https://docs.victoriametrics.com/enterprise).
                      To request a trial license, [go to](https://victoriametrics.com/products/enterprise/trial)
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  reloadInterval:
                    description: Interval to be used for checking for license key
                      changes. Note that this is only applicable when using KeyRef.
                    type: string
                type: object
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: LogFormat for VMAuth to be configured with.
                enum:
                - default
                - json
                type: string
              logLevel:
                description: LogLevel for victoria metrics single to be configured
                  with.
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                  if previous in healthy state
                  Has no effect for VLogs and VMSingle
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podDisruptionBudget:
                description: PodDisruptionBudget created by operator
                properties:
                  maxUnavailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at most "maxUnavailable" pods selected by
                      "selector" are unavailable after the eviction, i.e. even in absence of
                      the evicted pod. For example, one can prevent all voluntary evictions
                      by specifying 0. This is a mutually exclusive setting with "minAvailable".
                    x-kubernetes-int-or-string: true
                  minAvailable:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      An eviction is allowed if at least "minAvailable" pods selected by
                      "selector" will still be available after the eviction, i.e. even in the
                      absence of the evicted pod.  So for example you can prevent all voluntary
                      evictions by specifying "100%".
                    x-kubernetes-int-or-string: true
                  selectorLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      replaces default labels selector generated by operator
                      it's useful when you need to create custom budget
                    type: object
                type: object
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the VMAuth pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen address
                type: string
              priorityClassName:
                description: PriorityClassName class assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              replicaCount:
                description: ReplicaCount is the expected size of the Application.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the Deployment revision history.
                  Has no effect at StatefulSets
                  Defaults to 10.
                format: int32
                type: integer
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/secrets/SECRET_NAME folder
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              selectAllByDefault:
                description: |-
                  SelectAllByDefault changes default behavior for empty CRD selectors, such userSelector.
                  with selectAllByDefault: true and empty userSelector and userNamespaceSelector
                  Operator selects all exist users
                  with selectAllByDefault: false - selects nothing
                type: boolean
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to use to run the pods
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmauth VMServiceScrape
                  spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vmsingle service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              unauthorizedAccessConfig:
                description: |-
                  UnauthorizedAccessConfig configures access for un authorized users

                  Deprecated, use unauthorizedUserAccessSpec instead
                  will be removed at v1.0 release
                x-kubernetes-preserve-unknown-fields: true
              unauthorizedUserAccessSpec:
                description: UnauthorizedUserAccessSpec defines unauthorized_user
                  config section of vmauth config
                properties:
                  default_url:
                    description: |-
                      DefaultURLs backend url for non-matching paths filter
                      usually used for default backend with error message
                    items:
                      type: string
                    type: array
                  discover_backend_ips:
                    description: DiscoverBackendIPs instructs discovering URLPrefix
                      backend IPs via DNS.
                    type: boolean
                  drop_src_path_prefix_parts:
                    description: |-
                      DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                      See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
                    type: integer
                  dump_request_on_errors:
                    description: |-
                      DumpRequestOnErrors instructs vmauth to return detailed request params to the client
                      if routing rules don't allow to forward request to the backends.
                      Useful for debugging `src_hosts` and `src_headers` based routing rules

                      available since v1.107.0 vmauth version
                    type: boolean
                  headers:
                    description: |-
                      Headers represent additional http headers, that vmauth uses
                      in form of ["header_key: header_value"]
                      multiple values for header key:
                      ["header_key: value1,value2"]
                      it's available since 1.68.0 version of vmauth
                    items:
                      type: string
                    type: array
                  ip_filters:
                    description: |-
                      IPFilters defines per target src ip filters
                      supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
                    properties:
                      allow_list:
                        items:
                          type: string
                        type: array
                      deny_list:
                        items:
                          type: string
                        type: array
                    type: object
                  load_balancing_policy:
                    description: |-
                      LoadBalancingPolicy defines load balancing policy to use for backend urls.
                      Supported policies: least_loaded, first_available.
                      See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
                    enum:
                    - least_loaded
                    - first_available
                    type: string
                  max_concurrent_requests:
                    description: |-
                      MaxConcurrentRequests defines max concurrent requests per user
                      300 is default value for vmauth
                    type: integer
                  metric_labels:
                    additionalProperties:
                      type: string
                    description: MetricLabels - additional labels for metrics exported
                      by vmauth for given user.
                    type: object
                  response_headers:
                    description: |-
                      ResponseHeaders represent additional http headers, that vmauth adds for request response
                      in form of ["header_key: header_value"]
                      multiple values for header key:
                      ["header_key: value1,value2"]
                      it's available since 1.93.0 version of vmauth
                    items:
                      type: string
                    type: array
                  retry_status_codes:
                    description: |-
                      RetryStatusCodes defines http status codes in numeric format for request retries
                      e.g. [429,503]
                    items:
                      type: integer
                    type: array
                  tlsConfig:
                    description: TLSConfig defines tls configuration for the backend
                      connection
                    properties:
                      ca:
                        description: Stuct containing the CA cert to use for the targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      caFile:
                        description: Path to the CA cert in the container to use for
                          the targets.
                        type: string
                      cert:
                        description: Struct containing the client cert file for the
                          targets.
                        properties:
                          configMap:
                            description: ConfigMap containing data to use for the
                              targets.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          secret:
                            description: Secret containing data to use for the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      certFile:
                        description: Path to the client cert file in the container
                          for the targets.
                        type: string
                      insecureSkipVerify:
                        description: Disable target certificate validation.
                        type: boolean
                      keyFile:
                        description: Path to the client key file in the container
                          for the targets.
                        type: string
                      keySecret:
                        description: Secret containing the client key file for the
                          targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      serverName:
                        description: Used to verify the hostname for the targets.
                        type: string
                    type: object
                  url_map:
                    items:
                      description: |-
                        UnauthorizedAccessConfigURLMap defines element of url_map routing configuration
                        For UnauthorizedAccessConfig and VMAuthUnauthorizedUserAccessSpec.URLMap
                      properties:
                        discover_backend_ips:
                          description: DiscoverBackendIPs instructs discovering URLPrefix
                            backend IPs via DNS.
                          type: boolean
                        drop_src_path_prefix_parts:
                          description: |-
                            DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                            See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
                          type: integer
                        headers:
                          description: |-
                            RequestHeaders represent additional http headers, that vmauth uses
                            in form of ["header_key: header_value"]
                            multiple values for header key:
                            ["header_key: value1,value2"]
                            it's available since 1.68.0 version of vmauth
                          items:
                            type: string
                          type: array
                        load_balancing_policy:
                          description: |-
                            LoadBalancingPolicy defines load balancing policy to use for backend urls.
                            Supported policies: least_loaded, first_available.
                            See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
                          enum:
                          - least_loaded
                          - first_available
                          type: string
                        response_headers:
                          description: |-
                            ResponseHeaders represent additional http headers, that vmauth adds for request response
                            in form of ["header_key: header_value"]
                            multiple values for header key:
                            ["header_key: value1,value2"]
                            it's available since 1.93.0 version of vmauth
                          items:
                            type: string
                          type: array
                        retry_status_codes:
                          description: |-
                            RetryStatusCodes defines http status codes in numeric format for request retries
                            Can be defined per target or at VMUser.spec level
                            e.g. [429,503]
                          items:
                            type: integer
                          type: array
                        src_headers:
                          description: SrcHeaders is an optional list of headers,
                            which must match request headers.
                          items:
                            type: string
                          type: array
                        src_hosts:
                          description: SrcHosts is an optional list of regular expressions,
                            which must match the request hostname.
                          items:
                            type: string
                          type: array
                        src_paths:
                          description: SrcPaths is an optional list of regular expressions,
                            which must match the request path.
                          items:
                            type: string
                          type: array
                        src_query_args:
                          description: SrcQueryArgs is an optional list of query args,
                            which must match request URL query args.
                          items:
                            type: string
                          type: array
                        url_prefix:
                          description: |-
                            UrlPrefix contains backend url prefixes for the proxied request url.
                            URLPrefix defines prefix prefix for destination
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    type: array
                  url_prefix:
                    description: URLPrefix defines prefix prefix for destination
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              useDefaultResources:
                description: |-
                  UseDefaultResources controls resource settings
                  By default, operator sets built-in resource requirements
                type: boolean
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              useVMConfigReloader:
                description: |-
                  UseVMConfigReloader replaces prometheus-like config-reloader
                  with vm one. It uses secrets watch instead of file watch
                  which greatly increases speed of config updates
                type: boolean
              userNamespaceSelector:
                description: |-
                  UserNamespaceSelector Namespaces to be selected for  VMAuth discovery.
                  Works in combination with Selector.
                  NamespaceSelector nil - only objects at VMAuth namespace.
                  Selector nil - only objects at NamespaceSelector namespaces.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              userSelector:
                description: |-
                  UserSelector defines VMUser to be selected for config file generation.
                  Works in combination with NamespaceSelector.
                  NamespaceSelector nil - only objects at VMAuth namespace.
                  If both nil - behaviour controlled by selectAllByDefault
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the Application container
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                  Volumes specified will be appended to other volumes that are generated.
                  / +optional
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            description: VMAuthStatus defines the observed state of VMAuth
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmclusters.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMCluster
    listKind: VMClusterList
    plural: vmclusters
    singular: vmcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: replicas of VMInsert
      jsonPath: .spec.vminsert.replicaCount
      name: Insert Count
      type: string
    - description: replicas of VMStorage
      jsonPath: .spec.vmstorage.replicaCount
      name: Storage Count
      type: string
    - description: replicas of VMSelect
      jsonPath: .spec.vmselect.replicaCount
      name: Select Count
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Current status of cluster
      jsonPath: .status.updateStatus
      name: Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VMCluster is fast, cost-effective and scalable time-series database.
          Cluster version with
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMClusterSpec defines the desired state of VMCluster
            properties:
              clusterDomainName:
                description: |-
                  ClusterDomainName defines domain name suffix for in-cluster dns addresses
                  aka .cluster.local
                  used by vminsert and vmselect to build vmstorage address
                type: string
              clusterVersion:
                description: |-
                  ClusterVersion defines default images tag for all components.
                  it can be overwritten with component specific image.tag value.
                type: string
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See [here](https://docs.victoriametrics.com/enterprise)
                properties:
                  forceOffline:
                    description: Enforce offline verification of the license key.
                    type: boolean
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in [VictoriaMetrics enterprise](https://docs.victoriametrics.com/enterprise).
                      To request a trial license, [go to](https://victoriametrics.com/products/enterprise/trial)
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  reloadInterval:
                    description: Interval to be used for checking for license key
                      changes. Note that this is only applicable when using KeyRef.
                    type: string
                type: object
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              replicationFactor:
                description: |-
                  ReplicationFactor defines how many copies of data make among
                  distinct storage nodes
                format: int32
                type: integer
              requestsLoadBalancer:
                description: |-
                  RequestsLoadBalancer configures load-balancing for vminsert and vmselect requests
                  it helps to evenly spread load across pods
                  usually it's not possible with kubernetes TCP based service
                properties:
                  disableInsertBalancing:
                    type: boolean
                  disableSelectBalancing:
                    type: boolean
                  enabled:
                    type: boolean
                  spec:
                    description: |-
                      VMAuthLoadBalancerSpec defines configuration spec for VMAuth used as load-balancer
                      for VMCluster component
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                type: object
              retentionPeriod:
                description: |-
                  RetentionPeriod for the stored metrics
                  Note VictoriaMetrics has data/ and indexdb/ folders
                  metrics from data/ removed eventually as soon as partition leaves retention period
                  reverse index data at indexdb rotates once at the half of configured
                  [retention period](https://docs.victoriametrics.com/Single-server-VictoriaMetrics/#retention)
                type: string
              serviceAccountName:
                description: |-
                  ServiceAccountName is the name of the ServiceAccount to use to run the
                  VMSelect, VMStorage and VMInsert Pods.
                type: string
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              vminsert:
                properties:
                  affinity:
                    description: Affinity If specified, the pod's scheduling constraints.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  clusterNativeListenPort:
                    description: |-
                      ClusterNativePort for multi-level cluster setup.
                      More [details](https://docs.victoriametrics.com/Cluster-VictoriaMetrics#multi-level-cluster-setup)
                    type: string
                  configMaps:
                    description: |-
                      ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                      object, which shall be mounted into the Application container
                      at /etc/vm/configs/CONFIGMAP_NAME folder
                    items:
                      type: string
                    type: array
                  containers:
                    description: |-
                      Containers property allows to inject additions sidecars or to patch existing containers.
                      It can be useful for proxies, backup, etc.
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  disableAutomountServiceAccountToken:
                    description: |-
                      DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                      Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                      For example, vmagent and vm-config-reloader requires k8s API access.
                      Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                      And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                    type: boolean
                  disableSelfServiceScrape:
                    description: |-
                      DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                      for the application.
                      Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                    type: boolean
                  dnsConfig:
                    description: |-
                      Specifies the DNS parameters of a pod.
                      Parameters specified here will be merged to the generated DNS
                      configuration based on DNSPolicy.
                    items:
                      x-kubernetes-preserve-unknown-fields: true
                    properties:
                      nameservers:
                        description: |-
                          A list of DNS name server IP addresses.
                          This will be appended to the base nameservers generated from DNSPolicy.
                          Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      options:
                        description: |-
                          A list of DNS resolver options.
                          This will be merged with the base options generated from DNSPolicy.
                          Duplicated entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: |-
                                Name is this DNS resolver option's name.
                                Required.
                              type: string
                            value:
                              description: Value is this DNS resolver option's value.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      searches:
                        description: |-
                          A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated from DNSPolicy.
                          Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  dnsPolicy:
                    description: DNSPolicy sets DNS policy for the pod
                    type: string
                  extraArgs:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraArgs that will be passed to the application container
                      for example remoteWrite.tmpDataPath: /tmp
                    type: object
                  extraEnvs:
                    description: ExtraEnvs that will be passed to the application
                      container
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  host_aliases:
                    description: |-
                      HostAliasesUnderScore provides mapping for ip and hostname,
                      that would be propagated to pod,
                      cannot be used with HostNetwork.
                      Has Priority over hostAliases field
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                  hostAliases:
                    description: |-
                      HostAliases provides mapping for ip and hostname,
                      that would be propagated to pod,
                      cannot be used with HostNetwork.
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                  hostNetwork:
                    description: HostNetwork controls whether the pod may use the
                      node network namespace
                    type: boolean
                  hpa:
                    description: HPA defines kubernetes PodAutoScaling configuration
                      version 2.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  image:
                    description: |-
                      Image - docker image settings
                      if no specified operator uses default version from operator config
                    properties:
                      pullPolicy:
                        description: PullPolicy describes how to pull docker image
                        type: string
                      repository:
                        description: Repository contains name of docker image + it's
                          repository if needed
                        type: string
                      tag:
                        description: Tag contains desired docker image version
                        type: string
                    type: object
                  imagePullSecrets:
                    description: |-
                      ImagePullSecrets An optional list of references to secrets in the same namespace
                      to use for pulling images from registries
                      see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  initContainers:
                    description: |-
                      InitContainers allows adding initContainers to the pod definition.
                      Any errors during the execution of an initContainer will lead to a restart of the Pod.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  insertPorts:
                    description: InsertPorts - additional listen ports for data ingestion.
                    properties:
                      graphitePort:
                        description: GraphitePort listen port
                        type: string
                      influxPort:
                        description: InfluxPort listen port
                        type: string
                      openTSDBHTTPPort:
                        description: OpenTSDBHTTPPort for http connections.
                        type: string
                      openTSDBPort:
                        description: OpenTSDBPort for tcp and udp listen
                        type: string
                    type: object
                  livenessProbe:
                    description: LivenessProbe that will be added CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  logFormat:
                    description: |-
                      LogFormat for VMInsert to be configured with.
                      default or json
                    enum:
                    - default
                    - json
                    type: string
                  logLevel:
                    description: LogLevel for VMInsert to be configured with.
                    enum:
                    - INFO
                    - WARN
                    - ERROR
                    - FATAL
                    - PANIC
                    type: string
                  minReadySeconds:
                    description: |-
                      MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                      if previous in healthy state
                      Has no effect for VLogs and VMSingle
                    format: int32
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector Define which Nodes the Pods are scheduled
                      on.
                    type: object
                  paused:
                    description: |-
                      Paused If set to true all actions on the underlying managed objects are not
                      going to be performed, except for delete actions.
                    type: boolean
                  podDisruptionBudget:
                    description: PodDisruptionBudget created by operator
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e. even in absence of
                          the evicted pod. For example, one can prevent all voluntary evictions
                          by specifying 0. This is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e. even in the
                          absence of the evicted pod.  So for example you can prevent all voluntary
                          evictions by specifying "100%".
                        x-kubernetes-int-or-string: true
                      selectorLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          replaces default labels selector generated by operator
                          it's useful when you need to create custom budget
                        type: object
                    type: object
                  podMetadata:
                    description: PodMetadata configures Labels and Annotations which
                      are propagated to the VMInsert pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  port:
                    description: Port listen address
                    type: string
                  priorityClassName:
                    description: PriorityClassName class assigned to the Pods
                    type: string
                  readinessGates:
                    description: ReadinessGates defines pod readiness gates
                    items:
                      description: PodReadinessGate contains the reference to a pod
                        condition
                      properties:
                        conditionType:
                          description: ConditionType refers to a condition in the
                            pod's condition list with matching type.
                          type: string
                      required:
                      - conditionType
                      type: object
                    type: array
                  readinessProbe:
                    description: ReadinessProbe that will be added CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  replicaCount:
                    description: ReplicaCount is the expected size of the Application.
                    format: int32
                    type: integer
                  resources:
                    description: |-
                      Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      if not defined default resources from operator config will be used
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  revisionHistoryLimitCount:
                    description: |-
                      The number of old ReplicaSets to retain to allow rollback in deployment or
                      maximum number of revisions that will be maintained in the Deployment revision history.
                      Has no effect at StatefulSets
                      Defaults to 10.
                    format: int32
                    type: integer
                  rollingUpdate:
                    description: RollingUpdate - overrides deployment update params.
                    properties:
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          The maximum number of pods that can be scheduled above the desired number of
                          pods.
                          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                          This can not be 0 if MaxUnavailable is 0.
                          Absolute number is calculated from percentage by rounding up.
                          Defaults to 25%.
                          Example: when this is set to 30%, the new ReplicaSet can be scaled up immediately when
                          the rolling update starts, such that the total number of old and new pods do not exceed
                          130% of desired pods. Once old pods have been killed,
                          new ReplicaSet can be scaled up further, ensuring that total number of pods running
                          at any time during the update is at most 130% of desired pods.
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          The maximum number of pods that can be unavailable during the update.
                          Value can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).
                          Absolute number is calculated from percentage by rounding down.
                          This can not be 0 if MaxSurge is 0.
                          Defaults to 25%.
                          Example: when this is set to 30%, the old ReplicaSet can be scaled down to 70% of desired pods
                          immediately when the rolling update starts. Once new pods are ready, old ReplicaSet
                          can be scaled down further, followed by scaling up the new ReplicaSet, ensuring
                          that the total number of pods available at all times during the update is at
                          least 70% of desired pods.
                        x-kubernetes-int-or-string: true
                    type: object
                  runtimeClassName:
                    description: |-
                      RuntimeClassName - defines runtime class for kubernetes pod.
                      https://kubernetes.io/docs/concepts/containers/runtime-class/
                    type: string
                  schedulerName:
                    description: SchedulerName - defines kubernetes scheduler name
                    type: string
                  secrets:
                    description: |-
                      Secrets is a list of Secrets in the same namespace as the Application
                      object, which shall be mounted into the Application container
                      at /etc/vm/secrets/SECRET_NAME folder
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: |-
                      SecurityContext holds pod-level security attributes and common container settings.
                      This defaults to the default PodSecurityContext.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceScrapeSpec:
                    description: ServiceScrapeSpec that will be added to vminsert
                      VMServiceScrape spec
                    required:
                    - endpoints
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceSpec:
                    description: ServiceSpec that will be added to vminsert service
                      spec
                    properties:
                      metadata:
                        description: EmbeddedObjectMetadata defines objectMeta for
                          additional service.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Labels Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                            type: object
                          name:
                            description: |-
                              Name must be unique within a namespace. Is required when creating resources, although
                              some resources may allow a client to request the generation of an appropriate name
                              automatically. Name is primarily intended for creation idempotence and configuration
                              definition.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                            type: string
                        type: object
                      spec:
                        description: |-
                          ServiceSpec describes the attributes that a user creates on a service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      useAsDefault:
                        description: |-
                          UseAsDefault applies changes from given service definition to the main object Service
                          Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                        type: boolean
                    required:
                    - spec
                    type: object
                  startupProbe:
                    description: StartupProbe that will be added to CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  terminationGracePeriodSeconds:
                    description: TerminationGracePeriodSeconds period for container
                      graceful termination
                    format: int64
                    type: integer
                  tolerations:
                    description: Tolerations If specified, the pod's tolerations.
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: |-
                      TopologySpreadConstraints embedded kubernetes pod configuration option,
                      controls how pods are spread across your cluster among failure-domains
                      such as regions, zones, nodes, and other user-defined topology domains
                      https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  updateStrategy:
                    description: UpdateStrategy - overrides default update strategy.
                    enum:
                    - Recreate
                    - RollingUpdate
                    type: string
                  useDefaultResources:
                    description: |-
                      UseDefaultResources controls resource settings
                      By default, operator sets built-in resource requirements
                    type: boolean
                  useStrictSecurity:
                    description: |-
                      UseStrictSecurity enables strict security mode for component
                      it restricts disk writes access
                      uses non-root user out of the box
                      drops not needed security permissions
                    type: boolean
                  volumeMounts:
                    description: |-
                      VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                      VolumeMounts specified will be appended to other VolumeMounts in the Application container
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                            (which defaults to None).
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        recursiveReadOnly:
                          description: |-
                            RecursiveReadOnly specifies whether read-only mounts should be handled
                            recursively.

                            If ReadOnly is false, this field has no meaning and must be unspecified.

                            If ReadOnly is true, and this field is set to Disabled, the mount is not made
                            recursively read-only.  If this field is set to IfPossible, the mount is made
                            recursively read-only, if it is supported by the container runtime.  If this
                            field is set to Enabled, the mount is made recursively read-only if it is
                            supported by the container runtime, otherwise the pod will not be started and
                            an error will be generated to indicate the reason.

                            If this field is set to IfPossible or Enabled, MountPropagation must be set to
                            None (or be unspecified, which defaults to None).

                            If this field is not specified, it is treated as an equivalent of Disabled.
                          type: string
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: |-
                      Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                      Volumes specified will be appended to other volumes that are generated.
                      / +optional
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
              vmselect:
                description: VMSelect defines configuration section for vmselect components
                  of the victoria-metrics cluster
                properties:
                  affinity:
                    description: Affinity If specified, the pod's scheduling constraints.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  cacheMountPath:
                    description: |-
                      CacheMountPath allows to add cache persistent for VMSelect,
                      will use "/cache" as default if not specified.
                    type: string
                  claimTemplates:
                    description: ClaimTemplates allows adding additional VolumeClaimTemplates
                      for StatefulSet
                    items:
                      description: PersistentVolumeClaim is a user's request for and
                        claim to a persistent volume
                      properties:
                        apiVersion:
                          description: |-
                            APIVersion defines the versioned schema of this representation of an object.
                            Servers should convert recognized schemas to the latest internal value, and
                            may reject unrecognized values.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: |-
                            Kind is a string value representing the REST resource this object represents.
                            Servers may infer this from the endpoint the client submits requests to.
                            Cannot be updated.
                            In CamelCase.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          description: |-
                            Standard object's metadata.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        spec:
                          description: |-
                            spec defines the desired characteristics of a volume requested by a pod author.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: |-
                                accessModes contains the desired access modes the volume should have.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            dataSource:
                              description: |-
                                dataSource field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                * An existing PVC (PersistentVolumeClaim)
                                If the provisioner or an external controller can support the specified data source,
                                it will create a new volume based on the contents of the specified data source.
                                When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSourceRef:
                              description: |-
                                dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                volume is desired. This may be any object from a non-empty API group (non
                                core object) or a PersistentVolumeClaim object.
                                When this field is specified, volume binding will only succeed if the type of
                                the specified object matches some installed volume populator or dynamic
                                provisioner.
                                This field will replace the functionality of the dataSource field and as such
                                if both fields are non-empty, they must have the same value. For backwards
                                compatibility, when namespace isn't specified in dataSourceRef,
                                both fields (dataSource and dataSourceRef) will be set to the same
                                value automatically if one of them is empty and the other is non-empty.
                                When namespace is specified in dataSourceRef,
                                dataSource isn't set to the same value and must be empty.
                                There are three important differences between dataSource and dataSourceRef:
                                * While dataSource only allows two specific types of objects, dataSourceRef
                                  allows any non-core object, as well as PersistentVolumeClaim objects.
                                * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                  preserves all values, and generates an error if a disallowed value is
                                  specified.
                                * While dataSource only allows local objects, dataSourceRef allows objects
                                  in any namespaces.
                                (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace of resource being referenced
                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: |-
                                resources represents the minimum resources the volume should have.
                                If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                that are lower than previous value but must still be higher than capacity recorded in the
                                status field of the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            selector:
                              description: selector is a label query over volumes
                                to consider for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            storageClassName:
                              description: |-
                                storageClassName is the name of the StorageClass required by the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeAttributesClassName:
                              description: |-
                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                If specified, the CSI driver will create or update the volume with the attributes defined
                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                will be set by the persistentvolume controller if it exists.
                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                exists.
                                More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                              type: string
                            volumeMode:
                              description: |-
                                volumeMode defines what type of volume is required by the claim.
                                Value of Filesystem is implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: volumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: |-
                            status represents the current information/status of a persistent volume claim.
                            Read-only.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: |-
                                accessModes contains the actual access modes the volume backing the PVC has.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            allocatedResourceStatuses:
                              additionalProperties:
                                description: |-
                                  When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                                  that it does not recognizes, then it should ignore that update and let other controllers
                                  handle it.
                                type: string
                              description: "allocatedResourceStatuses stores status
                                of resource being resized for the given PVC.\nKey
                                names follow standard Kubernetes label syntax. Valid
                                values are either:\n\t* Un-prefixed keys:\n\t\t- storage
                                - the capacity of the volume.\n\t* Custom resources
                                must use implementation-defined prefixed names such
                                as \"example.com/my-custom-resource\"\nApart from
                                above values - keys that are unprefixed or have kubernetes.io
                                prefix are considered\nreserved and hence may not
                                be used.\n\nClaimResourceStatus can be in any of following
                                states:\n\t- ControllerResizeInProgress:\n\t\tState
                                set when resize controller starts resizing the volume
                                in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                                set when resize has failed in resize controller with
                                a terminal error.\n\t- NodeResizePending:\n\t\tState
                                set when resize controller has finished resizing the
                                volume but further resizing of\n\t\tvolume is needed
                                on the node.\n\t- NodeResizeInProgress:\n\t\tState
                                set when kubelet starts resizing the volume.\n\t-
                                NodeResizeFailed:\n\t\tState set when resizing has
                                failed in kubelet with a terminal error. Transient
                                errors don't set\n\t\tNodeResizeFailed.\nFor example:
                                if expanding a PVC for more capacity - this field
                                can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                                = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"NodeResizeFailed\"\nWhen this field is not set,
                                it means that no resize operation is in progress for
                                the given PVC.\n\nA controller that receives PVC update
                                with previously unknown resourceName or ClaimResourceStatus\nshould
                                ignore the update for the purpose it was designed.
                                For example - a controller that\nonly is responsible
                                for resizing capacity of the volume, should ignore
                                PVC updates that change other valid\nresources associated
                                with PVC.\n\nThis is an alpha field and requires enabling
                                RecoverVolumeExpansionFailure feature."
                              type: object
                              x-kubernetes-map-type: granular
                            allocatedResources:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: "allocatedResources tracks the resources
                                allocated to a PVC including its capacity.\nKey names
                                follow standard Kubernetes label syntax. Valid values
                                are either:\n\t* Un-prefixed keys:\n\t\t- storage
                                - the capacity of the volume.\n\t* Custom resources
                                must use implementation-defined prefixed names such
                                as \"example.com/my-custom-resource\"\nApart from
                                above values - keys that are unprefixed or have kubernetes.io
                                prefix are considered\nreserved and hence may not
                                be used.\n\nCapacity reported here may be larger than
                                the actual capacity when a volume expansion operation\nis
                                requested.\nFor storage quota, the larger value from
                                allocatedResources and PVC.spec.resources is used.\nIf
                                allocatedResources is not set, PVC.spec.resources
                                alone is used for quota calculation.\nIf a volume
                                expansion capacity request is lowered, allocatedResources
                                is only\nlowered if there are no expansion operations
                                in progress and if the actual volume capacity\nis
                                equal or lower than the requested capacity.\n\nA controller
                                that receives PVC update with previously unknown resourceName\nshould
                                ignore the update for the purpose it was designed.
                                For example - a controller that\nonly is responsible
                                for resizing capacity of the volume, should ignore
                                PVC updates that change other valid\nresources associated
                                with PVC.\n\nThis is an alpha field and requires enabling
                                RecoverVolumeExpansionFailure feature."
                              type: object
                            capacity:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: capacity represents the actual resources
                                of the underlying volume.
                              type: object
                            conditions:
                              description: |-
                                conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                                resized then the Condition will be set to 'Resizing'.
                              items:
                                description: PersistentVolumeClaimCondition contains
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: lastProbeTime is the time we probed
                                      the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: lastTransitionTime is the time the
                                      condition transitioned from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: message is the human-readable message
                                      indicating details about last transition.
                                    type: string
                                  reason:
                                    description: |-
                                      reason is a unique, this should be a short, machine understandable string that gives the reason
                                      for condition's last transition. If it reports "Resizing" that means the underlying
                                      persistent volume is being resized.
                                    type: string
                                  status:
                                    description: |-
                                      Status is the status of the condition.
                                      Can be True, False, Unknown.
                                      More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                    type: string
                                  type:
                                    description: |-
                                      Type is the type of the condition.
                                      More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - type
                              x-kubernetes-list-type: map
                            currentVolumeAttributesClassName:
                              description: |-
                                currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                                When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                                This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                              type: string
                            modifyVolumeStatus:
                              description: |-
                                ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                                When this is unset, there is no ModifyVolume operation being attempted.
                                This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                              properties:
                                status:
                                  description: "status is the status of the ControllerModifyVolume
                                    operation. It can be in any of following states:\n
                                    - Pending\n   Pending indicates that the PersistentVolumeClaim
                                    cannot be modified due to unmet requirements,
                                    such as\n   the specified VolumeAttributesClass
                                    not existing.\n - InProgress\n   InProgress indicates
                                    that the volume is being modified.\n - Infeasible\n
                                    \ Infeasible indicates that the request has been
                                    rejected as invalid by the CSI driver. To\n\t
                                    \ resolve the error, a valid VolumeAttributesClass
                                    needs to be specified.\nNote: New statuses can
                                    be added in the future. Consumers should check
                                    for unknown statuses and fail appropriately."
                                  type: string
                                targetVolumeAttributesClassName:
                                  description: targetVolumeAttributesClassName is
                                    the name of the VolumeAttributesClass the PVC
                                    currently being reconciled
                                  type: string
                              required:
                              - status
                              type: object
                            phase:
                              description: phase represents the current phase of PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                    type: array
                  clusterNativeListenPort:
                    description: |-
                      ClusterNativePort for multi-level cluster setup.
                      More [details](https://docs.victoriametrics.com/Cluster-VictoriaMetrics#multi-level-cluster-setup)
                    type: string
                  configMaps:
                    description: |-
                      ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                      object, which shall be mounted into the Application container
                      at /etc/vm/configs/CONFIGMAP_NAME folder
                    items:
                      type: string
                    type: array
                  containers:
                    description: |-
                      Containers property allows to inject additions sidecars or to patch existing containers.
                      It can be useful for proxies, backup, etc.
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  disableAutomountServiceAccountToken:
                    description: |-
                      DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                      Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                      For example, vmagent and vm-config-reloader requires k8s API access.
                      Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                      And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                    type: boolean
                  disableSelfServiceScrape:
                    description: |-
                      DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                      for the application.
                      Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                    type: boolean
                  dnsConfig:
                    description: |-
                      Specifies the DNS parameters of a pod.
                      Parameters specified here will be merged to the generated DNS
                      configuration based on DNSPolicy.
                    items:
                      x-kubernetes-preserve-unknown-fields: true
                    properties:
                      nameservers:
                        description: |-
                          A list of DNS name server IP addresses.
                          This will be appended to the base nameservers generated from DNSPolicy.
                          Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      options:
                        description: |-
                          A list of DNS resolver options.
                          This will be merged with the base options generated from DNSPolicy.
                          Duplicated entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: |-
                                Name is this DNS resolver option's name.
                                Required.
                              type: string
                            value:
                              description: Value is this DNS resolver option's value.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      searches:
                        description: |-
                          A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated from DNSPolicy.
                          Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  dnsPolicy:
                    description: DNSPolicy sets DNS policy for the pod
                    type: string
                  extraArgs:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraArgs that will be passed to the application container
                      for example remoteWrite.tmpDataPath: /tmp
                    type: object
                  extraEnvs:
                    description: ExtraEnvs that will be passed to the application
                      container
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  host_aliases:
                    description: |-
                      HostAliasesUnderScore provides mapping for ip and hostname,
                      that would be propagated to pod,
                      cannot be used with HostNetwork.
                      Has Priority over hostAliases field
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                  hostAliases:
                    description: |-
                      HostAliases provides mapping for ip and hostname,
                      that would be propagated to pod,
                      cannot be used with HostNetwork.
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                  hostNetwork:
                    description: HostNetwork controls whether the pod may use the
                      node network namespace
                    type: boolean
                  hpa:
                    description: |-
                      Configures horizontal pod autoscaling.
                      Note, enabling this option disables vmselect to vmselect communication. In most cases it's not an issue.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  image:
                    description: |-
                      Image - docker image settings
                      if no specified operator uses default version from operator config
                    properties:
                      pullPolicy:
                        description: PullPolicy describes how to pull docker image
                        type: string
                      repository:
                        description: Repository contains name of docker image + it's
                          repository if needed
                        type: string
                      tag:
                        description: Tag contains desired docker image version
                        type: string
                    type: object
                  imagePullSecrets:
                    description: |-
                      ImagePullSecrets An optional list of references to secrets in the same namespace
                      to use for pulling images from registries
                      see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  initContainers:
                    description: |-
                      InitContainers allows adding initContainers to the pod definition.
                      Any errors during the execution of an initContainer will lead to a restart of the Pod.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  livenessProbe:
                    description: LivenessProbe that will be added CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  logFormat:
                    description: |-
                      LogFormat for VMSelect to be configured with.
                      default or json
                    enum:
                    - default
                    - json
                    type: string
                  logLevel:
                    description: LogLevel for VMSelect to be configured with.
                    enum:
                    - INFO
                    - WARN
                    - ERROR
                    - FATAL
                    - PANIC
                    type: string
                  minReadySeconds:
                    description: |-
                      MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                      if previous in healthy state
                      Has no effect for VLogs and VMSingle
                    format: int32
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector Define which Nodes the Pods are scheduled
                      on.
                    type: object
                  paused:
                    description: |-
                      Paused If set to true all actions on the underlying managed objects are not
                      going to be performed, except for delete actions.
                    type: boolean
                  persistentVolume:
                    description: |-
                      Storage - add persistent volume for cacheMountPath
                      its useful for persistent cache
                      use storage instead of persistentVolume.
                    properties:
                      disableMountSubPath:
                        description: |-
                          Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.
                          DisableMountSubPath allows to remove any subPath usage in volume mounts.
                        type: boolean
                      emptyDir:
                        description: |-
                          EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      volumeClaimTemplate:
                        description: A PVC spec to be used by the VMAlertManager StatefulSets.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  podDisruptionBudget:
                    description: PodDisruptionBudget created by operator
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e. even in absence of
                          the evicted pod. For example, one can prevent all voluntary evictions
                          by specifying 0. This is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e. even in the
                          absence of the evicted pod.  So for example you can prevent all voluntary
                          evictions by specifying "100%".
                        x-kubernetes-int-or-string: true
                      selectorLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          replaces default labels selector generated by operator
                          it's useful when you need to create custom budget
                        type: object
                    type: object
                  podMetadata:
                    description: PodMetadata configures Labels and Annotations which
                      are propagated to the VMSelect pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  port:
                    description: Port listen address
                    type: string
                  priorityClassName:
                    description: PriorityClassName class assigned to the Pods
                    type: string
                  readinessGates:
                    description: ReadinessGates defines pod readiness gates
                    items:
                      description: PodReadinessGate contains the reference to a pod
                        condition
                      properties:
                        conditionType:
                          description: ConditionType refers to a condition in the
                            pod's condition list with matching type.
                          type: string
                      required:
                      - conditionType
                      type: object
                    type: array
                  readinessProbe:
                    description: ReadinessProbe that will be added CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  replicaCount:
                    description: ReplicaCount is the expected size of the Application.
                    format: int32
                    type: integer
                  resources:
                    description: |-
                      Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      if not defined default resources from operator config will be used
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  revisionHistoryLimitCount:
                    description: |-
                      The number of old ReplicaSets to retain to allow rollback in deployment or
                      maximum number of revisions that will be maintained in the Deployment revision history.
                      Has no effect at StatefulSets
                      Defaults to 10.
                    format: int32
                    type: integer
                  rollingUpdateStrategy:
                    description: |-
                      RollingUpdateStrategy defines strategy for application updates
                      Default is OnDelete, in this case operator handles update process
                      Can be changed for RollingUpdate
                    type: string
                  runtimeClassName:
                    description: |-
                      RuntimeClassName - defines runtime class for kubernetes pod.
                      https://kubernetes.io/docs/concepts/containers/runtime-class/
                    type: string
                  schedulerName:
                    description: SchedulerName - defines kubernetes scheduler name
                    type: string
                  secrets:
                    description: |-
                      Secrets is a list of Secrets in the same namespace as the Application
                      object, which shall be mounted into the Application container
                      at /etc/vm/secrets/SECRET_NAME folder
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: |-
                      SecurityContext holds pod-level security attributes and common container settings.
                      This defaults to the default PodSecurityContext.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceScrapeSpec:
                    description: ServiceScrapeSpec that will be added to vmselect
                      VMServiceScrape spec
                    required:
                    - endpoints
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceSpec:
                    description: ServiceSpec that will be added to vmselect service
                      spec
                    properties:
                      metadata:
                        description: EmbeddedObjectMetadata defines objectMeta for
                          additional service.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Labels Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                            type: object
                          name:
                            description: |-
                              Name must be unique within a namespace. Is required when creating resources, although
                              some resources may allow a client to request the generation of an appropriate name
                              automatically. Name is primarily intended for creation idempotence and configuration
                              definition.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                            type: string
                        type: object
                      spec:
                        description: |-
                          ServiceSpec describes the attributes that a user creates on a service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      useAsDefault:
                        description: |-
                          UseAsDefault applies changes from given service definition to the main object Service
                          Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                        type: boolean
                    required:
                    - spec
                    type: object
                  startupProbe:
                    description: StartupProbe that will be added to CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  storage:
                    description: |-
                      StorageSpec - add persistent volume claim for cacheMountPath
                      its needed for persistent cache
                    properties:
                      disableMountSubPath:
                        description: |-
                          Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.
                          DisableMountSubPath allows to remove any subPath usage in volume mounts.
                        type: boolean
                      emptyDir:
                        description: |-
                          EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      volumeClaimTemplate:
                        description: A PVC spec to be used by the VMAlertManager StatefulSets.
                        properties:
                          apiVersion:
                            description: |-
                              APIVersion defines the versioned schema of this representation of an object.
                              Servers should convert recognized schemas to the latest internal value, and
                              may reject unrecognized values.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                            type: string
                          kind:
                            description: |-
                              Kind is a string value representing the REST resource this object represents.
                              Servers may infer this from the endpoint the client submits requests to.
                              Cannot be updated.
                              In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          metadata:
                            description: EmbeddedMetadata contains metadata relevant
                              to an EmbeddedResource.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  Annotations is an unstructured key value map stored with a resource that may be
                                  set by external tools to store and retrieve arbitrary metadata. They are not
                                  queryable and should be preserved when modifying objects.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  Labels Map of string keys and values that can be used to organize and categorize
                                  (scope and select) objects. May match selectors of replication controllers
                                  and services.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                                type: object
                              name:
                                description: |-
                                  Name must be unique within a namespace. Is required when creating resources, although
                                  some resources may allow a client to request the generation of an appropriate name
                                  automatically. Name is primarily intended for creation idempotence and configuration
                                  definition.
                                  Cannot be updated.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                type: string
                            type: object
                          spec:
                            description: |-
                              Spec defines the desired characteristics of a volume requested by a pod author.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            properties:
                              accessModes:
                                description: |-
                                  accessModes contains the desired access modes the volume should have.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              dataSource:
                                description: |-
                                  dataSource field can be used to specify either:
                                  * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                  * An existing PVC (PersistentVolumeClaim)
                                  If the provisioner or an external controller can support the specified data source,
                                  it will create a new volume based on the contents of the specified data source.
                                  When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                  and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                  If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                properties:
                                  apiGroup:
                                    description: |-
                                      APIGroup is the group for the resource being referenced.
                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                                x-kubernetes-map-type: atomic
                              dataSourceRef:
                                description: |-
                                  dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                  volume is desired. This may be any object from a non-empty API group (non
                                  core object) or a PersistentVolumeClaim object.
                                  When this field is specified, volume binding will only succeed if the type of
                                  the specified object matches some installed volume populator or dynamic
                                  provisioner.
                                  This field will replace the functionality of the dataSource field and as such
                                  if both fields are non-empty, they must have the same value. For backwards
                                  compatibility, when namespace isn't specified in dataSourceRef,
                                  both fields (dataSource and dataSourceRef) will be set to the same
                                  value automatically if one of them is empty and the other is non-empty.
                                  When namespace is specified in dataSourceRef,
                                  dataSource isn't set to the same value and must be empty.
                                  There are three important differences between dataSource and dataSourceRef:
                                  * While dataSource only allows two specific types of objects, dataSourceRef
                                    allows any non-core object, as well as PersistentVolumeClaim objects.
                                  * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                    preserves all values, and generates an error if a disallowed value is
                                    specified.
                                  * While dataSource only allows local objects, dataSourceRef allows objects
                                    in any namespaces.
                                  (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                  (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                properties:
                                  apiGroup:
                                    description: |-
                                      APIGroup is the group for the resource being referenced.
                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                      For any other third-party types, APIGroup is required.
                                    type: string
                                  kind:
                                    description: Kind is the type of resource being
                                      referenced
                                    type: string
                                  name:
                                    description: Name is the name of resource being
                                      referenced
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of resource being referenced
                                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                      (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                    type: string
                                required:
                                - kind
                                - name
                                type: object
                              resources:
                                description: |-
                                  resources represents the minimum resources the volume should have.
                                  If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                  that are lower than previous value but must still be higher than capacity recorded in the
                                  status field of the claim.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                properties:
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              selector:
                                description: selector is a label query over volumes
                                  to consider for binding.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label
                                      selector requirements. The requirements are
                                      ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the
                                            selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                      - key
                                      - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              storageClassName:
                                description: |-
                                  storageClassName is the name of the StorageClass required by the claim.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                type: string
                              volumeAttributesClassName:
                                description: |-
                                  volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                  If specified, the CSI driver will create or update the volume with the attributes defined
                                  in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                  it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                  will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                  If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                  will be set by the persistentvolume controller if it exists.
                                  If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                  set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                  exists.
                                  More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                  (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                type: string
                              volumeMode:
                                description: |-
                                  volumeMode defines what type of volume is required by the claim.
                                  Value of Filesystem is implied when not included in claim spec.
                                type: string
                              volumeName:
                                description: volumeName is the binding reference to
                                  the PersistentVolume backing this claim.
                                type: string
                            type: object
                          status:
                            description: |-
                              Status represents the current information/status of a persistent volume claim.
                              Read-only.
                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                            properties:
                              accessModes:
                                description: |-
                                  accessModes contains the actual access modes the volume backing the PVC has.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              allocatedResourceStatuses:
                                additionalProperties:
                                  description: |-
                                    When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                                    that it does not recognizes, then it should ignore that update and let other controllers
                                    handle it.
                                  type: string
                                description: "allocatedResourceStatuses stores status
                                  of resource being resized for the given PVC.\nKey
                                  names follow standard Kubernetes label syntax. Valid
                                  values are either:\n\t* Un-prefixed keys:\n\t\t-
                                  storage - the capacity of the volume.\n\t* Custom
                                  resources must use implementation-defined prefixed
                                  names such as \"example.com/my-custom-resource\"\nApart
                                  from above values - keys that are unprefixed or
                                  have kubernetes.io prefix are considered\nreserved
                                  and hence may not be used.\n\nClaimResourceStatus
                                  can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState
                                  set when resize controller starts resizing the volume
                                  in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                                  set when resize has failed in resize controller
                                  with a terminal error.\n\t- NodeResizePending:\n\t\tState
                                  set when resize controller has finished resizing
                                  the volume but further resizing of\n\t\tvolume is
                                  needed on the node.\n\t- NodeResizeInProgress:\n\t\tState
                                  set when kubelet starts resizing the volume.\n\t-
                                  NodeResizeFailed:\n\t\tState set when resizing has
                                  failed in kubelet with a terminal error. Transient
                                  errors don't set\n\t\tNodeResizeFailed.\nFor example:
                                  if expanding a PVC for more capacity - this field
                                  can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                                  = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                                  = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                                  = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                                  = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                                  = \"NodeResizeFailed\"\nWhen this field is not set,
                                  it means that no resize operation is in progress
                                  for the given PVC.\n\nA controller that receives
                                  PVC update with previously unknown resourceName
                                  or ClaimResourceStatus\nshould ignore the update
                                  for the purpose it was designed. For example - a
                                  controller that\nonly is responsible for resizing
                                  capacity of the volume, should ignore PVC updates
                                  that change other valid\nresources associated with
                                  PVC.\n\nThis is an alpha field and requires enabling
                                  RecoverVolumeExpansionFailure feature."
                                type: object
                                x-kubernetes-map-type: granular
                              allocatedResources:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: "allocatedResources tracks the resources
                                  allocated to a PVC including its capacity.\nKey
                                  names follow standard Kubernetes label syntax. Valid
                                  values are either:\n\t* Un-prefixed keys:\n\t\t-
                                  storage - the capacity of the volume.\n\t* Custom
                                  resources must use implementation-defined prefixed
                                  names such as \"example.com/my-custom-resource\"\nApart
                                  from above values - keys that are unprefixed or
                                  have kubernetes.io prefix are considered\nreserved
                                  and hence may not be used.\n\nCapacity reported
                                  here may be larger than the actual capacity when
                                  a volume expansion operation\nis requested.\nFor
                                  storage quota, the larger value from allocatedResources
                                  and PVC.spec.resources is used.\nIf allocatedResources
                                  is not set, PVC.spec.resources alone is used for
                                  quota calculation.\nIf a volume expansion capacity
                                  request is lowered, allocatedResources is only\nlowered
                                  if there are no expansion operations in progress
                                  and if the actual volume capacity\nis equal or lower
                                  than the requested capacity.\n\nA controller that
                                  receives PVC update with previously unknown resourceName\nshould
                                  ignore the update for the purpose it was designed.
                                  For example - a controller that\nonly is responsible
                                  for resizing capacity of the volume, should ignore
                                  PVC updates that change other valid\nresources associated
                                  with PVC.\n\nThis is an alpha field and requires
                                  enabling RecoverVolumeExpansionFailure feature."
                                type: object
                              capacity:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: capacity represents the actual resources
                                  of the underlying volume.
                                type: object
                              conditions:
                                description: |-
                                  conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                                  resized then the Condition will be set to 'Resizing'.
                                items:
                                  description: PersistentVolumeClaimCondition contains
                                    details about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: lastProbeTime is the time we probed
                                        the condition.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: lastTransitionTime is the time
                                        the condition transitioned from one status
                                        to another.
                                      format: date-time
                                      type: string
                                    message:
                                      description: message is the human-readable message
                                        indicating details about last transition.
                                      type: string
                                    reason:
                                      description: |-
                                        reason is a unique, this should be a short, machine understandable string that gives the reason
                                        for condition's last transition. If it reports "Resizing" that means the underlying
                                        persistent volume is being resized.
                                      type: string
                                    status:
                                      description: |-
                                        Status is the status of the condition.
                                        Can be True, False, Unknown.
                                        More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                      type: string
                                    type:
                                      description: |-
                                        Type is the type of the condition.
                                        More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                      type: string
                                  required:
                                  - status
                                  - type
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - type
                                x-kubernetes-list-type: map
                              currentVolumeAttributesClassName:
                                description: |-
                                  currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                                  When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                                  This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                                type: string
                              modifyVolumeStatus:
                                description: |-
                                  ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                                  When this is unset, there is no ModifyVolume operation being attempted.
                                  This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                                properties:
                                  status:
                                    description: "status is the status of the ControllerModifyVolume
                                      operation. It can be in any of following states:\n
                                      - Pending\n   Pending indicates that the PersistentVolumeClaim
                                      cannot be modified due to unmet requirements,
                                      such as\n   the specified VolumeAttributesClass
                                      not existing.\n - InProgress\n   InProgress
                                      indicates that the volume is being modified.\n
                                      - Infeasible\n  Infeasible indicates that the
                                      request has been rejected as invalid by the
                                      CSI driver. To\n\t  resolve the error, a valid
                                      VolumeAttributesClass needs to be specified.\nNote:
                                      New statuses can be added in the future. Consumers
                                      should check for unknown statuses and fail appropriately."
                                    type: string
                                  targetVolumeAttributesClassName:
                                    description: targetVolumeAttributesClassName is
                                      the name of the VolumeAttributesClass the PVC
                                      currently being reconciled
                                    type: string
                                required:
                                - status
                                type: object
                              phase:
                                description: phase represents the current phase of
                                  PersistentVolumeClaim.
                                type: string
                            type: object
                        type: object
                    type: object
                  terminationGracePeriodSeconds:
                    description: TerminationGracePeriodSeconds period for container
                      graceful termination
                    format: int64
                    type: integer
                  tolerations:
                    description: Tolerations If specified, the pod's tolerations.
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: |-
                      TopologySpreadConstraints embedded kubernetes pod configuration option,
                      controls how pods are spread across your cluster among failure-domains
                      such as regions, zones, nodes, and other user-defined topology domains
                      https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  useDefaultResources:
                    description: |-
                      UseDefaultResources controls resource settings
                      By default, operator sets built-in resource requirements
                    type: boolean
                  useStrictSecurity:
                    description: |-
                      UseStrictSecurity enables strict security mode for component
                      it restricts disk writes access
                      uses non-root user out of the box
                      drops not needed security permissions
                    type: boolean
                  volumeMounts:
                    description: |-
                      VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                      VolumeMounts specified will be appended to other VolumeMounts in the Application container
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                            (which defaults to None).
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        recursiveReadOnly:
                          description: |-
                            RecursiveReadOnly specifies whether read-only mounts should be handled
                            recursively.

                            If ReadOnly is false, this field has no meaning and must be unspecified.

                            If ReadOnly is true, and this field is set to Disabled, the mount is not made
                            recursively read-only.  If this field is set to IfPossible, the mount is made
                            recursively read-only, if it is supported by the container runtime.  If this
                            field is set to Enabled, the mount is made recursively read-only if it is
                            supported by the container runtime, otherwise the pod will not be started and
                            an error will be generated to indicate the reason.

                            If this field is set to IfPossible or Enabled, MountPropagation must be set to
                            None (or be unspecified, which defaults to None).

                            If this field is not specified, it is treated as an equivalent of Disabled.
                          type: string
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: |-
                      Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                      Volumes specified will be appended to other volumes that are generated.
                      / +optional
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
              vmstorage:
                properties:
                  affinity:
                    description: Affinity If specified, the pod's scheduling constraints.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  claimTemplates:
                    description: ClaimTemplates allows adding additional VolumeClaimTemplates
                      for StatefulSet
                    items:
                      description: PersistentVolumeClaim is a user's request for and
                        claim to a persistent volume
                      properties:
                        apiVersion:
                          description: |-
                            APIVersion defines the versioned schema of this representation of an object.
                            Servers should convert recognized schemas to the latest internal value, and
                            may reject unrecognized values.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                          type: string
                        kind:
                          description: |-
                            Kind is a string value representing the REST resource this object represents.
                            Servers may infer this from the endpoint the client submits requests to.
                            Cannot be updated.
                            In CamelCase.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        metadata:
                          description: |-
                            Standard object's metadata.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        spec:
                          description: |-
                            spec defines the desired characteristics of a volume requested by a pod author.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: |-
                                accessModes contains the desired access modes the volume should have.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            dataSource:
                              description: |-
                                dataSource field can be used to specify either:
                                * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                * An existing PVC (PersistentVolumeClaim)
                                If the provisioner or an external controller can support the specified data source,
                                it will create a new volume based on the contents of the specified data source.
                                When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSourceRef:
                              description: |-
                                dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                volume is desired. This may be any object from a non-empty API group (non
                                core object) or a PersistentVolumeClaim object.
                                When this field is specified, volume binding will only succeed if the type of
                                the specified object matches some installed volume populator or dynamic
                                provisioner.
                                This field will replace the functionality of the dataSource field and as such
                                if both fields are non-empty, they must have the same value. For backwards
                                compatibility, when namespace isn't specified in dataSourceRef,
                                both fields (dataSource and dataSourceRef) will be set to the same
                                value automatically if one of them is empty and the other is non-empty.
                                When namespace is specified in dataSourceRef,
                                dataSource isn't set to the same value and must be empty.
                                There are three important differences between dataSource and dataSourceRef:
                                * While dataSource only allows two specific types of objects, dataSourceRef
                                  allows any non-core object, as well as PersistentVolumeClaim objects.
                                * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                  preserves all values, and generates an error if a disallowed value is
                                  specified.
                                * While dataSource only allows local objects, dataSourceRef allows objects
                                  in any namespaces.
                                (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                              properties:
                                apiGroup:
                                  description: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                  type: string
                                kind:
                                  description: Kind is the type of resource being
                                    referenced
                                  type: string
                                name:
                                  description: Name is the name of resource being
                                    referenced
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace is the namespace of resource being referenced
                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            resources:
                              description: |-
                                resources represents the minimum resources the volume should have.
                                If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                that are lower than previous value but must still be higher than capacity recorded in the
                                status field of the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                              properties:
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            selector:
                              description: selector is a label query over volumes
                                to consider for binding.
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            storageClassName:
                              description: |-
                                storageClassName is the name of the StorageClass required by the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                              type: string
                            volumeAttributesClassName:
                              description: |-
                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                If specified, the CSI driver will create or update the volume with the attributes defined
                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                will be set by the persistentvolume controller if it exists.
                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                exists.
                                More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                              type: string
                            volumeMode:
                              description: |-
                                volumeMode defines what type of volume is required by the claim.
                                Value of Filesystem is implied when not included in claim spec.
                              type: string
                            volumeName:
                              description: volumeName is the binding reference to
                                the PersistentVolume backing this claim.
                              type: string
                          type: object
                        status:
                          description: |-
                            status represents the current information/status of a persistent volume claim.
                            Read-only.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                          properties:
                            accessModes:
                              description: |-
                                accessModes contains the actual access modes the volume backing the PVC has.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            allocatedResourceStatuses:
                              additionalProperties:
                                description: |-
                                  When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource
                                  that it does not recognizes, then it should ignore that update and let other controllers
                                  handle it.
                                type: string
                              description: "allocatedResourceStatuses stores status
                                of resource being resized for the given PVC.\nKey
                                names follow standard Kubernetes label syntax. Valid
                                values are either:\n\t* Un-prefixed keys:\n\t\t- storage
                                - the capacity of the volume.\n\t* Custom resources
                                must use implementation-defined prefixed names such
                                as \"example.com/my-custom-resource\"\nApart from
                                above values - keys that are unprefixed or have kubernetes.io
                                prefix are considered\nreserved and hence may not
                                be used.\n\nClaimResourceStatus can be in any of following
                                states:\n\t- ControllerResizeInProgress:\n\t\tState
                                set when resize controller starts resizing the volume
                                in control-plane.\n\t- ControllerResizeFailed:\n\t\tState
                                set when resize has failed in resize controller with
                                a terminal error.\n\t- NodeResizePending:\n\t\tState
                                set when resize controller has finished resizing the
                                volume but further resizing of\n\t\tvolume is needed
                                on the node.\n\t- NodeResizeInProgress:\n\t\tState
                                set when kubelet starts resizing the volume.\n\t-
                                NodeResizeFailed:\n\t\tState set when resizing has
                                failed in kubelet with a terminal error. Transient
                                errors don't set\n\t\tNodeResizeFailed.\nFor example:
                                if expanding a PVC for more capacity - this field
                                can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage']
                                = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage']
                                = \"NodeResizeFailed\"\nWhen this field is not set,
                                it means that no resize operation is in progress for
                                the given PVC.\n\nA controller that receives PVC update
                                with previously unknown resourceName or ClaimResourceStatus\nshould
                                ignore the update for the purpose it was designed.
                                For example - a controller that\nonly is responsible
                                for resizing capacity of the volume, should ignore
                                PVC updates that change other valid\nresources associated
                                with PVC.\n\nThis is an alpha field and requires enabling
                                RecoverVolumeExpansionFailure feature."
                              type: object
                              x-kubernetes-map-type: granular
                            allocatedResources:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: "allocatedResources tracks the resources
                                allocated to a PVC including its capacity.\nKey names
                                follow standard Kubernetes label syntax. Valid values
                                are either:\n\t* Un-prefixed keys:\n\t\t- storage
                                - the capacity of the volume.\n\t* Custom resources
                                must use implementation-defined prefixed names such
                                as \"example.com/my-custom-resource\"\nApart from
                                above values - keys that are unprefixed or have kubernetes.io
                                prefix are considered\nreserved and hence may not
                                be used.\n\nCapacity reported here may be larger than
                                the actual capacity when a volume expansion operation\nis
                                requested.\nFor storage quota, the larger value from
                                allocatedResources and PVC.spec.resources is used.\nIf
                                allocatedResources is not set, PVC.spec.resources
                                alone is used for quota calculation.\nIf a volume
                                expansion capacity request is lowered, allocatedResources
                                is only\nlowered if there are no expansion operations
                                in progress and if the actual volume capacity\nis
                                equal or lower than the requested capacity.\n\nA controller
                                that receives PVC update with previously unknown resourceName\nshould
                                ignore the update for the purpose it was designed.
                                For example - a controller that\nonly is responsible
                                for resizing capacity of the volume, should ignore
                                PVC updates that change other valid\nresources associated
                                with PVC.\n\nThis is an alpha field and requires enabling
                                RecoverVolumeExpansionFailure feature."
                              type: object
                            capacity:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: capacity represents the actual resources
                                of the underlying volume.
                              type: object
                            conditions:
                              description: |-
                                conditions is the current Condition of persistent volume claim. If underlying persistent volume is being
                                resized then the Condition will be set to 'Resizing'.
                              items:
                                description: PersistentVolumeClaimCondition contains
                                  details about state of pvc
                                properties:
                                  lastProbeTime:
                                    description: lastProbeTime is the time we probed
                                      the condition.
                                    format: date-time
                                    type: string
                                  lastTransitionTime:
                                    description: lastTransitionTime is the time the
                                      condition transitioned from one status to another.
                                    format: date-time
                                    type: string
                                  message:
                                    description: message is the human-readable message
                                      indicating details about last transition.
                                    type: string
                                  reason:
                                    description: |-
                                      reason is a unique, this should be a short, machine understandable string that gives the reason
                                      for condition's last transition. If it reports "Resizing" that means the underlying
                                      persistent volume is being resized.
                                    type: string
                                  status:
                                    description: |-
                                      Status is the status of the condition.
                                      Can be True, False, Unknown.
                                      More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required
                                    type: string
                                  type:
                                    description: |-
                                      Type is the type of the condition.
                                      More info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about
                                    type: string
                                required:
                                - status
                                - type
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - type
                              x-kubernetes-list-type: map
                            currentVolumeAttributesClassName:
                              description: |-
                                currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.
                                When unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim
                                This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                              type: string
                            modifyVolumeStatus:
                              description: |-
                                ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.
                                When this is unset, there is no ModifyVolume operation being attempted.
                                This is a beta field and requires enabling VolumeAttributesClass feature (off by default).
                              properties:
                                status:
                                  description: "status is the status of the ControllerModifyVolume
                                    operation. It can be in any of following states:\n
                                    - Pending\n   Pending indicates that the PersistentVolumeClaim
                                    cannot be modified due to unmet requirements,
                                    such as\n   the specified VolumeAttributesClass
                                    not existing.\n - InProgress\n   InProgress indicates
                                    that the volume is being modified.\n - Infeasible\n
                                    \ Infeasible indicates that the request has been
                                    rejected as invalid by the CSI driver. To\n\t
                                    \ resolve the error, a valid VolumeAttributesClass
                                    needs to be specified.\nNote: New statuses can
                                    be added in the future. Consumers should check
                                    for unknown statuses and fail appropriately."
                                  type: string
                                targetVolumeAttributesClassName:
                                  description: targetVolumeAttributesClassName is
                                    the name of the VolumeAttributesClass the PVC
                                    currently being reconciled
                                  type: string
                              required:
                              - status
                              type: object
                            phase:
                              description: phase represents the current phase of PersistentVolumeClaim.
                              type: string
                          type: object
                      type: object
                    type: array
                  configMaps:
                    description: |-
                      ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                      object, which shall be mounted into the Application container
                      at /etc/vm/configs/CONFIGMAP_NAME folder
                    items:
                      type: string
                    type: array
                  containers:
                    description: |-
                      Containers property allows to inject additions sidecars or to patch existing containers.
                      It can be useful for proxies, backup, etc.
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  disableAutomountServiceAccountToken:
                    description: |-
                      DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                      Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                      For example, vmagent and vm-config-reloader requires k8s API access.
                      Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                      And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                    type: boolean
                  disableSelfServiceScrape:
                    description: |-
                      DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                      for the application.
                      Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                    type: boolean
                  dnsConfig:
                    description: |-
                      Specifies the DNS parameters of a pod.
                      Parameters specified here will be merged to the generated DNS
                      configuration based on DNSPolicy.
                    items:
                      x-kubernetes-preserve-unknown-fields: true
                    properties:
                      nameservers:
                        description: |-
                          A list of DNS name server IP addresses.
                          This will be appended to the base nameservers generated from DNSPolicy.
                          Duplicated nameservers will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                      options:
                        description: |-
                          A list of DNS resolver options.
                          This will be merged with the base options generated from DNSPolicy.
                          Duplicated entries will be removed. Resolution options given in Options
                          will override those that appear in the base DNSPolicy.
                        items:
                          description: PodDNSConfigOption defines DNS resolver options
                            of a pod.
                          properties:
                            name:
                              description: |-
                                Name is this DNS resolver option's name.
                                Required.
                              type: string
                            value:
                              description: Value is this DNS resolver option's value.
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      searches:
                        description: |-
                          A list of DNS search domains for host-name lookup.
                          This will be appended to the base search paths generated from DNSPolicy.
                          Duplicated search paths will be removed.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  dnsPolicy:
                    description: DNSPolicy sets DNS policy for the pod
                    type: string
                  extraArgs:
                    additionalProperties:
                      type: string
                    description: |-
                      ExtraArgs that will be passed to the application container
                      for example remoteWrite.tmpDataPath: /tmp
                    type: object
                  extraEnvs:
                    description: ExtraEnvs that will be passed to the application
                      container
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  host_aliases:
                    description: |-
                      HostAliasesUnderScore provides mapping for ip and hostname,
                      that would be propagated to pod,
                      cannot be used with HostNetwork.
                      Has Priority over hostAliases field
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                  hostAliases:
                    description: |-
                      HostAliases provides mapping for ip and hostname,
                      that would be propagated to pod,
                      cannot be used with HostNetwork.
                    items:
                      description: |-
                        HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                        pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      required:
                      - ip
                      type: object
                    type: array
                  hostNetwork:
                    description: HostNetwork controls whether the pod may use the
                      node network namespace
                    type: boolean
                  image:
                    description: |-
                      Image - docker image settings
                      if no specified operator uses default version from operator config
                    properties:
                      pullPolicy:
                        description: PullPolicy describes how to pull docker image
                        type: string
                      repository:
                        description: Repository contains name of docker image + it's
                          repository if needed
                        type: string
                      tag:
                        description: Tag contains desired docker image version
                        type: string
                    type: object
                  imagePullSecrets:
                    description: |-
                      ImagePullSecrets An optional list of references to secrets in the same namespace
                      to use for pulling images from registries
                      see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                    items:
                      description: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  initContainers:
                    description: |-
                      InitContainers allows adding initContainers to the pod definition.
                      Any errors during the execution of an initContainer will lead to a restart of the Pod.
                      More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                    items:
                      description: A single application container that you want to
                        run within a pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  livenessProbe:
                    description: LivenessProbe that will be added CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  logFormat:
                    description: |-
                      LogFormat for VMStorage to be configured with.
                      default or json
                    enum:
                    - default
                    - json
                    type: string
                  logLevel:
                    description: LogLevel for VMStorage to be configured with.
                    enum:
                    - INFO
                    - WARN
                    - ERROR
                    - FATAL
                    - PANIC
                    type: string
                  maintenanceInsertNodeIDs:
                    description: |-
                      MaintenanceInsertNodeIDs - excludes given node ids from insert requests routing, must contain pod suffixes - for pod-0, id will be 0 and etc.
                      lets say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from insert routing, define nodeIDs: [0,3].
                      Useful at storage expanding, when you want to rebalance some data at cluster.
                    items:
                      format: int32
                      type: integer
                    type: array
                  maintenanceSelectNodeIDs:
                    description: MaintenanceInsertNodeIDs - excludes given node ids
                      from select requests routing, must contain pod suffixes - for
                      pod-0, id will be 0 and etc.
                    items:
                      format: int32
                      type: integer
                    type: array
                  minReadySeconds:
                    description: |-
                      MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                      if previous in healthy state
                      Has no effect for VLogs and VMSingle
                    format: int32
                    type: integer
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: NodeSelector Define which Nodes the Pods are scheduled
                      on.
                    type: object
                  paused:
                    description: |-
                      Paused If set to true all actions on the underlying managed objects are not
                      going to be performed, except for delete actions.
                    type: boolean
                  podDisruptionBudget:
                    description: PodDisruptionBudget created by operator
                    properties:
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at most "maxUnavailable" pods selected by
                          "selector" are unavailable after the eviction, i.e. even in absence of
                          the evicted pod. For example, one can prevent all voluntary evictions
                          by specifying 0. This is a mutually exclusive setting with "minAvailable".
                        x-kubernetes-int-or-string: true
                      minAvailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          An eviction is allowed if at least "minAvailable" pods selected by
                          "selector" will still be available after the eviction, i.e. even in the
                          absence of the evicted pod.  So for example you can prevent all voluntary
                          evictions by specifying "100%".
                        x-kubernetes-int-or-string: true
                      selectorLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          replaces default labels selector generated by operator
                          it's useful when you need to create custom budget
                        type: object
                    type: object
                  podMetadata:
                    description: PodMetadata configures Labels and Annotations which
                      are propagated to the VMStorage pods.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  port:
                    description: Port listen address
                    type: string
                  priorityClassName:
                    description: PriorityClassName class assigned to the Pods
                    type: string
                  readinessGates:
                    description: ReadinessGates defines pod readiness gates
                    items:
                      description: PodReadinessGate contains the reference to a pod
                        condition
                      properties:
                        conditionType:
                          description: ConditionType refers to a condition in the
                            pod's condition list with matching type.
                          type: string
                      required:
                      - conditionType
                      type: object
                    type: array
                  readinessProbe:
                    description: ReadinessProbe that will be added CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  replicaCount:
                    description: ReplicaCount is the expected size of the Application.
                    format: int32
                    type: integer
                  resources:
                    description: |-
                      Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      if not defined default resources from operator config will be used
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  revisionHistoryLimitCount:
                    description: |-
                      The number of old ReplicaSets to retain to allow rollback in deployment or
                      maximum number of revisions that will be maintained in the Deployment revision history.
                      Has no effect at StatefulSets
                      Defaults to 10.
                    format: int32
                    type: integer
                  rollingUpdateStrategy:
                    description: |-
                      RollingUpdateStrategy defines strategy for application updates
                      Default is OnDelete, in this case operator handles update process
                      Can be changed for RollingUpdate
                    type: string
                  runtimeClassName:
                    description: |-
                      RuntimeClassName - defines runtime class for kubernetes pod.
                      https://kubernetes.io/docs/concepts/containers/runtime-class/
                    type: string
                  schedulerName:
                    description: SchedulerName - defines kubernetes scheduler name
                    type: string
                  secrets:
                    description: |-
                      Secrets is a list of Secrets in the same namespace as the Application
                      object, which shall be mounted into the Application container
                      at /etc/vm/secrets/SECRET_NAME folder
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: |-
                      SecurityContext holds pod-level security attributes and common container settings.
                      This defaults to the default PodSecurityContext.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceScrapeSpec:
                    description: ServiceScrapeSpec that will be added to vmstorage
                      VMServiceScrape spec
                    required:
                    - endpoints
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  serviceSpec:
                    description: ServiceSpec that will be create additional service
                      for vmstorage
                    properties:
                      metadata:
                        description: EmbeddedObjectMetadata defines objectMeta for
                          additional service.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              Annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Labels Map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                            type: object
                          name:
                            description: |-
                              Name must be unique within a namespace. Is required when creating resources, although
                              some resources may allow a client to request the generation of an appropriate name
                              automatically. Name is primarily intended for creation idempotence and configuration
                              definition.
                              Cannot be updated.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                            type: string
                        type: object
                      spec:
                        description: |-
                          ServiceSpec describes the attributes that a user creates on a service.
                          More info: https://kubernetes.io/docs/concepts/services-networking/service/
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      useAsDefault:
                        description: |-
                          UseAsDefault applies changes from given service definition to the main object Service
                          Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                        type: boolean
                    required:
                    - spec
                    type: object
                  startupProbe:
                    description: StartupProbe that will be added to CRD pod
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  storage:
                    description: |-
                      Storage - add persistent volume for StorageDataPath
                      its useful for persistent cache
                    properties:
                      disableMountSubPath:
                        description: |-
                          Deprecated: subPath usage will be disabled by default in a future release, this option will become unnecessary.
                          DisableMountSubPath allows to remove any subPath usage in volume mounts.
                        type: boolean
                      emptyDir:
                        description: |-
                          EmptyDirVolumeSource to be used by the Prometheus StatefulSets. If specified, used in place of any volumeClaimTemplate. More
                          info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
                        properties:
                          medium:
                            description: |-
                              medium represents what type of storage medium should back this directory.
                              The default is "" which means to use the node's default medium.
                              Must be an empty string (default) or Memory.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            type: string
                          sizeLimit:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              sizeLimit is the total amount of local storage required for this EmptyDir volume.
                              The size limit is also applicable for memory medium.
                              The maximum usage on memory medium EmptyDir would be the minimum value between
                              the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                              The default is nil which means that the limit is undefined.
                              More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                        type: object
                      volumeClaimTemplate:
                        description: A PVC spec to be used by the VMAlertManager StatefulSets.
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    type: object
                  storageDataPath:
                    description: StorageDataPath - path to storage data
                    type: string
                  terminationGracePeriodSeconds:
                    description: TerminationGracePeriodSeconds period for container
                      graceful termination
                    format: int64
                    type: integer
                  tolerations:
                    description: Tolerations If specified, the pod's tolerations.
                    items:
                      description: |-
                        The pod this Toleration is attached to tolerates any taint that matches
                        the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: |-
                            Effect indicates the taint effect to match. Empty means match all taint effects.
                            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: |-
                            Key is the taint key that the toleration applies to. Empty means match all taint keys.
                            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: |-
                            Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal.
                            Exists is equivalent to wildcard for value, so that a pod can
                            tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: |-
                            TolerationSeconds represents the period of time the toleration (which must be
                            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                            it is not set, which means tolerate the taint forever (do not evict). Zero and
                            negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: |-
                            Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                  topologySpreadConstraints:
                    description: |-
                      TopologySpreadConstraints embedded kubernetes pod configuration option,
                      controls how pods are spread across your cluster among failure-domains
                      such as regions, zones, nodes, and other user-defined topology domains
                      https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                    items:
                      description: TopologySpreadConstraint specifies how to spread
                        matching pods among the given topology.
                      required:
                      - maxSkew
                      - topologyKey
                      - whenUnsatisfiable
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  useDefaultResources:
                    description: |-
                      UseDefaultResources controls resource settings
                      By default, operator sets built-in resource requirements
                    type: boolean
                  useStrictSecurity:
                    description: |-
                      UseStrictSecurity enables strict security mode for component
                      it restricts disk writes access
                      uses non-root user out of the box
                      drops not needed security permissions
                    type: boolean
                  vmBackup:
                    description: VMBackup configuration for backup
                    properties:
                      acceptEULA:
                        description: |-
                          AcceptEULA accepts enterprise feature usage, must be set to true.
                          otherwise backupmanager cannot be added to single/cluster version.
                          https://victoriametrics.com/legal/esa/
                        type: boolean
                      concurrency:
                        description: Defines number of concurrent workers. Higher
                          concurrency may reduce backup duration (default 10)
                        format: int32
                        type: integer
                      credentialsSecret:
                        description: |-
                          CredentialsSecret is secret in the same namespace for access to remote storage
                          The secret is mounted into /etc/vm/creds.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      customS3Endpoint:
                        description: Custom S3 endpoint for use with S3-compatible
                          storages (e.g. MinIO). S3 is used if not set
                        type: string
                      destination:
                        description: Defines destination for backup
                        type: string
                      destinationDisableSuffixAdd:
                        description: |-
                          DestinationDisableSuffixAdd - disables suffix adding for cluster version backups
                          each vmstorage backup must have unique backup folder
                          so operator adds POD_NAME as suffix for backup destination folder.
                        type: boolean
                      disableDaily:
                        description: Defines if daily backups disabled (default false)
                        type: boolean
                      disableHourly:
                        description: Defines if hourly backups disabled (default false)
                        type: boolean
                      disableMonthly:
                        description: Defines if monthly backups disabled (default
                          false)
                        type: boolean
                      disableWeekly:
                        description: Defines if weekly backups disabled (default false)
                        type: boolean
                      extraArgs:
                        additionalProperties:
                          type: string
                        description: extra args like maxBytesPerSecond default 0
                        type: object
                      extraEnvs:
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      image:
                        description: Image - docker image settings for VMBackuper
                        properties:
                          pullPolicy:
                            description: PullPolicy describes how to pull docker image
                            type: string
                          repository:
                            description: Repository contains name of docker image
                              + it's repository if needed
                            type: string
                          tag:
                            description: Tag contains desired docker image version
                            type: string
                        type: object
                      logFormat:
                        description: |-
                          LogFormat for VMBackup to be configured with.
                          default or json
                        enum:
                        - default
                        - json
                        type: string
                      logLevel:
                        description: LogLevel for VMBackup to be configured with.
                        enum:
                        - INFO
                        - WARN
                        - ERROR
                        - FATAL
                        - PANIC
                        type: string
                      port:
                        description: Port for health check connections
                        type: string
                      resources:
                        description: |-
                          Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          if not defined default resources from operator config will be used
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                                request:
                                  description: |-
                                    Request is the name chosen for a request in the referenced claim.
                                    If empty, everything from the claim is made available, otherwise
                                    only the result of this request.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      restore:
                        description: |-
                          Restore Allows to enable restore options for pod
                          Read [more](https://docs.victoriametrics.com/vmbackupmanager#restore-commands)
                        properties:
                          onStart:
                            description: OnStart defines configuration for restore
                              on pod start
                            properties:
                              enabled:
                                description: Enabled defines if restore on start enabled
                                type: boolean
                            type: object
                        type: object
                      snapshotCreateURL:
                        description: SnapshotCreateURL overwrites url for snapshot
                          create
                        type: string
                      snapshotDeleteURL:
                        description: SnapShotDeleteURL overwrites url for snapshot
                          delete
                        type: string
                      volumeMounts:
                        description: |-
                          VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
                          VolumeMounts specified will be appended to other VolumeMounts in the vmbackupmanager container,
                          that are generated as a result of StorageSpec objects.
                        items:
                          description: VolumeMount describes a mounting of a Volume
                            within a container.
                          properties:
                            mountPath:
                              description: |-
                                Path within the container at which the volume should be mounted.  Must
                                not contain ':'.
                              type: string
                            mountPropagation:
                              description: |-
                                mountPropagation determines how mounts are propagated from the host
                                to container and the other way around.
                                When not set, MountPropagationNone is used.
                                This field is beta in 1.10.
                                When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                                (which defaults to None).
                              type: string
                            name:
                              description: This must match the Name of a Volume.
                              type: string
                            readOnly:
                              description: |-
                                Mounted read-only if true, read-write otherwise (false or unspecified).
                                Defaults to false.
                              type: boolean
                            recursiveReadOnly:
                              description: |-
                                RecursiveReadOnly specifies whether read-only mounts should be handled
                                recursively.

                                If ReadOnly is false, this field has no meaning and must be unspecified.

                                If ReadOnly is true, and this field is set to Disabled, the mount is not made
                                recursively read-only.  If this field is set to IfPossible, the mount is made
                                recursively read-only, if it is supported by the container runtime.  If this
                                field is set to Enabled, the mount is made recursively read-only if it is
                                supported by the container runtime, otherwise the pod will not be started and
                                an error will be generated to indicate the reason.

                                If this field is set to IfPossible or Enabled, MountPropagation must be set to
                                None (or be unspecified, which defaults to None).

                                If this field is not specified, it is treated as an equivalent of Disabled.
                              type: string
                            subPath:
                              description: |-
                                Path within the volume from which the container's volume should be mounted.
                                Defaults to "" (volume's root).
                              type: string
                            subPathExpr:
                              description: |-
                                Expanded path within the volume from which the container's volume should be mounted.
                                Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                                Defaults to "" (volume's root).
                                SubPathExpr and SubPath are mutually exclusive.
                              type: string
                          required:
                          - mountPath
                          - name
                          type: object
                        type: array
                    type: object
                  vmInsertPort:
                    description: VMInsertPort for VMInsert connections
                    type: string
                  vmSelectPort:
                    description: VMSelectPort for VMSelect connections
                    type: string
                  volumeMounts:
                    description: |-
                      VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                      VolumeMounts specified will be appended to other VolumeMounts in the Application container
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                            (which defaults to None).
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        recursiveReadOnly:
                          description: |-
                            RecursiveReadOnly specifies whether read-only mounts should be handled
                            recursively.

                            If ReadOnly is false, this field has no meaning and must be unspecified.

                            If ReadOnly is true, and this field is set to Disabled, the mount is not made
                            recursively read-only.  If this field is set to IfPossible, the mount is made
                            recursively read-only, if it is supported by the container runtime.  If this
                            field is set to Enabled, the mount is made recursively read-only if it is
                            supported by the container runtime, otherwise the pod will not be started and
                            an error will be generated to indicate the reason.

                            If this field is set to IfPossible or Enabled, MountPropagation must be set to
                            None (or be unspecified, which defaults to None).

                            If this field is not specified, it is treated as an equivalent of Disabled.
                          type: string
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                  volumes:
                    description: |-
                      Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                      Volumes specified will be appended to other volumes that are generated.
                      / +optional
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      required:
                      - name
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
            required:
            - retentionPeriod
            type: object
          status:
            description: VMClusterStatus defines the observed state of VMCluster
            properties:
              clusterStatus:
                description: LegacyStatus is deprecated and will be removed at v0.52.0
                  version
                type: string
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmnodescrapes.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMNodeScrape
    listKind: VMNodeScrapeList
    plural: vmnodescrapes
    singular: vmnodescrape
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VMNodeScrape defines discovery for targets placed on kubernetes nodes,
          usually its node-exporters and other host services.
          InternalIP is used as __address__ for scraping.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMNodeScrapeSpec defines specification for VMNodeScrape.
            properties:
              authorization:
                description: Authorization with http header Authorization
                properties:
                  credentials:
                    description: Reference to the secret with value for authorization
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  credentialsFile:
                    description: File with value for authorization
                    type: string
                  type:
                    description: Type of authorization, default to bearer
                    type: string
                type: object
              basicAuth:
                description: BasicAuth allow an endpoint to authenticate over basic
                  authentication
                properties:
                  password:
                    description: |-
                      Password defines reference for secret with password value
                      The secret needs to be in the same namespace as scrape object
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  password_file:
                    description: |-
                      PasswordFile defines path to password file at disk
                      must be pre-mounted
                    type: string
                  username:
                    description: |-
                      Username defines reference for secret with username value
                      The secret needs to be in the same namespace as scrape object
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              bearerTokenFile:
                description: File to read bearer token for scraping targets.
                type: string
              bearerTokenSecret:
                description: |-
                  Secret to mount to read bearer token for scraping targets. The secret
                  needs to be in the same namespace as the scrape object and accessible by
                  the victoria-metrics operator.
                nullable: true
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              follow_redirects:
                description: FollowRedirects controls redirects for scraping.
                type: boolean
              honorLabels:
                description: HonorLabels chooses the metric's labels on collisions
                  with target labels.
                type: boolean
              honorTimestamps:
                description: HonorTimestamps controls whether vmagent respects the
                  timestamps present in scraped data.
                type: boolean
              interval:
                description: Interval at which metrics should be scraped
                type: string
              jobLabel:
                description: The label to use to retrieve the job name from.
                type: string
              max_scrape_size:
                description: MaxScrapeSize defines a maximum size of scraped data
                  for a job
                type: string
              metricRelabelConfigs:
                description: MetricRelabelConfigs to apply to samples after scrapping.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              oauth2:
                description: OAuth2 defines auth configuration
                properties:
                  client_id:
                    description: The secret or configmap containing the OAuth2 client
                      id
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  client_secret:
                    description: The secret containing the OAuth2 client secret
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  client_secret_file:
                    description: ClientSecretFile defines path for client secret file.
                    type: string
                  endpoint_params:
                    additionalProperties:
                      type: string
                    description: Parameters to append to the token URL
                    type: object
                  scopes:
                    description: OAuth2 scopes used for the token request
                    items:
                      type: string
                    type: array
                  token_url:
                    description: The URL to fetch the token from
                    minLength: 1
                    type: string
                required:
                - client_id
                - token_url
                type: object
              params:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: Optional HTTP URL parameters
                type: object
              path:
                description: HTTP path to scrape for metrics.
                type: string
              port:
                description: Name of the port exposed at Node.
                type: string
              proxyURL:
                description: ProxyURL eg http://proxyserver:2195 Directs scrapes to
                  proxy through this endpoint.
                type: string
              relabelConfigs:
                description: RelabelConfigs to apply to samples during service discovery.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              sampleLimit:
                description: SampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              scheme:
                description: HTTP scheme to use for scraping.
                enum:
                - http
                - https
                - HTTPS
                - HTTP
                type: string
              scrape_interval:
                description: |-
                  ScrapeInterval is the same as Interval and has priority over it.
                  one of scrape_interval or interval can be used
                type: string
              scrapeTimeout:
                description: Timeout after which the scrape is ended
                type: string
              selector:
                description: Selector to select kubernetes Nodes.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              seriesLimit:
                description: |-
                  SeriesLimit defines per-scrape limit on number of unique time series
                  a single target can expose during all the scrapes on the time window of 24h.
                format: int64
                type: integer
              targetLabels:
                description: TargetLabels transfers labels on the Kubernetes Node
                  onto the target.
                items:
                  type: string
                type: array
              tlsConfig:
                description: TLSConfig configuration to use when scraping the endpoint
                properties:
                  ca:
                    description: Stuct containing the CA cert to use for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  caFile:
                    description: Path to the CA cert in the container to use for the
                      targets.
                    type: string
                  cert:
                    description: Struct containing the client cert file for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  certFile:
                    description: Path to the client cert file in the container for
                      the targets.
                    type: string
                  insecureSkipVerify:
                    description: Disable target certificate validation.
                    type: boolean
                  keyFile:
                    description: Path to the client key file in the container for
                      the targets.
                    type: string
                  keySecret:
                    description: Secret containing the client key file for the targets.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  serverName:
                    description: Used to verify the hostname for the targets.
                    type: string
                type: object
              vm_scrape_params:
                description: VMScrapeParams defines VictoriaMetrics specific scrape
                  parameters
                properties:
                  disable_compression:
                    description: DisableCompression
                    type: boolean
                  disable_keep_alive:
                    description: |-
                      disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                      By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                      could be re-used.
                      See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
                    type: boolean
                  headers:
                    description: |-
                      Headers allows sending custom headers to scrape targets
                      must be in of semicolon separated header with it's value
                      eg:
                      headerName: headerValue
                      vmagent supports since 1.79.0 version
                    items:
                      type: string
                    type: array
                  no_stale_markers:
                    type: boolean
                  proxy_client_config:
                    description: |-
                      ProxyClientConfig configures proxy auth settings for scraping
                      See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
                    properties:
                      basic_auth:
                        description: BasicAuth allow an endpoint to authenticate over
                          basic authentication
                        properties:
                          password:
                            description: |-
                              Password defines reference for secret with password value
                              The secret needs to be in the same namespace as scrape object
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          password_file:
                            description: |-
                              PasswordFile defines path to password file at disk
                              must be pre-mounted
                            type: string
                          username:
                            description: |-
                              Username defines reference for secret with username value
                              The secret needs to be in the same namespace as scrape object
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      bearer_token:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      bearer_token_file:
                        type: string
                      tls_config:
                        description: TLSConfig specifies TLSConfig configuration parameters.
                        properties:
                          ca:
                            description: Stuct containing the CA cert to use for the
                              targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          caFile:
                            description: Path to the CA cert in the container to use
                              for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for
                              the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          certFile:
                            description: Path to the client cert file in the container
                              for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the container
                              for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for
                              the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    type: object
                  scrape_align_interval:
                    type: string
                  scrape_offset:
                    type: string
                  stream_parse:
                    type: boolean
                type: object
            type: object
          status:
            description: ScrapeObjectStatus defines the observed state of ScrapeObjects
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmpodscrapes.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMPodScrape
    listKind: VMPodScrapeList
    plural: vmpodscrapes
    singular: vmpodscrape
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VMPodScrape is scrape configuration for pods,
          it generates vmagent's config for scraping pod targets
          based on selectors.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMPodScrapeSpec defines the desired state of VMPodScrape
            properties:
              attach_metadata:
                description: AttachMetadata configures metadata attaching from service
                  discovery
                properties:
                  node:
                    description: |-
                      Node instructs vmagent to add node specific metadata from service discovery
                      Valid for roles: pod, endpoints, endpointslice.
                    type: boolean
                type: object
              jobLabel:
                description: The label to use to retrieve the job name from.
                type: string
              namespaceSelector:
                description: Selector to select which namespaces the Endpoints objects
                  are discovered from.
                properties:
                  any:
                    description: |-
                      Boolean describing whether all namespaces are selected in contrast to a
                      list restricting them.
                    type: boolean
                  matchNames:
                    description: List of namespace names.
                    items:
                      type: string
                    type: array
                type: object
              podMetricsEndpoints:
                description: A list of endpoints allowed as part of this PodMonitor.
                items:
                  description: PodMetricsEndpoint defines a scrapeable endpoint of
                    a Kubernetes Pod serving metrics.
                  properties:
                    attach_metadata:
                      description: AttachMetadata configures metadata attaching from
                        service discovery
                      properties:
                        node:
                          description: |-
                            Node instructs vmagent to add node specific metadata from service discovery
                            Valid for roles: pod, endpoints, endpointslice.
                          type: boolean
                      type: object
                    authorization:
                      description: Authorization with http header Authorization
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    bearerTokenFile:
                      description: File to read bearer token for scraping targets.
                      type: string
                    bearerTokenSecret:
                      description: |-
                        Secret to mount to read bearer token for scraping targets. The secret
                        needs to be in the same namespace as the scrape object and accessible by
                        the victoria-metrics operator.
                      nullable: true
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    filterRunning:
                      description: |-
                        FilterRunning applies filter with pod status == running
                        it prevents from scrapping metrics at failed or succeed state pods.
                        enabled by default
                      type: boolean
                    follow_redirects:
                      description: FollowRedirects controls redirects for scraping.
                      type: boolean
                    honorLabels:
                      description: HonorLabels chooses the metric's labels on collisions
                        with target labels.
                      type: boolean
                    honorTimestamps:
                      description: HonorTimestamps controls whether vmagent respects
                        the timestamps present in scraped data.
                      type: boolean
                    interval:
                      description: Interval at which metrics should be scraped
                      type: string
                    max_scrape_size:
                      description: MaxScrapeSize defines a maximum size of scraped
                        data for a job
                      type: string
                    metricRelabelConfigs:
                      description: MetricRelabelConfigs to apply to samples after
                        scrapping.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Optional HTTP URL parameters
                      type: object
                    path:
                      description: HTTP path to scrape for metrics.
                      type: string
                    port:
                      description: Name of the port exposed at Pod.
                      type: string
                    portNumber:
                      description: PortNumber defines the `Pod` port number which
                        exposes the endpoint.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    relabelConfigs:
                      description: RelabelConfigs to apply to samples during service
                        discovery.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    sampleLimit:
                      description: SampleLimit defines per-scrape limit on number
                        of scraped samples that will be accepted.
                      format: int64
                      type: integer
                    scheme:
                      description: HTTP scheme to use for scraping.
                      enum:
                      - http
                      - https
                      - HTTPS
                      - HTTP
                      type: string
                    scrape_interval:
                      description: |-
                        ScrapeInterval is the same as Interval and has priority over it.
                        one of scrape_interval or interval can be used
                      type: string
                    scrapeTimeout:
                      description: Timeout after which the scrape is ended
                      type: string
                    seriesLimit:
                      description: |-
                        SeriesLimit defines per-scrape limit on number of unique time series
                        a single target can expose during all the scrapes on the time window of 24h.
                      format: int64
                      type: integer
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        TargetPort defines name or number of the pod port this endpoint refers to.
                        Mutually exclusive with Port and PortNumber.
                      x-kubernetes-int-or-string: true
                    tlsConfig:
                      description: TLSConfig configuration to use when scraping the
                        endpoint
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    vm_scrape_params:
                      description: VMScrapeParams defines VictoriaMetrics specific
                        scrape parameters
                      properties:
                        disable_compression:
                          description: DisableCompression
                          type: boolean
                        disable_keep_alive:
                          description: |-
                            disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                            By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                            could be re-used.
                            See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
                          type: boolean
                        headers:
                          description: |-
                            Headers allows sending custom headers to scrape targets
                            must be in of semicolon separated header with it's value
                            eg:
                            headerName: headerValue
                            vmagent supports since 1.79.0 version
                          items:
                            type: string
                          type: array
                        no_stale_markers:
                          type: boolean
                        proxy_client_config:
                          description: |-
                            ProxyClientConfig configures proxy auth settings for scraping
                            See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
                          properties:
                            basic_auth:
                              description: BasicAuth allow an endpoint to authenticate
                                over basic authentication
                              properties:
                                password:
                                  description: |-
                                    Password defines reference for secret with password value
                                    The secret needs to be in the same namespace as scrape object
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                password_file:
                                  description: |-
                                    PasswordFile defines path to password file at disk
                                    must be pre-mounted
                                  type: string
                                username:
                                  description: |-
                                    Username defines reference for secret with username value
                                    The secret needs to be in the same namespace as scrape object
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            bearer_token:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            bearer_token_file:
                              type: string
                            tls_config:
                              description: TLSConfig specifies TLSConfig configuration
                                parameters.
                              properties:
                                ca:
                                  description: Stuct containing the CA cert to use
                                    for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use
                                        for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secret:
                                      description: Secret containing data to use for
                                        the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                caFile:
                                  description: Path to the CA cert in the container
                                    to use for the targets.
                                  type: string
                                cert:
                                  description: Struct containing the client cert file
                                    for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use
                                        for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secret:
                                      description: Secret containing data to use for
                                        the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                certFile:
                                  description: Path to the client cert file in the
                                    container for the targets.
                                  type: string
                                insecureSkipVerify:
                                  description: Disable target certificate validation.
                                  type: boolean
                                keyFile:
                                  description: Path to the client key file in the
                                    container for the targets.
                                  type: string
                                keySecret:
                                  description: Secret containing the client key file
                                    for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serverName:
                                  description: Used to verify the hostname for the
                                    targets.
                                  type: string
                              type: object
                          type: object
                        scrape_align_interval:
                          type: string
                        scrape_offset:
                          type: string
                        stream_parse:
                          type: boolean
                      type: object
                  type: object
                type: array
              podTargetLabels:
                description: PodTargetLabels transfers labels on the Kubernetes Pod
                  onto the target.
                items:
                  type: string
                type: array
              sampleLimit:
                description: SampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              selector:
                description: Selector to select Pod objects.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              seriesLimit:
                description: |-
                  SeriesLimit defines per-scrape limit on number of unique time series
                  a single target can expose during all the scrapes on the time window of 24h.
                format: int64
                type: integer
            required:
            - podMetricsEndpoints
            type: object
          status:
            description: ScrapeObjectStatus defines the observed state of ScrapeObjects
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmprobes.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMProbe
    listKind: VMProbeList
    plural: vmprobes
    singular: vmprobe
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VMProbe defines a probe for targets, that will be executed with prober,
          like blackbox exporter.
          It helps to monitor reachability of target with various checks.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMProbeSpec contains specification parameters for a Probe.
            properties:
              authorization:
                description: Authorization with http header Authorization
                properties:
                  credentials:
                    description: Reference to the secret with value for authorization
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  credentialsFile:
                    description: File with value for authorization
                    type: string
                  type:
                    description: Type of authorization, default to bearer
                    type: string
                type: object
              basicAuth:
                description: BasicAuth allow an endpoint to authenticate over basic
                  authentication
                properties:
                  password:
                    description: |-
                      Password defines reference for secret with password value
                      The secret needs to be in the same namespace as scrape object
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  password_file:
                    description: |-
                      PasswordFile defines path to password file at disk
                      must be pre-mounted
                    type: string
                  username:
                    description: |-
                      Username defines reference for secret with username value
                      The secret needs to be in the same namespace as scrape object
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              bearerTokenFile:
                description: File to read bearer token for scraping targets.
                type: string
              bearerTokenSecret:
                description: |-
                  Secret to mount to read bearer token for scraping targets. The secret
                  needs to be in the same namespace as the scrape object and accessible by
                  the victoria-metrics operator.
                nullable: true
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              follow_redirects:
                description: FollowRedirects controls redirects for scraping.
                type: boolean
              honorLabels:
                description: HonorLabels chooses the metric's labels on collisions
                  with target labels.
                type: boolean
              honorTimestamps:
                description: HonorTimestamps controls whether vmagent respects the
                  timestamps present in scraped data.
                type: boolean
              interval:
                description: Interval at which metrics should be scraped
                type: string
              jobName:
                description: The job name assigned to scraped metrics by default.
                type: string
              max_scrape_size:
                description: MaxScrapeSize defines a maximum size of scraped data
                  for a job
                type: string
              metricRelabelConfigs:
                description: MetricRelabelConfigs to apply to samples after scrapping.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              module:
                description: |-
                  The module to use for probing specifying how to probe the target.
                  Example module configuring in the blackbox exporter:
                  https://github.com/prometheus/blackbox_exporter/blob/master/example.yml
                type: string
              oauth2:
                description: OAuth2 defines auth configuration
                properties:
                  client_id:
                    description: The secret or configmap containing the OAuth2 client
                      id
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  client_secret:
                    description: The secret containing the OAuth2 client secret
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  client_secret_file:
                    description: ClientSecretFile defines path for client secret file.
                    type: string
                  endpoint_params:
                    additionalProperties:
                      type: string
                    description: Parameters to append to the token URL
                    type: object
                  scopes:
                    description: OAuth2 scopes used for the token request
                    items:
                      type: string
                    type: array
                  token_url:
                    description: The URL to fetch the token from
                    minLength: 1
                    type: string
                required:
                - client_id
                - token_url
                type: object
              params:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: Optional HTTP URL parameters
                type: object
              path:
                description: HTTP path to scrape for metrics.
                type: string
              proxyURL:
                description: ProxyURL eg http://proxyserver:2195 Directs scrapes to
                  proxy through this endpoint.
                type: string
              sampleLimit:
                description: SampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              scheme:
                description: HTTP scheme to use for scraping.
                enum:
                - http
                - https
                - HTTPS
                - HTTP
                type: string
              scrape_interval:
                description: |-
                  ScrapeInterval is the same as Interval and has priority over it.
                  one of scrape_interval or interval can be used
                type: string
              scrapeTimeout:
                description: Timeout after which the scrape is ended
                type: string
              seriesLimit:
                description: |-
                  SeriesLimit defines per-scrape limit on number of unique time series
                  a single target can expose during all the scrapes on the time window of 24h.
                format: int64
                type: integer
              targets:
                description: Targets defines a set of static and/or dynamically discovered
                  targets to be probed using the prober.
                properties:
                  ingress:
                    description: Ingress defines the set of dynamically discovered
                      ingress objects which hosts are considered for probing.
                    properties:
                      namespaceSelector:
                        description: Select Ingress objects by namespace.
                        properties:
                          any:
                            description: |-
                              Boolean describing whether all namespaces are selected in contrast to a
                              list restricting them.
                            type: boolean
                          matchNames:
                            description: List of namespace names.
                            items:
                              type: string
                            type: array
                        type: object
                      relabelingConfigs:
                        description: RelabelConfigs to apply to samples during service
                          discovery.
                        items:
                          description: |-
                            RelabelConfig allows dynamic rewriting of the label set
                            More info: https://docs.victoriametrics.com/#relabeling
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            if:
                              description: 'If represents metricsQL match expression
                                (or list of expressions): ''{__name__=~"foo_.*"}'''
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Labels is used together with Match for
                                `action: graphite`'
                              type: object
                            match:
                              description: 'Match is used together with Labels for
                                `action: graphite`'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: |-
                                Regular expression against which the extracted value is matched. Default is '(.*)'
                                victoriaMetrics supports multiline regex joined with |
                                https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                              x-kubernetes-preserve-unknown-fields: true
                            replacement:
                              description: |-
                                Replacement value against which a regex replace is performed if the
                                regular expression matches. Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            source_labels:
                              description: |-
                                UnderScoreSourceLabels - additional form of source labels source_labels
                                for compatibility with original relabel config.
                                if set  both sourceLabels and source_labels, sourceLabels has priority.
                                for details https://github.com/VictoriaMetrics/operator/issues/131
                              items:
                                type: string
                              type: array
                            sourceLabels:
                              description: |-
                                The source labels select values from existing labels. Their content is concatenated
                                using the configured separator and matched against the configured regular expression
                                for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            target_label:
                              description: |-
                                UnderScoreTargetLabel - additional form of target label - target_label
                                for compatibility with original relabel config.
                                if set  both targetLabel and target_label, targetLabel has priority.
                                for details https://github.com/VictoriaMetrics/operator/issues/131
                              type: string
                            targetLabel:
                              description: |-
                                Label to which the resulting value is written in a replace action.
                                It is mandatory for replace actions. Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      selector:
                        description: Select Ingress objects by labels.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  staticConfig:
                    description: StaticConfig defines static targets which are considers
                      for probing.
                    properties:
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels assigned to all metrics scraped from the
                          targets.
                        type: object
                      relabelingConfigs:
                        description: RelabelConfigs to apply to samples during service
                          discovery.
                        items:
                          description: |-
                            RelabelConfig allows dynamic rewriting of the label set
                            More info: https://docs.victoriametrics.com/#relabeling
                          properties:
                            action:
                              description: Action to perform based on regex matching.
                                Default is 'replace'
                              type: string
                            if:
                              description: 'If represents metricsQL match expression
                                (or list of expressions): ''{__name__=~"foo_.*"}'''
                              x-kubernetes-preserve-unknown-fields: true
                            labels:
                              additionalProperties:
                                type: string
                              description: 'Labels is used together with Match for
                                `action: graphite`'
                              type: object
                            match:
                              description: 'Match is used together with Labels for
                                `action: graphite`'
                              type: string
                            modulus:
                              description: Modulus to take of the hash of the source
                                label values.
                              format: int64
                              type: integer
                            regex:
                              description: |-
                                Regular expression against which the extracted value is matched. Default is '(.*)'
                                victoriaMetrics supports multiline regex joined with |
                                https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                              x-kubernetes-preserve-unknown-fields: true
                            replacement:
                              description: |-
                                Replacement value against which a regex replace is performed if the
                                regular expression matches. Regex capture groups are available. Default is '$1'
                              type: string
                            separator:
                              description: Separator placed between concatenated source
                                label values. default is ';'.
                              type: string
                            source_labels:
                              description: |-
                                UnderScoreSourceLabels - additional form of source labels source_labels
                                for compatibility with original relabel config.
                                if set  both sourceLabels and source_labels, sourceLabels has priority.
                                for details https://github.com/VictoriaMetrics/operator/issues/131
                              items:
                                type: string
                              type: array
                            sourceLabels:
                              description: |-
                                The source labels select values from existing labels. Their content is concatenated
                                using the configured separator and matched against the configured regular expression
                                for the replace, keep, and drop actions.
                              items:
                                type: string
                              type: array
                            target_label:
                              description: |-
                                UnderScoreTargetLabel - additional form of target label - target_label
                                for compatibility with original relabel config.
                                if set  both targetLabel and target_label, targetLabel has priority.
                                for details https://github.com/VictoriaMetrics/operator/issues/131
                              type: string
                            targetLabel:
                              description: |-
                                Label to which the resulting value is written in a replace action.
                                It is mandatory for replace actions. Regex capture groups are available.
                              type: string
                          type: object
                        type: array
                      targets:
                        description: Targets is a list of URLs to probe using the
                          configured prober.
                        items:
                          type: string
                        type: array
                    required:
                    - targets
                    type: object
                type: object
              tlsConfig:
                description: TLSConfig configuration to use when scraping the endpoint
                properties:
                  ca:
                    description: Stuct containing the CA cert to use for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  caFile:
                    description: Path to the CA cert in the container to use for the
                      targets.
                    type: string
                  cert:
                    description: Struct containing the client cert file for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  certFile:
                    description: Path to the client cert file in the container for
                      the targets.
                    type: string
                  insecureSkipVerify:
                    description: Disable target certificate validation.
                    type: boolean
                  keyFile:
                    description: Path to the client key file in the container for
                      the targets.
                    type: string
                  keySecret:
                    description: Secret containing the client key file for the targets.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  serverName:
                    description: Used to verify the hostname for the targets.
                    type: string
                type: object
              vm_scrape_params:
                description: VMScrapeParams defines VictoriaMetrics specific scrape
                  parameters
                properties:
                  disable_compression:
                    description: DisableCompression
                    type: boolean
                  disable_keep_alive:
                    description: |-
                      disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                      By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                      could be re-used.
                      See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
                    type: boolean
                  headers:
                    description: |-
                      Headers allows sending custom headers to scrape targets
                      must be in of semicolon separated header with it's value
                      eg:
                      headerName: headerValue
                      vmagent supports since 1.79.0 version
                    items:
                      type: string
                    type: array
                  no_stale_markers:
                    type: boolean
                  proxy_client_config:
                    description: |-
                      ProxyClientConfig configures proxy auth settings for scraping
                      See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
                    properties:
                      basic_auth:
                        description: BasicAuth allow an endpoint to authenticate over
                          basic authentication
                        properties:
                          password:
                            description: |-
                              Password defines reference for secret with password value
                              The secret needs to be in the same namespace as scrape object
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          password_file:
                            description: |-
                              PasswordFile defines path to password file at disk
                              must be pre-mounted
                            type: string
                          username:
                            description: |-
                              Username defines reference for secret with username value
                              The secret needs to be in the same namespace as scrape object
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      bearer_token:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      bearer_token_file:
                        type: string
                      tls_config:
                        description: TLSConfig specifies TLSConfig configuration parameters.
                        properties:
                          ca:
                            description: Stuct containing the CA cert to use for the
                              targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          caFile:
                            description: Path to the CA cert in the container to use
                              for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for
                              the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          certFile:
                            description: Path to the client cert file in the container
                              for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the container
                              for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for
                              the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    type: object
                  scrape_align_interval:
                    type: string
                  scrape_offset:
                    type: string
                  stream_parse:
                    type: boolean
                type: object
              vmProberSpec:
                description: |-
                  Specification for the prober to use for probing targets.
                  The prober.URL parameter is required. Targets cannot be probed if left empty.
                properties:
                  path:
                    description: |-
                      Path to collect metrics from.
                      Defaults to `/probe`.
                    type: string
                  scheme:
                    description: |-
                      HTTP scheme to use for scraping.
                      Defaults to `http`.
                    enum:
                    - http
                    - https
                    type: string
                  url:
                    description: Mandatory URL of the prober.
                    type: string
                required:
                - url
                type: object
            required:
            - vmProberSpec
            type: object
          status:
            description: ScrapeObjectStatus defines the observed state of ScrapeObjects
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmrules.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMRule
    listKind: VMRuleList
    plural: vmrules
    singular: vmrule
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMRule defines rule records for vmalert application
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMRuleSpec defines the desired state of VMRule
            properties:
              groups:
                description: Groups list of group rules
                items:
                  description: RuleGroup is a list of sequentially evaluated recording
                    and alerting rules.
                  properties:
                    concurrency:
                      description: Concurrency defines how many rules execute at once.
                      type: integer
                    eval_alignment:
                      description: |-
                        Optional
                        The evaluation timestamp will be aligned with group's interval,
                        instead of using the actual timestamp that evaluation happens at.
                        It is enabled by default to get more predictable results
                        and to visually align with graphs plotted via Grafana or vmui.
                      type: boolean
                    eval_delay:
                      description: |-
                        Optional
                        Adjust the `time` parameter of group evaluation requests to compensate intentional query delay from the datasource.
                      type: string
                    eval_offset:
                      description: |-
                        Optional
                        Group will be evaluated at the exact offset in the range of [0...interval].
                      type: string
                    extra_filter_labels:
                      additionalProperties:
                        type: string
                      description: |-
                        ExtraFilterLabels optional list of label filters applied to every rule's
                        request within a group. Is compatible only with VM datasource.
                        See more details [here](https://docs.victoriametrics.com/#prometheus-querying-api-enhancements)
                        Deprecated, use params instead
                      type: object
                    headers:
                      description: |-
                        Headers contains optional HTTP headers added to each rule request
                        Must be in form `header-name: value`
                        For example:
                         headers:
                           - "CustomHeader: foo"
                           - "CustomHeader2: bar"
                      items:
                        type: string
                      type: array
                    interval:
                      description: evaluation interval for group
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: |-
                        Labels optional list of labels added to every rule within a group.
                        It has priority over the external labels.
                        Labels are commonly used for adding environment
                        or tenant-specific tag.
                      type: object
                    limit:
                      description: |-
                        Limit the number of alerts an alerting rule and series a recording
                        rule can produce
                      type: integer
                    name:
                      description: Name of group
                      type: string
                    notifier_headers:
                      description: |-
                        NotifierHeaders contains optional HTTP headers added to each alert request which will send to notifier
                        Must be in form `header-name: value`
                        For example:
                         headers:
                           - "CustomHeader: foo"
                           - "CustomHeader2: bar"
                      items:
                        type: string
                      type: array
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Params optional HTTP URL parameters added to each
                        rule request
                      type: object
                    rules:
                      description: Rules list of alert rules
                      items:
                        description: Rule describes an alerting or recording rule.
                        properties:
                          alert:
                            description: Alert is a name for alert
                            type: string
                          annotations:
                            additionalProperties:
                              type: string
                            description: Annotations will be added to rule configuration
                            type: object
                          debug:
                            description: |-
                              Debug enables logging for rule
                              it useful for tracking
                            type: boolean
                          expr:
                            description: Expr is query, that will be evaluated at
                              dataSource
                            type: string
                          for:
                            description: |-
                              For evaluation interval in time.Duration format
                              30s, 1m, 1h  or nanoseconds
                            type: string
                          keep_firing_for:
                            description: |-
                              KeepFiringFor will make alert continue firing for this long
                              even when the alerting expression no longer has results.
                              Use time.Duration format, 30s, 1m, 1h  or nanoseconds
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: Labels will be added to rule configuration
                            type: object
                          record:
                            description: Record represents a query, that will be recorded
                              to dataSource
                            type: string
                          update_entries_limit:
                            description: |-
                              UpdateEntriesLimit defines max number of rule's state updates stored in memory.
                              Overrides `-rule.updateEntriesLimit` in vmalert.
                            type: integer
                        type: object
                      type: array
                    tenant:
                      description: |-
                        Tenant id for group, can be used only with enterprise version of vmalert.
                        See more details [here](https://docs.victoriametrics.com/vmalert#multitenancy).
                      type: string
                    type:
                      description: |-
                        Type defines datasource type for enterprise version of vmalert
                        possible values - prometheus,graphite,vlogs
                      type: string
                  required:
                  - name
                  - rules
                  type: object
                type: array
            required:
            - groups
            type: object
          status:
            description: VMRuleStatus defines the observed state of VMRule
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmscrapeconfigs.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMScrapeConfig
    listKind: VMScrapeConfigList
    plural: vmscrapeconfigs
    singular: vmscrapeconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMScrapeConfig specifies a set of targets and parameters describing
          how to scrape them.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMScrapeConfigSpec defines the desired state of VMScrapeConfig
            properties:
              authorization:
                description: Authorization with http header Authorization
                properties:
                  credentials:
                    description: Reference to the secret with value for authorization
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  credentialsFile:
                    description: File with value for authorization
                    type: string
                  type:
                    description: Type of authorization, default to bearer
                    type: string
                type: object
              azureSDConfigs:
                description: AzureSDConfigs defines a list of Azure service discovery
                  configurations.
                items:
                  description: |-
                    AzureSDConfig allow retrieving scrape targets from Azure VMs.
                    See [here](https://docs.victoriametrics.com/sd_configs#azure_sd_configs)
                  properties:
                    authenticationMethod:
                      description: |-
                        # The authentication method, either OAuth or ManagedIdentity.
                        See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview
                      enum:
                      - OAuth
                      - ManagedIdentity
                      type: string
                    clientID:
                      description: Optional client ID. Only required with the OAuth
                        authentication method.
                      type: string
                    clientSecret:
                      description: Optional client secret. Only required with the
                        OAuth authentication method.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    environment:
                      description: The Azure environment.
                      type: string
                    port:
                      description: |-
                        The port to scrape metrics from. If using the public IP address, this must
                        instead be specified in the relabeling rule.
                      type: integer
                    resourceGroup:
                      description: Optional resource group name. Limits discovery
                        to this resource group.
                      type: string
                    subscriptionID:
                      description: The subscription ID. Always required.
                      minLength: 1
                      type: string
                    tenantID:
                      description: Optional tenant ID. Only required with the OAuth
                        authentication method.
                      type: string
                  required:
                  - subscriptionID
                  type: object
                type: array
              basicAuth:
                description: BasicAuth allow an endpoint to authenticate over basic
                  authentication
                properties:
                  password:
                    description: |-
                      Password defines reference for secret with password value
                      The secret needs to be in the same namespace as scrape object
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  password_file:
                    description: |-
                      PasswordFile defines path to password file at disk
                      must be pre-mounted
                    type: string
                  username:
                    description: |-
                      Username defines reference for secret with username value
                      The secret needs to be in the same namespace as scrape object
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              bearerTokenFile:
                description: File to read bearer token for scraping targets.
                type: string
              bearerTokenSecret:
                description: |-
                  Secret to mount to read bearer token for scraping targets. The secret
                  needs to be in the same namespace as the scrape object and accessible by
                  the victoria-metrics operator.
                nullable: true
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              consulSDConfigs:
                description: ConsulSDConfigs defines a list of Consul service discovery
                  configurations.
                items:
                  description: |-
                    ConsulSDConfig defines a Consul service discovery configuration.
                    See [here](https://docs.victoriametrics.com/sd_configs/#consul_sd_configs)
                  properties:
                    allowStale:
                      description: |-
                        Allow stale Consul results (see https://developer.hashicorp.com/consul/api-docs/features/consistency). Will reduce load on Consul.
                        If unset, use its default value.
                      type: boolean
                    authorization:
                      description: Authorization header to use on every scrape request.
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    basicAuth:
                      description: BasicAuth information to use on every scrape request.
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    datacenter:
                      description: Consul Datacenter name, if not provided it will
                        use the local Consul Agent Datacenter.
                      type: string
                    filter:
                      description: |-
                        Filter defines filter for /v1/catalog/services requests
                        See https://developer.hashicorp.com/consul/api-docs/features/filtering
                      type: string
                    followRedirects:
                      description: |-
                        Configure whether HTTP requests follow HTTP 3xx redirects.
                        If unset, use its default value.
                      type: boolean
                    namespace:
                      description: Namespaces are only supported in Consul Enterprise.
                      type: string
                    nodeMeta:
                      additionalProperties:
                        type: string
                      description: Node metadata key/value pairs to filter nodes for
                        a given service.
                      type: object
                      x-kubernetes-map-type: atomic
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    partition:
                      description: Admin Partitions are only supported in Consul Enterprise.
                      type: string
                    proxy_client_config:
                      description: |-
                        ProxyClientConfig configures proxy auth settings for scraping
                        See [feature description](https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy)
                      properties:
                        basic_auth:
                          description: BasicAuth allow an endpoint to authenticate
                            over basic authentication
                          properties:
                            password:
                              description: |-
                                Password defines reference for secret with password value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            password_file:
                              description: |-
                                PasswordFile defines path to password file at disk
                                must be pre-mounted
                              type: string
                            username:
                              description: |-
                                Username defines reference for secret with username value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        bearer_token:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        bearer_token_file:
                          type: string
                        tls_config:
                          description: TLSConfig specifies TLSConfig configuration
                            parameters.
                          properties:
                            ca:
                              description: Stuct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            caFile:
                              description: Path to the CA cert in the container to
                                use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            certFile:
                              description: Path to the client cert file in the container
                                for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the container
                                for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      type: object
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    scheme:
                      description: HTTP Scheme default "http"
                      enum:
                      - HTTP
                      - HTTPS
                      type: string
                    server:
                      description: A valid string consisting of a hostname or IP followed
                        by an optional port number.
                      minLength: 1
                      type: string
                    services:
                      description: A list of services for which targets are retrieved.
                        If omitted, all services are scraped.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    tagSeparator:
                      description: |-
                        The string by which Consul tags are joined into the tag label.
                        If unset, use its default value.
                      type: string
                    tags:
                      description: An optional list of tags used to filter nodes for
                        a given service. Services must contain all tags in the list.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    tlsConfig:
                      description: TLS configuration to use on every scrape request
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    tokenRef:
                      description: Consul ACL TokenRef, if not provided it will use
                        the ACL from the local Consul Agent.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - server
                  type: object
                type: array
              digitalOceanSDConfigs:
                description: DigitalOceanSDConfigs defines a list of DigitalOcean
                  service discovery configurations.
                items:
                  description: |-
                    DigitalOceanSDConfig allow retrieving scrape targets from DigitalOcean's Droplets API.
                    This service discovery uses the public IPv4 address by default, by that can be changed with relabeling.
                    See [here](https://docs.victoriametrics.com/sd_configs#digitalocean_sd_configs)
                  properties:
                    authorization:
                      description: Authorization header to use on every scrape request.
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    followRedirects:
                      description: Configure whether HTTP requests follow HTTP 3xx
                        redirects.
                      type: boolean
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    port:
                      description: The port to scrape metrics from.
                      type: integer
                    proxy_client_config:
                      description: |-
                        ProxyClientConfig configures proxy auth settings for scraping
                        See [feature description](https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy)
                      properties:
                        basic_auth:
                          description: BasicAuth allow an endpoint to authenticate
                            over basic authentication
                          properties:
                            password:
                              description: |-
                                Password defines reference for secret with password value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            password_file:
                              description: |-
                                PasswordFile defines path to password file at disk
                                must be pre-mounted
                              type: string
                            username:
                              description: |-
                                Username defines reference for secret with username value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        bearer_token:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        bearer_token_file:
                          type: string
                        tls_config:
                          description: TLSConfig specifies TLSConfig configuration
                            parameters.
                          properties:
                            ca:
                              description: Stuct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            caFile:
                              description: Path to the CA cert in the container to
                                use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            certFile:
                              description: Path to the client cert file in the container
                                for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the container
                                for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      type: object
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    tlsConfig:
                      description: TLS configuration to use on every scrape request
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                  type: object
                type: array
              dnsSDConfigs:
                description: DNSSDConfigs defines a list of DNS service discovery
                  configurations.
                items:
                  description: |-
                    DNSSDConfig allows specifying a set of DNS domain names which are periodically queried to discover a list of targets.
                    The DNS servers to be contacted are read from /etc/resolv.conf.
                    See [here](https://docs.victoriametrics.com/sd_configs#dns_sd_configs)
                  properties:
                    names:
                      description: A list of DNS domain names to be queried.
                      items:
                        type: string
                      minItems: 1
                      type: array
                    port:
                      description: |-
                        The port number used if the query type is not SRV
                        Ignored for SRV records
                      type: integer
                    type:
                      enum:
                      - SRV
                      - A
                      - AAAA
                      - MX
                      type: string
                  required:
                  - names
                  type: object
                type: array
              ec2SDConfigs:
                description: EC2SDConfigs defines a list of EC2 service discovery
                  configurations.
                items:
                  description: |-
                    EC2SDConfig allow retrieving scrape targets from AWS EC2 instances.
                    The private IP address is used by default, but may be changed to the public IP address with relabeling.
                    The IAM credentials used must have the ec2:DescribeInstances permission to discover scrape targets.
                    See [here](https://docs.victoriametrics.com/sd_configs#ec2_sd_configs)
                  properties:
                    accessKey:
                      description: AccessKey is the AWS API key.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    filters:
                      description: |-
                        Filters can be used optionally to filter the instance list by other criteria.
                        Available filter criteria can be found here:
                        https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html
                        Filter API documentation: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html
                      items:
                        description: EC2Filter is the configuration for filtering
                          EC2 instances.
                        properties:
                          name:
                            type: string
                          values:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        - values
                        type: object
                      type: array
                    port:
                      description: |-
                        The port to scrape metrics from. If using the public IP address, this must
                        instead be specified in the relabeling rule.
                      type: integer
                    region:
                      description: The AWS region
                      type: string
                    roleARN:
                      description: AWS Role ARN, an alternative to using AWS API keys.
                      type: string
                    secretKey:
                      description: SecretKey is the AWS API secret.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                type: array
              fileSDConfigs:
                description: FileSDConfigs defines a list of file service discovery
                  configurations.
                items:
                  description: |-
                    FileSDConfig defines a file service discovery configuration.
                    See [here](https://docs.victoriametrics.com/sd_configs#file_sd_configs)
                  properties:
                    files:
                      description: List of files to be used for file discovery.
                      items:
                        type: string
                      minItems: 1
                      type: array
                  required:
                  - files
                  type: object
                type: array
              follow_redirects:
                description: FollowRedirects controls redirects for scraping.
                type: boolean
              gceSDConfigs:
                description: GCESDConfigs defines a list of GCE service discovery
                  configurations.
                items:
                  description: |-
                    GCESDConfig configures scrape targets from GCP GCE instances.
                    The private IP address is used by default, but may be changed to
                    the public IP address with relabeling.
                    See [here](https://docs.victoriametrics.com/sd_configs#gce_sd_configs)

                    The GCE service discovery will load the Google Cloud credentials
                    from the file specified by the GOOGLE_APPLICATION_CREDENTIALS environment variable.
                    See https://cloud.google.com/kubernetes-engine/docs/tutorials/authenticating-to-cloud-platform
                  properties:
                    filter:
                      description: |-
                        Filter can be used optionally to filter the instance list by other criteria
                        Syntax of this filter is described in the filter query parameter section:
                        https://cloud.google.com/compute/docs/reference/latest/instances/list
                      type: string
                    port:
                      description: |-
                        The port to scrape metrics from. If using the public IP address, this must
                        instead be specified in the relabeling rule.
                      type: integer
                    project:
                      description: The Google Cloud Project ID
                      minLength: 1
                      type: string
                    tagSeparator:
                      description: The tag separator is used to separate the tags
                        on concatenation
                      type: string
                    zone:
                      description: The zone of the scrape targets. If you need multiple
                        zones use multiple GCESDConfigs.
                      x-kubernetes-preserve-unknown-fields: true
                  required:
                  - project
                  - zone
                  type: object
                type: array
              honorLabels:
                description: HonorLabels chooses the metric's labels on collisions
                  with target labels.
                type: boolean
              honorTimestamps:
                description: HonorTimestamps controls whether vmagent respects the
                  timestamps present in scraped data.
                type: boolean
              httpSDConfigs:
                description: HTTPSDConfigs defines a list of HTTP service discovery
                  configurations.
                items:
                  description: |-
                    HTTPSDConfig defines a HTTP service discovery configuration.
                    See [here](https://docs.victoriametrics.com/sd_configs#http_sd_configs)
                  properties:
                    authorization:
                      description: Authorization header to use on every scrape request.
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    basicAuth:
                      description: BasicAuth information to use on every scrape request.
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    proxy_client_config:
                      description: |-
                        ProxyClientConfig configures proxy auth settings for scraping
                        See [feature description](https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy)
                      properties:
                        basic_auth:
                          description: BasicAuth allow an endpoint to authenticate
                            over basic authentication
                          properties:
                            password:
                              description: |-
                                Password defines reference for secret with password value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            password_file:
                              description: |-
                                PasswordFile defines path to password file at disk
                                must be pre-mounted
                              type: string
                            username:
                              description: |-
                                Username defines reference for secret with username value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        bearer_token:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        bearer_token_file:
                          type: string
                        tls_config:
                          description: TLSConfig specifies TLSConfig configuration
                            parameters.
                          properties:
                            ca:
                              description: Stuct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            caFile:
                              description: Path to the CA cert in the container to
                                use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            certFile:
                              description: Path to the client cert file in the container
                                for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the container
                                for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      type: object
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    tlsConfig:
                      description: TLS configuration to use on every scrape request
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    url:
                      description: URL from which the targets are fetched.
                      minLength: 1
                      pattern: ^http(s)?://.+$
                      type: string
                  required:
                  - url
                  type: object
                type: array
              interval:
                description: Interval at which metrics should be scraped
                type: string
              kubernetesSDConfigs:
                description: KubernetesSDConfigs defines a list of Kubernetes service
                  discovery configurations.
                items:
                  description: |-
                    KubernetesSDConfig allows retrieving scrape targets from Kubernetes' REST API.
                    See [here](https://docs.victoriametrics.com/sd_configs#kubernetes_sd_configs)
                  properties:
                    apiServer:
                      description: |-
                        The API server address consisting of a hostname or IP address followed
                        by an optional port number.
                        If left empty, assuming process is running inside
                        of the cluster. It will discover API servers automatically and use the pod's
                        CA certificate and bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.
                      type: string
                    attach_metadata:
                      description: AttachMetadata configures metadata attaching from
                        service discovery
                      properties:
                        node:
                          description: |-
                            Node instructs vmagent to add node specific metadata from service discovery
                            Valid for roles: pod, endpoints, endpointslice.
                          type: boolean
                      type: object
                    authorization:
                      description: Authorization header to use on every scrape request.
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    basicAuth:
                      description: BasicAuth information to use on every scrape request.
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    followRedirects:
                      description: Configure whether HTTP requests follow HTTP 3xx
                        redirects.
                      type: boolean
                    namespaces:
                      description: Optional namespace discovery. If omitted, discover
                        targets across all namespaces.
                      properties:
                        names:
                          description: |-
                            List of namespaces where to watch for resources.
                            If empty and `ownNamespace` isn't true, watch for resources in all namespaces.
                          items:
                            type: string
                          type: array
                        ownNamespace:
                          description: Includes the namespace in which the pod exists
                            to the list of watched namespaces.
                          type: boolean
                      type: object
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    proxy_client_config:
                      description: |-
                        ProxyClientConfig configures proxy auth settings for scraping
                        See [feature description](https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy)
                      properties:
                        basic_auth:
                          description: BasicAuth allow an endpoint to authenticate
                            over basic authentication
                          properties:
                            password:
                              description: |-
                                Password defines reference for secret with password value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            password_file:
                              description: |-
                                PasswordFile defines path to password file at disk
                                must be pre-mounted
                              type: string
                            username:
                              description: |-
                                Username defines reference for secret with username value
                                The secret needs to be in the same namespace as scrape object
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        bearer_token:
                          description: SecretKeySelector selects a key of a Secret.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        bearer_token_file:
                          type: string
                        tls_config:
                          description: TLSConfig specifies TLSConfig configuration
                            parameters.
                          properties:
                            ca:
                              description: Stuct containing the CA cert to use for
                                the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            caFile:
                              description: Path to the CA cert in the container to
                                use for the targets.
                              type: string
                            cert:
                              description: Struct containing the client cert file
                                for the targets.
                              properties:
                                configMap:
                                  description: ConfigMap containing data to use for
                                    the targets.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secret:
                                  description: Secret containing data to use for the
                                    targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            certFile:
                              description: Path to the client cert file in the container
                                for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: Path to the client key file in the container
                                for the targets.
                              type: string
                            keySecret:
                              description: Secret containing the client key file for
                                the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                          type: object
                      type: object
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    role:
                      description: Role of the Kubernetes entities that should be
                        discovered.
                      type: string
                    selectors:
                      description: Selector to select objects.
                      items:
                        description: K8SSelectorConfig is Kubernetes Selector Config
                        properties:
                          field:
                            type: string
                          label:
                            type: string
                          role:
                            type: string
                        required:
                        - role
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - role
                      x-kubernetes-list-type: map
                    tlsConfig:
                      description: TLS configuration to use on every scrape request
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                  required:
                  - role
                  type: object
                type: array
              max_scrape_size:
                description: MaxScrapeSize defines a maximum size of scraped data
                  for a job
                type: string
              metricRelabelConfigs:
                description: MetricRelabelConfigs to apply to samples after scrapping.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              oauth2:
                description: OAuth2 defines auth configuration
                properties:
                  client_id:
                    description: The secret or configmap containing the OAuth2 client
                      id
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  client_secret:
                    description: The secret containing the OAuth2 client secret
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  client_secret_file:
                    description: ClientSecretFile defines path for client secret file.
                    type: string
                  endpoint_params:
                    additionalProperties:
                      type: string
                    description: Parameters to append to the token URL
                    type: object
                  scopes:
                    description: OAuth2 scopes used for the token request
                    items:
                      type: string
                    type: array
                  token_url:
                    description: The URL to fetch the token from
                    minLength: 1
                    type: string
                required:
                - client_id
                - token_url
                type: object
              openstackSDConfigs:
                description: OpenStackSDConfigs defines a list of OpenStack service
                  discovery configurations.
                items:
                  description: |-
                    OpenStackSDConfig allow retrieving scrape targets from OpenStack Nova instances.
                    See [here](https://docs.victoriametrics.com/sd_configs#openstack_sd_configs)
                  properties:
                    allTenants:
                      description: |-
                        Whether the service discovery should list all instances for all projects.
                        It is only relevant for the 'instance' role and usually requires admin permissions.
                      type: boolean
                    applicationCredentialId:
                      description: ApplicationCredentialID
                      type: string
                    applicationCredentialName:
                      description: |-
                        The ApplicationCredentialID or ApplicationCredentialName fields are
                        required if using an application credential to authenticate. Some providers
                        allow you to create an application credential to authenticate rather than a
                        password.
                      type: string
                    applicationCredentialSecret:
                      description: |-
                        The applicationCredentialSecret field is required if using an application
                        credential to authenticate.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    availability:
                      description: Availability of the endpoint to connect to.
                      enum:
                      - Public
                      - public
                      - Admin
                      - admin
                      - Internal
                      - internal
                      type: string
                    domainID:
                      description: DomainID
                      type: string
                    domainName:
                      description: |-
                        At most one of domainId and domainName must be provided if using username
                        with Identity V3. Otherwise, either are optional.
                      type: string
                    identityEndpoint:
                      description: |-
                        IdentityEndpoint specifies the HTTP endpoint that is required to work with
                        the Identity API of the appropriate version.
                      type: string
                    password:
                      description: |-
                        Password for the Identity V2 and V3 APIs. Consult with your provider's
                        control panel to discover your account's preferred method of authentication.
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    port:
                      description: |-
                        The port to scrape metrics from. If using the public IP address, this must
                        instead be specified in the relabeling rule.
                      type: integer
                    projectID:
                      description: ' ProjectID'
                      type: string
                    projectName:
                      description: |-
                        The ProjectId and ProjectName fields are optional for the Identity V2 API.
                        Some providers allow you to specify a ProjectName instead of the ProjectId.
                        Some require both. Your provider's authentication policies will determine
                        how these fields influence authentication.
                      type: string
                    region:
                      description: The OpenStack Region.
                      minLength: 1
                      type: string
                    role:
                      description: The OpenStack role of entities that should be discovered.
                      enum:
                      - Instance
                      - instance
                      - Hypervisor
                      - hypervisor
                      type: string
                    tlsConfig:
                      description: TLS configuration to use on every scrape request
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    userid:
                      description: UserID
                      type: string
                    username:
                      description: |-
                        Username is required if using Identity V2 API. Consult with your provider's
                        control panel to discover your account's username.
                        In Identity V3, either userid or a combination of username
                        and domainId or domainName are needed
                      type: string
                  required:
                  - region
                  - role
                  type: object
                type: array
              params:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: Optional HTTP URL parameters
                type: object
              path:
                description: HTTP path to scrape for metrics.
                type: string
              proxyURL:
                description: ProxyURL eg http://proxyserver:2195 Directs scrapes to
                  proxy through this endpoint.
                type: string
              relabelConfigs:
                description: RelabelConfigs to apply to samples during service discovery.
                items:
                  description: |-
                    RelabelConfig allows dynamic rewriting of the label set
                    More info: https://docs.victoriametrics.com/#relabeling
                  properties:
                    action:
                      description: Action to perform based on regex matching. Default
                        is 'replace'
                      type: string
                    if:
                      description: 'If represents metricsQL match expression (or list
                        of expressions): ''{__name__=~"foo_.*"}'''
                      x-kubernetes-preserve-unknown-fields: true
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Labels is used together with Match for `action:
                        graphite`'
                      type: object
                    match:
                      description: 'Match is used together with Labels for `action:
                        graphite`'
                      type: string
                    modulus:
                      description: Modulus to take of the hash of the source label
                        values.
                      format: int64
                      type: integer
                    regex:
                      description: |-
                        Regular expression against which the extracted value is matched. Default is '(.*)'
                        victoriaMetrics supports multiline regex joined with |
                        https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                      x-kubernetes-preserve-unknown-fields: true
                    replacement:
                      description: |-
                        Replacement value against which a regex replace is performed if the
                        regular expression matches. Regex capture groups are available. Default is '$1'
                      type: string
                    separator:
                      description: Separator placed between concatenated source label
                        values. default is ';'.
                      type: string
                    source_labels:
                      description: |-
                        UnderScoreSourceLabels - additional form of source labels source_labels
                        for compatibility with original relabel config.
                        if set  both sourceLabels and source_labels, sourceLabels has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      items:
                        type: string
                      type: array
                    sourceLabels:
                      description: |-
                        The source labels select values from existing labels. Their content is concatenated
                        using the configured separator and matched against the configured regular expression
                        for the replace, keep, and drop actions.
                      items:
                        type: string
                      type: array
                    target_label:
                      description: |-
                        UnderScoreTargetLabel - additional form of target label - target_label
                        for compatibility with original relabel config.
                        if set  both targetLabel and target_label, targetLabel has priority.
                        for details https://github.com/VictoriaMetrics/operator/issues/131
                      type: string
                    targetLabel:
                      description: |-
                        Label to which the resulting value is written in a replace action.
                        It is mandatory for replace actions. Regex capture groups are available.
                      type: string
                  type: object
                type: array
              sampleLimit:
                description: SampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              scheme:
                description: HTTP scheme to use for scraping.
                enum:
                - http
                - https
                - HTTPS
                - HTTP
                type: string
              scrape_interval:
                description: |-
                  ScrapeInterval is the same as Interval and has priority over it.
                  one of scrape_interval or interval can be used
                type: string
              scrapeTimeout:
                description: Timeout after which the scrape is ended
                type: string
              seriesLimit:
                description: |-
                  SeriesLimit defines per-scrape limit on number of unique time series
                  a single target can expose during all the scrapes on the time window of 24h.
                format: int64
                type: integer
              staticConfigs:
                description: StaticConfigs defines a list of static targets with a
                  common label set.
                items:
                  description: |-
                    StaticConfig defines a static configuration.
                    See [here](https://docs.victoriametrics.com/sd_configs#static_configs)
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels assigned to all metrics scraped from the
                        targets.
                      type: object
                      x-kubernetes-map-type: atomic
                    targets:
                      description: List of targets for this static configuration.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              tlsConfig:
                description: TLSConfig configuration to use when scraping the endpoint
                properties:
                  ca:
                    description: Stuct containing the CA cert to use for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  caFile:
                    description: Path to the CA cert in the container to use for the
                      targets.
                    type: string
                  cert:
                    description: Struct containing the client cert file for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  certFile:
                    description: Path to the client cert file in the container for
                      the targets.
                    type: string
                  insecureSkipVerify:
                    description: Disable target certificate validation.
                    type: boolean
                  keyFile:
                    description: Path to the client key file in the container for
                      the targets.
                    type: string
                  keySecret:
                    description: Secret containing the client key file for the targets.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  serverName:
                    description: Used to verify the hostname for the targets.
                    type: string
                type: object
              vm_scrape_params:
                description: VMScrapeParams defines VictoriaMetrics specific scrape
                  parameters
                properties:
                  disable_compression:
                    description: DisableCompression
                    type: boolean
                  disable_keep_alive:
                    description: |-
                      disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                      By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                      could be re-used.
                      See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
                    type: boolean
                  headers:
                    description: |-
                      Headers allows sending custom headers to scrape targets
                      must be in of semicolon separated header with it's value
                      eg:
                      headerName: headerValue
                      vmagent supports since 1.79.0 version
                    items:
                      type: string
                    type: array
                  no_stale_markers:
                    type: boolean
                  proxy_client_config:
                    description: |-
                      ProxyClientConfig configures proxy auth settings for scraping
                      See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
                    properties:
                      basic_auth:
                        description: BasicAuth allow an endpoint to authenticate over
                          basic authentication
                        properties:
                          password:
                            description: |-
                              Password defines reference for secret with password value
                              The secret needs to be in the same namespace as scrape object
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          password_file:
                            description: |-
                              PasswordFile defines path to password file at disk
                              must be pre-mounted
                            type: string
                          username:
                            description: |-
                              Username defines reference for secret with username value
                              The secret needs to be in the same namespace as scrape object
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      bearer_token:
                        description: SecretKeySelector selects a key of a Secret.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      bearer_token_file:
                        type: string
                      tls_config:
                        description: TLSConfig specifies TLSConfig configuration parameters.
                        properties:
                          ca:
                            description: Stuct containing the CA cert to use for the
                              targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          caFile:
                            description: Path to the CA cert in the container to use
                              for the targets.
                            type: string
                          cert:
                            description: Struct containing the client cert file for
                              the targets.
                            properties:
                              configMap:
                                description: ConfigMap containing data to use for
                                  the targets.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              secret:
                                description: Secret containing data to use for the
                                  targets.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          certFile:
                            description: Path to the client cert file in the container
                              for the targets.
                            type: string
                          insecureSkipVerify:
                            description: Disable target certificate validation.
                            type: boolean
                          keyFile:
                            description: Path to the client key file in the container
                              for the targets.
                            type: string
                          keySecret:
                            description: Secret containing the client key file for
                              the targets.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                default: ""
                                description: |-
                                  Name of the referent.
                                  This field is effectively required, but due to backwards compatibility is
                                  allowed to be empty. Instances of this type with an empty value here are
                                  almost certainly wrong.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the Secret or its key
                                  must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          serverName:
                            description: Used to verify the hostname for the targets.
                            type: string
                        type: object
                    type: object
                  scrape_align_interval:
                    type: string
                  scrape_offset:
                    type: string
                  stream_parse:
                    type: boolean
                type: object
            type: object
          status:
            description: ScrapeObjectStatus defines the observed state of ScrapeObjects
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmservicescrapes.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMServiceScrape
    listKind: VMServiceScrapeList
    plural: vmservicescrapes
    singular: vmservicescrape
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          VMServiceScrape is scrape configuration for endpoints associated with
          kubernetes service,
          it generates scrape configuration for vmagent based on selectors.
          result config will scrape service endpoints
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMServiceScrapeSpec defines the desired state of VMServiceScrape
            properties:
              attach_metadata:
                description: AttachMetadata configures metadata attaching from service
                  discovery
                properties:
                  node:
                    description: |-
                      Node instructs vmagent to add node specific metadata from service discovery
                      Valid for roles: pod, endpoints, endpointslice.
                    type: boolean
                type: object
              discoveryRole:
                description: |-
                  DiscoveryRole - defines kubernetes_sd role for objects discovery.
                  by default, its endpoints.
                  can be changed to service or endpointslices.
                  note, that with service setting, you have to use port: "name"
                  and cannot use targetPort for endpoints.
                enum:
                - endpoints
                - service
                - endpointslices
                type: string
              endpoints:
                description: A list of endpoints allowed as part of this ServiceScrape.
                items:
                  description: Endpoint defines a scrapeable endpoint serving metrics.
                  properties:
                    attach_metadata:
                      description: AttachMetadata configures metadata attaching from
                        service discovery
                      properties:
                        node:
                          description: |-
                            Node instructs vmagent to add node specific metadata from service discovery
                            Valid for roles: pod, endpoints, endpointslice.
                          type: boolean
                      type: object
                    authorization:
                      description: Authorization with http header Authorization
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    bearerTokenFile:
                      description: File to read bearer token for scraping targets.
                      type: string
                    bearerTokenSecret:
                      description: |-
                        Secret to mount to read bearer token for scraping targets. The secret
                        needs to be in the same namespace as the scrape object and accessible by
                        the victoria-metrics operator.
                      nullable: true
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    follow_redirects:
                      description: FollowRedirects controls redirects for scraping.
                      type: boolean
                    honorLabels:
                      description: HonorLabels chooses the metric's labels on collisions
                        with target labels.
                      type: boolean
                    honorTimestamps:
                      description: HonorTimestamps controls whether vmagent respects
                        the timestamps present in scraped data.
                      type: boolean
                    interval:
                      description: Interval at which metrics should be scraped
                      type: string
                    max_scrape_size:
                      description: MaxScrapeSize defines a maximum size of scraped
                        data for a job
                      type: string
                    metricRelabelConfigs:
                      description: MetricRelabelConfigs to apply to samples after
                        scrapping.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Optional HTTP URL parameters
                      type: object
                    path:
                      description: HTTP path to scrape for metrics.
                      type: string
                    port:
                      description: Name of the port exposed at Service.
                      type: string
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    relabelConfigs:
                      description: RelabelConfigs to apply to samples during service
                        discovery.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    sampleLimit:
                      description: SampleLimit defines per-scrape limit on number
                        of scraped samples that will be accepted.
                      format: int64
                      type: integer
                    scheme:
                      description: HTTP scheme to use for scraping.
                      enum:
                      - http
                      - https
                      - HTTPS
                      - HTTP
                      type: string
                    scrape_interval:
                      description: |-
                        ScrapeInterval is the same as Interval and has priority over it.
                        one of scrape_interval or interval can be used
                      type: string
                    scrapeTimeout:
                      description: Timeout after which the scrape is ended
                      type: string
                    seriesLimit:
                      description: |-
                        SeriesLimit defines per-scrape limit on number of unique time series
                        a single target can expose during all the scrapes on the time window of 24h.
                      format: int64
                      type: integer
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        TargetPort
                        Name or number of the pod port this endpoint refers to. Mutually exclusive with port.
                      x-kubernetes-int-or-string: true
                    tlsConfig:
                      description: TLSConfig configuration to use when scraping the
                        endpoint
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    vm_scrape_params:
                      description: VMScrapeParams defines VictoriaMetrics specific
                        scrape parameters
                      properties:
                        disable_compression:
                          description: DisableCompression
                          type: boolean
                        disable_keep_alive:
                          description: |-
                            disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                            By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                            could be re-used.
                            See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
                          type: boolean
                        headers:
                          description: |-
                            Headers allows sending custom headers to scrape targets
                            must be in of semicolon separated header with it's value
                            eg:
                            headerName: headerValue
                            vmagent supports since 1.79.0 version
                          items:
                            type: string
                          type: array
                        no_stale_markers:
                          type: boolean
                        proxy_client_config:
                          description: |-
                            ProxyClientConfig configures proxy auth settings for scraping
                            See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
                          properties:
                            basic_auth:
                              description: BasicAuth allow an endpoint to authenticate
                                over basic authentication
                              properties:
                                password:
                                  description: |-
                                    Password defines reference for secret with password value
                                    The secret needs to be in the same namespace as scrape object
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                password_file:
                                  description: |-
                                    PasswordFile defines path to password file at disk
                                    must be pre-mounted
                                  type: string
                                username:
                                  description: |-
                                    Username defines reference for secret with username value
                                    The secret needs to be in the same namespace as scrape object
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            bearer_token:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            bearer_token_file:
                              type: string
                            tls_config:
                              description: TLSConfig specifies TLSConfig configuration
                                parameters.
                              properties:
                                ca:
                                  description: Stuct containing the CA cert to use
                                    for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use
                                        for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secret:
                                      description: Secret containing data to use for
                                        the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                caFile:
                                  description: Path to the CA cert in the container
                                    to use for the targets.
                                  type: string
                                cert:
                                  description: Struct containing the client cert file
                                    for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use
                                        for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secret:
                                      description: Secret containing data to use for
                                        the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                certFile:
                                  description: Path to the client cert file in the
                                    container for the targets.
                                  type: string
                                insecureSkipVerify:
                                  description: Disable target certificate validation.
                                  type: boolean
                                keyFile:
                                  description: Path to the client key file in the
                                    container for the targets.
                                  type: string
                                keySecret:
                                  description: Secret containing the client key file
                                    for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serverName:
                                  description: Used to verify the hostname for the
                                    targets.
                                  type: string
                              type: object
                          type: object
                        scrape_align_interval:
                          type: string
                        scrape_offset:
                          type: string
                        stream_parse:
                          type: boolean
                      type: object
                  type: object
                type: array
              jobLabel:
                description: The label to use to retrieve the job name from.
                type: string
              namespaceSelector:
                description: Selector to select which namespaces the Endpoints objects
                  are discovered from.
                properties:
                  any:
                    description: |-
                      Boolean describing whether all namespaces are selected in contrast to a
                      list restricting them.
                    type: boolean
                  matchNames:
                    description: List of namespace names.
                    items:
                      type: string
                    type: array
                type: object
              podTargetLabels:
                description: PodTargetLabels transfers labels on the Kubernetes Pod
                  onto the target.
                items:
                  type: string
                type: array
              sampleLimit:
                description: SampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              selector:
                description: Selector to select Endpoints objects by corresponding
                  Service labels.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
              seriesLimit:
                description: |-
                  SeriesLimit defines per-scrape limit on number of unique time series
                  a single target can expose during all the scrapes on the time window of 24h.
                format: int64
                type: integer
              targetLabels:
                description: TargetLabels transfers labels on the Kubernetes Service
                  onto the target.
                items:
                  type: string
                type: array
            required:
            - endpoints
            type: object
          status:
            description: ScrapeObjectStatus defines the observed state of ScrapeObjects
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmsingles.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMSingle
    listKind: VMSingleList
    plural: vmsingles
    singular: vmsingle
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Current status of single node update process
      jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMSingle  is fast, cost-effective and scalable time-series database.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMSingleSpec defines the desired state of VMSingle
            properties:
              affinity:
                description: Affinity If specified, the pod's scheduling constraints.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              configMaps:
                description: |-
                  ConfigMaps is a list of ConfigMaps in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/configs/CONFIGMAP_NAME folder
                items:
                  type: string
                type: array
              containers:
                description: |-
                  Containers property allows to inject additions sidecars or to patch existing containers.
                  It can be useful for proxies, backup, etc.
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              disableAutomountServiceAccountToken:
                description: |-
                  DisableAutomountServiceAccountToken whether to disable serviceAccount auto mount by Kubernetes (available from v0.54.0).
                  Operator will conditionally create volumes and volumeMounts for containers if it requires k8s API access.
                  For example, vmagent and vm-config-reloader requires k8s API access.
                  Operator creates volumes with name: "kube-api-access", which can be used as volumeMount for extraContainers if needed.
                  And also adds VolumeMounts at /var/run/secrets/kubernetes.io/serviceaccount.
                type: boolean
              disableSelfServiceScrape:
                description: |-
                  DisableSelfServiceScrape controls creation of VMServiceScrape by operator
                  for the application.
                  Has priority over `VM_DISABLESELFSERVICESCRAPECREATION` operator env variable
                type: boolean
              dnsConfig:
                description: |-
                  Specifies the DNS parameters of a pod.
                  Parameters specified here will be merged to the generated DNS
                  configuration based on DNSPolicy.
                items:
                  x-kubernetes-preserve-unknown-fields: true
                properties:
                  nameservers:
                    description: |-
                      A list of DNS name server IP addresses.
                      This will be appended to the base nameservers generated from DNSPolicy.
                      Duplicated nameservers will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  options:
                    description: |-
                      A list of DNS resolver options.
                      This will be merged with the base options generated from DNSPolicy.
                      Duplicated entries will be removed. Resolution options given in Options
                      will override those that appear in the base DNSPolicy.
                    items:
                      description: PodDNSConfigOption defines DNS resolver options
                        of a pod.
                      properties:
                        name:
                          description: |-
                            Name is this DNS resolver option's name.
                            Required.
                          type: string
                        value:
                          description: Value is this DNS resolver option's value.
                          type: string
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  searches:
                    description: |-
                      A list of DNS search domains for host-name lookup.
                      This will be appended to the base search paths generated from DNSPolicy.
                      Duplicated search paths will be removed.
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              dnsPolicy:
                description: DNSPolicy sets DNS policy for the pod
                type: string
              extraArgs:
                additionalProperties:
                  type: string
                description: |-
                  ExtraArgs that will be passed to the application container
                  for example remoteWrite.tmpDataPath: /tmp
                type: object
              extraEnvs:
                description: ExtraEnvs that will be passed to the application container
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              host_aliases:
                description: |-
                  HostAliasesUnderScore provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                  Has Priority over hostAliases field
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostAliases:
                description: |-
                  HostAliases provides mapping for ip and hostname,
                  that would be propagated to pod,
                  cannot be used with HostNetwork.
                items:
                  description: |-
                    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
                    pod's hosts file.
                  properties:
                    hostnames:
                      description: Hostnames for the above IP address.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: atomic
                    ip:
                      description: IP address of the host file entry.
                      type: string
                  required:
                  - ip
                  type: object
                type: array
              hostNetwork:
                description: HostNetwork controls whether the pod may use the node
                  network namespace
                type: boolean
              image:
                description: |-
                  Image - docker image settings
                  if no specified operator uses default version from operator config
                properties:
                  pullPolicy:
                    description: PullPolicy describes how to pull docker image
                    type: string
                  repository:
                    description: Repository contains name of docker image + it's repository
                      if needed
                    type: string
                  tag:
                    description: Tag contains desired docker image version
                    type: string
                type: object
              imagePullSecrets:
                description: |-
                  ImagePullSecrets An optional list of references to secrets in the same namespace
                  to use for pulling images from registries
                  see https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
                items:
                  description: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              initContainers:
                description: |-
                  InitContainers allows adding initContainers to the pod definition.
                  Any errors during the execution of an initContainer will lead to a restart of the Pod.
                  More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
                items:
                  description: A single application container that you want to run
                    within a pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              insertPorts:
                description: InsertPorts - additional listen ports for data ingestion.
                properties:
                  graphitePort:
                    description: GraphitePort listen port
                    type: string
                  influxPort:
                    description: InfluxPort listen port
                    type: string
                  openTSDBHTTPPort:
                    description: OpenTSDBHTTPPort for http connections.
                    type: string
                  openTSDBPort:
                    description: OpenTSDBPort for tcp and udp listen
                    type: string
                type: object
              license:
                description: |-
                  License allows to configure license key to be used for enterprise features.
                  Using license key is supported starting from VictoriaMetrics v1.94.0.
                  See [here](https://docs.victoriametrics.com/enterprise)
                properties:
                  forceOffline:
                    description: Enforce offline verification of the license key.
                    type: boolean
                  key:
                    description: |-
                      Enterprise license key. This flag is available only in [VictoriaMetrics enterprise](https://docs.victoriametrics.com/enterprise).
                      To request a trial license, [go to](https://victoriametrics.com/products/enterprise/trial)
                    type: string
                  keyRef:
                    description: KeyRef is reference to secret with license key for
                      enterprise features.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  reloadInterval:
                    description: Interval to be used for checking for license key
                      changes. Note that this is only applicable when using KeyRef.
                    type: string
                type: object
              livenessProbe:
                description: LivenessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              logFormat:
                description: LogFormat for VMSingle to be configured with.
                enum:
                - default
                - json
                type: string
              logLevel:
                description: LogLevel for victoria metrics single to be configured
                  with.
                enum:
                - INFO
                - WARN
                - ERROR
                - FATAL
                - PANIC
                type: string
              managedMetadata:
                description: |-
                  ManagedMetadata defines metadata that will be added to the all objects
                  created by operator for the given CustomResource
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                type: object
              minReadySeconds:
                description: |-
                  MinReadySeconds defines a minimum number of seconds to wait before starting update next pod
                  if previous in healthy state
                  Has no effect for VLogs and VMSingle
                format: int32
                type: integer
              nodeSelector:
                additionalProperties:
                  type: string
                description: NodeSelector Define which Nodes the Pods are scheduled
                  on.
                type: object
              paused:
                description: |-
                  Paused If set to true all actions on the underlying managed objects are not
                  going to be performed, except for delete actions.
                type: boolean
              podMetadata:
                description: PodMetadata configures Labels and Annotations which are
                  propagated to the VMSingle pods.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              port:
                description: Port listen address
                type: string
              priorityClassName:
                description: PriorityClassName class assigned to the Pods
                type: string
              readinessGates:
                description: ReadinessGates defines pod readiness gates
                items:
                  description: PodReadinessGate contains the reference to a pod condition
                  properties:
                    conditionType:
                      description: ConditionType refers to a condition in the pod's
                        condition list with matching type.
                      type: string
                  required:
                  - conditionType
                  type: object
                type: array
              readinessProbe:
                description: ReadinessProbe that will be added CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              removePvcAfterDelete:
                description: |-
                  RemovePvcAfterDelete - if true, controller adds ownership to pvc
                  and after VMSingle object deletion - pvc will be garbage collected
                  by controller manager
                type: boolean
              replicaCount:
                description: ReplicaCount is the expected size of the Application.
                format: int32
                type: integer
              resources:
                description: |-
                  Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                  if not defined default resources from operator config will be used
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
              retentionPeriod:
                description: |-
                  RetentionPeriod for the stored metrics
                  Note VictoriaMetrics has data/ and indexdb/ folders
                  metrics from data/ removed eventually as soon as partition leaves retention period
                  reverse index data at indexdb rotates once at the half of configured [retention period](https://docs.victoriametrics.com/Single-server-VictoriaMetrics/#retention)
                type: string
              revisionHistoryLimitCount:
                description: |-
                  The number of old ReplicaSets to retain to allow rollback in deployment or
                  maximum number of revisions that will be maintained in the Deployment revision history.
                  Has no effect at StatefulSets
                  Defaults to 10.
                format: int32
                type: integer
              runtimeClassName:
                description: |-
                  RuntimeClassName - defines runtime class for kubernetes pod.
                  https://kubernetes.io/docs/concepts/containers/runtime-class/
                type: string
              schedulerName:
                description: SchedulerName - defines kubernetes scheduler name
                type: string
              secrets:
                description: |-
                  Secrets is a list of Secrets in the same namespace as the Application
                  object, which shall be mounted into the Application container
                  at /etc/vm/secrets/SECRET_NAME folder
                items:
                  type: string
                type: array
              securityContext:
                description: |-
                  SecurityContext holds pod-level security attributes and common container settings.
                  This defaults to the default PodSecurityContext.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceAccountName:
                description: ServiceAccountName is the name of the ServiceAccount
                  to use to run the pods
                type: string
              serviceScrapeSpec:
                description: ServiceScrapeSpec that will be added to vmsingle VMServiceScrape
                  spec
                required:
                - endpoints
                type: object
                x-kubernetes-preserve-unknown-fields: true
              serviceSpec:
                description: ServiceSpec that will be added to vmsingle service spec
                properties:
                  metadata:
                    description: EmbeddedObjectMetadata defines objectMeta for additional
                      service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels Map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                        type: object
                      name:
                        description: |-
                          Name must be unique within a namespace. Is required when creating resources, although
                          some resources may allow a client to request the generation of an appropriate name
                          automatically. Name is primarily intended for creation idempotence and configuration
                          definition.
                          Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                        type: string
                    type: object
                  spec:
                    description: |-
                      ServiceSpec describes the attributes that a user creates on a service.
                      More info: https://kubernetes.io/docs/concepts/services-networking/service/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  useAsDefault:
                    description: |-
                      UseAsDefault applies changes from given service definition to the main object Service
                      Changing from headless service to clusterIP or loadbalancer may break cross-component communication
                    type: boolean
                required:
                - spec
                type: object
              startupProbe:
                description: StartupProbe that will be added to CRD pod
                type: object
                x-kubernetes-preserve-unknown-fields: true
              storage:
                description: |-
                  Storage is the definition of how storage will be used by the VMSingle
                  by default it`s empty dir
                  this option is ignored if storageDataPath is set
                properties:
                  accessModes:
                    description: |-
                      accessModes contains the desired access modes the volume should have.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  dataSource:
                    description: |-
                      dataSource field can be used to specify either:
                      * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                      * An existing PVC (PersistentVolumeClaim)
                      If the provisioner or an external controller can support the specified data source,
                      it will create a new volume based on the contents of the specified data source.
                      When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                      and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                      If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                    x-kubernetes-map-type: atomic
                  dataSourceRef:
                    description: |-
                      dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                      volume is desired. This may be any object from a non-empty API group (non
                      core object) or a PersistentVolumeClaim object.
                      When this field is specified, volume binding will only succeed if the type of
                      the specified object matches some installed volume populator or dynamic
                      provisioner.
                      This field will replace the functionality of the dataSource field and as such
                      if both fields are non-empty, they must have the same value. For backwards
                      compatibility, when namespace isn't specified in dataSourceRef,
                      both fields (dataSource and dataSourceRef) will be set to the same
                      value automatically if one of them is empty and the other is non-empty.
                      When namespace is specified in dataSourceRef,
                      dataSource isn't set to the same value and must be empty.
                      There are three important differences between dataSource and dataSourceRef:
                      * While dataSource only allows two specific types of objects, dataSourceRef
                        allows any non-core object, as well as PersistentVolumeClaim objects.
                      * While dataSource ignores disallowed values (dropping them), dataSourceRef
                        preserves all values, and generates an error if a disallowed value is
                        specified.
                      * While dataSource only allows local objects, dataSourceRef allows objects
                        in any namespaces.
                      (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                      (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                    properties:
                      apiGroup:
                        description: |-
                          APIGroup is the group for the resource being referenced.
                          If APIGroup is not specified, the specified Kind must be in the core API group.
                          For any other third-party types, APIGroup is required.
                        type: string
                      kind:
                        description: Kind is the type of resource being referenced
                        type: string
                      name:
                        description: Name is the name of resource being referenced
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of resource being referenced
                          Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                          (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  resources:
                    description: |-
                      resources represents the minimum resources the volume should have.
                      If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                      that are lower than previous value but must still be higher than capacity recorded in the
                      status field of the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                    properties:
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  selector:
                    description: selector is a label query over volumes to consider
                      for binding.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  storageClassName:
                    description: |-
                      storageClassName is the name of the StorageClass required by the claim.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                    type: string
                  volumeAttributesClassName:
                    description: |-
                      volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                      If specified, the CSI driver will create or update the volume with the attributes defined
                      in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                      it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                      will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                      If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                      will be set by the persistentvolume controller if it exists.
                      If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                      set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                      exists.
                      More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                      (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                    type: string
                  volumeMode:
                    description: |-
                      volumeMode defines what type of volume is required by the claim.
                      Value of Filesystem is implied when not included in claim spec.
                    type: string
                  volumeName:
                    description: volumeName is the binding reference to the PersistentVolume
                      backing this claim.
                    type: string
                type: object
              storageDataPath:
                description: |-
                  StorageDataPath disables spec.storage option and overrides arg for victoria-metrics binary --storageDataPath,
                  its users responsibility to mount proper device into given path.
                  It requires to provide spec.volumes and spec.volumeMounts with at least 1 value
                type: string
              storageMetadata:
                description: StorageMeta defines annotations and labels attached to
                  PVC for given vmsingle CR
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: |-
                      Annotations is an unstructured key value map stored with a resource that may be
                      set by external tools to store and retrieve arbitrary metadata. They are not
                      queryable and should be preserved when modifying objects.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      Labels Map of string keys and values that can be used to organize and categorize
                      (scope and select) objects. May match selectors of replication controllers
                      and services.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                    type: object
                  name:
                    description: |-
                      Name must be unique within a namespace. Is required when creating resources, although
                      some resources may allow a client to request the generation of an appropriate name
                      automatically. Name is primarily intended for creation idempotence and configuration
                      definition.
                      Cannot be updated.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                    type: string
                type: object
              streamAggrConfig:
                description: StreamAggrConfig defines stream aggregation configuration
                  for VMSingle
                properties:
                  configmap:
                    description: ConfigMap with stream aggregation rules
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the ConfigMap or its key must
                          be defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  dedupInterval:
                    description: Allows setting different de-duplication intervals
                      per each configured remote storage
                    type: string
                  dropInput:
                    description: Allow drop all the input samples after the aggregation
                    type: boolean
                  dropInputLabels:
                    description: labels to drop from samples for aggregator before
                      stream de-duplication and aggregation
                    items:
                      type: string
                    type: array
                  enableWindows:
                    description: EnableWindows enables aggregating data in separate
                      windows ( available from v0.54.0).
                    type: boolean
                  ignoreFirstIntervals:
                    description: IgnoreFirstIntervals instructs to ignore first interval
                    type: integer
                  ignoreOldSamples:
                    description: IgnoreOldSamples instructs to ignore samples with
                      old timestamps outside the current aggregation interval.
                    type: boolean
                  keepInput:
                    description: Allows writing both raw and aggregate data
                    type: boolean
                  rules:
                    description: Stream aggregation rules
                    items:
                      description: StreamAggrRule defines the rule in stream aggregation
                        config
                      properties:
                        by:
                          description: |-
                            By is an optional list of labels for grouping input series.

                            See also Without.

                            If neither By nor Without are set, then the Outputs are calculated
                            individually per each input time series.
                          items:
                            type: string
                          type: array
                        dedup_interval:
                          description: DedupInterval is an optional interval for deduplication.
                          type: string
                        drop_input_labels:
                          description: |-
                            DropInputLabels is an optional list with labels, which must be dropped before further processing of input samples.

                            Labels are dropped before de-duplication and aggregation.
                          items:
                            type: string
                          type: array
                        enable_windows:
                          description: EnableWindows enables aggregating data in separate
                            windows
                          type: boolean
                        flush_on_shutdown:
                          description: |-
                            FlushOnShutdown defines whether to flush the aggregation state on process termination
                            or config reload. Is `false` by default.
                            It is not recommended changing this setting, unless unfinished aggregations states
                            are preferred to missing data points.
                          type: boolean
                        ignore_first_intervals:
                          type: integer
                        ignore_old_samples:
                          description: IgnoreOldSamples instructs to ignore samples
                            with old timestamps outside the current aggregation interval.
                          type: boolean
                        input_relabel_configs:
                          description: |-
                            InputRelabelConfigs is an optional relabeling rules, which are applied on the input
                            before aggregation.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set
                              More info: https://docs.victoriametrics.com/#relabeling
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        interval:
                          description: Interval is the interval between aggregations.
                          type: string
                        keep_metric_names:
                          description: KeepMetricNames instructs to leave metric names
                            as is for the output time series without adding any suffix.
                          type: boolean
                        match:
                          description: |-
                            Match is a label selector (or list of label selectors) for filtering time series for the given selector.

                            If the match isn't set, then all the input time series are processed.
                          x-kubernetes-preserve-unknown-fields: true
                        no_align_flush_to_interval:
                          description: |-
                            NoAlignFlushToInterval disables aligning of flushes to multiples of Interval.
                            By default flushes are aligned to Interval.
                          type: boolean
                        output_relabel_configs:
                          description: |-
                            OutputRelabelConfigs is an optional relabeling rules, which are applied
                            on the aggregated output before being sent to remote storage.
                          items:
                            description: |-
                              RelabelConfig allows dynamic rewriting of the label set
                              More info: https://docs.victoriametrics.com/#relabeling
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              if:
                                description: 'If represents metricsQL match expression
                                  (or list of expressions): ''{__name__=~"foo_.*"}'''
                                x-kubernetes-preserve-unknown-fields: true
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Labels is used together with Match for
                                  `action: graphite`'
                                type: object
                              match:
                                description: 'Match is used together with Labels for
                                  `action: graphite`'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source
                                  label values.
                                format: int64
                                type: integer
                              regex:
                                description: |-
                                  Regular expression against which the extracted value is matched. Default is '(.*)'
                                  victoriaMetrics supports multiline regex joined with |
                                  https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                                x-kubernetes-preserve-unknown-fields: true
                              replacement:
                                description: |-
                                  Replacement value against which a regex replace is performed if the
                                  regular expression matches. Regex capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated
                                  source label values. default is ';'.
                                type: string
                              source_labels:
                                description: |-
                                  UnderScoreSourceLabels - additional form of source labels source_labels
                                  for compatibility with original relabel config.
                                  if set  both sourceLabels and source_labels, sourceLabels has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                items:
                                  type: string
                                type: array
                              sourceLabels:
                                description: |-
                                  The source labels select values from existing labels. Their content is concatenated
                                  using the configured separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              target_label:
                                description: |-
                                  UnderScoreTargetLabel - additional form of target label - target_label
                                  for compatibility with original relabel config.
                                  if set  both targetLabel and target_label, targetLabel has priority.
                                  for details https://github.com/VictoriaMetrics/operator/issues/131
                                type: string
                              targetLabel:
                                description: |-
                                  Label to which the resulting value is written in a replace action.
                                  It is mandatory for replace actions. Regex capture groups are available.
                                type: string
                            type: object
                          type: array
                        outputs:
                          description: |-
                            Outputs is a list of output aggregate functions to produce.

                            The following names are allowed:

                            - total - aggregates input counters
                            - increase - counts the increase over input counters
                            - count_series - counts the input series
                            - count_samples - counts the input samples
                            - sum_samples - sums the input samples
                            - last - the last biggest sample value
                            - min - the minimum sample value
                            - max - the maximum sample value
                            - avg - the average value across all the samples
                            - stddev - standard deviation across all the samples
                            - stdvar - standard variance across all the samples
                            - histogram_bucket - creates VictoriaMetrics histogram for input samples
                            - quantiles(phi1, ..., phiN) - quantiles' estimation for phi in the range [0..1]

                            The output time series will have the following names:

                              input_name:aggr_<interval>_<output>
                          items:
                            type: string
                          type: array
                        staleness_interval:
                          description: |-
                            Staleness interval is interval after which the series state will be reset if no samples have been sent during it.
                            The parameter is only relevant for outputs: total, total_prometheus, increase, increase_prometheus and histogram_bucket.
                          type: string
                        without:
                          description: |-
                            Without is an optional list of labels, which must be excluded when grouping input series.

                            See also By.

                            If neither By nor Without are set, then the Outputs are calculated
                            individually per each input time series.
                          items:
                            type: string
                          type: array
                      required:
                      - interval
                      - outputs
                      type: object
                    type: array
                type: object
              terminationGracePeriodSeconds:
                description: TerminationGracePeriodSeconds period for container graceful
                  termination
                format: int64
                type: integer
              tolerations:
                description: Tolerations If specified, the pod's tolerations.
                items:
                  description: |-
                    The pod this Toleration is attached to tolerates any taint that matches
                    the triple <key,value,effect> using the matching operator <operator>.
                  properties:
                    effect:
                      description: |-
                        Effect indicates the taint effect to match. Empty means match all taint effects.
                        When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: |-
                        Key is the taint key that the toleration applies to. Empty means match all taint keys.
                        If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                      type: string
                    operator:
                      description: |-
                        Operator represents a key's relationship to the value.
                        Valid operators are Exists and Equal. Defaults to Equal.
                        Exists is equivalent to wildcard for value, so that a pod can
                        tolerate all taints of a particular category.
                      type: string
                    tolerationSeconds:
                      description: |-
                        TolerationSeconds represents the period of time the toleration (which must be
                        of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                        it is not set, which means tolerate the taint forever (do not evict). Zero and
                        negative values will be treated as 0 (evict immediately) by the system.
                      format: int64
                      type: integer
                    value:
                      description: |-
                        Value is the taint value the toleration matches to.
                        If the operator is Exists, the value should be empty, otherwise just a regular string.
                      type: string
                  type: object
                type: array
              topologySpreadConstraints:
                description: |-
                  TopologySpreadConstraints embedded kubernetes pod configuration option,
                  controls how pods are spread across your cluster among failure-domains
                  such as regions, zones, nodes, and other user-defined topology domains
                  https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
                items:
                  description: TopologySpreadConstraint specifies how to spread matching
                    pods among the given topology.
                  required:
                  - maxSkew
                  - topologyKey
                  - whenUnsatisfiable
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
              useDefaultResources:
                description: |-
                  UseDefaultResources controls resource settings
                  By default, operator sets built-in resource requirements
                type: boolean
              useStrictSecurity:
                description: |-
                  UseStrictSecurity enables strict security mode for component
                  it restricts disk writes access
                  uses non-root user out of the box
                  drops not needed security permissions
                type: boolean
              vmBackup:
                description: VMBackup configuration for backup
                properties:
                  acceptEULA:
                    description: |-
                      AcceptEULA accepts enterprise feature usage, must be set to true.
                      otherwise backupmanager cannot be added to single/cluster version.
                      https://victoriametrics.com/legal/esa/
                    type: boolean
                  concurrency:
                    description: Defines number of concurrent workers. Higher concurrency
                      may reduce backup duration (default 10)
                    format: int32
                    type: integer
                  credentialsSecret:
                    description: |-
                      CredentialsSecret is secret in the same namespace for access to remote storage
                      The secret is mounted into /etc/vm/creds.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  customS3Endpoint:
                    description: Custom S3 endpoint for use with S3-compatible storages
                      (e.g. MinIO). S3 is used if not set
                    type: string
                  destination:
                    description: Defines destination for backup
                    type: string
                  destinationDisableSuffixAdd:
                    description: |-
                      DestinationDisableSuffixAdd - disables suffix adding for cluster version backups
                      each vmstorage backup must have unique backup folder
                      so operator adds POD_NAME as suffix for backup destination folder.
                    type: boolean
                  disableDaily:
                    description: Defines if daily backups disabled (default false)
                    type: boolean
                  disableHourly:
                    description: Defines if hourly backups disabled (default false)
                    type: boolean
                  disableMonthly:
                    description: Defines if monthly backups disabled (default false)
                    type: boolean
                  disableWeekly:
                    description: Defines if weekly backups disabled (default false)
                    type: boolean
                  extraArgs:
                    additionalProperties:
                      type: string
                    description: extra args like maxBytesPerSecond default 0
                    type: object
                  extraEnvs:
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: |-
                            Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in the container and
                            any service environment variables. If a variable cannot be resolved,
                            the reference in the input string will be unchanged. Double $$ are reduced
                            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless of whether the variable
                            exists or not.
                            Defaults to "".
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            fieldRef:
                              description: |-
                                Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                              required:
                              - fieldPath
                              type: object
                              x-kubernetes-map-type: atomic
                            resourceFieldRef:
                              description: |-
                                Selects a resource of the container: only resources limits and requests
                                (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                              required:
                              - resource
                              type: object
                              x-kubernetes-map-type: atomic
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      required:
                      - name
                      type: object
                    type: array
                  image:
                    description: Image - docker image settings for VMBackuper
                    properties:
                      pullPolicy:
                        description: PullPolicy describes how to pull docker image
                        type: string
                      repository:
                        description: Repository contains name of docker image + it's
                          repository if needed
                        type: string
                      tag:
                        description: Tag contains desired docker image version
                        type: string
                    type: object
                  logFormat:
                    description: |-
                      LogFormat for VMBackup to be configured with.
                      default or json
                    enum:
                    - default
                    - json
                    type: string
                  logLevel:
                    description: LogLevel for VMBackup to be configured with.
                    enum:
                    - INFO
                    - WARN
                    - ERROR
                    - FATAL
                    - PANIC
                    type: string
                  port:
                    description: Port for health check connections
                    type: string
                  resources:
                    description: |-
                      Resources container resource request and limits, https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                      if not defined default resources from operator config will be used
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                            request:
                              description: |-
                                Request is the name chosen for a request in the referenced claim.
                                If empty, everything from the claim is made available, otherwise
                                only the result of this request.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  restore:
                    description: |-
                      Restore Allows to enable restore options for pod
                      Read [more](https://docs.victoriametrics.com/vmbackupmanager#restore-commands)
                    properties:
                      onStart:
                        description: OnStart defines configuration for restore on
                          pod start
                        properties:
                          enabled:
                            description: Enabled defines if restore on start enabled
                            type: boolean
                        type: object
                    type: object
                  snapshotCreateURL:
                    description: SnapshotCreateURL overwrites url for snapshot create
                    type: string
                  snapshotDeleteURL:
                    description: SnapShotDeleteURL overwrites url for snapshot delete
                    type: string
                  volumeMounts:
                    description: |-
                      VolumeMounts allows configuration of additional VolumeMounts on the output Deployment definition.
                      VolumeMounts specified will be appended to other VolumeMounts in the vmbackupmanager container,
                      that are generated as a result of StorageSpec objects.
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      properties:
                        mountPath:
                          description: |-
                            Path within the container at which the volume should be mounted.  Must
                            not contain ':'.
                          type: string
                        mountPropagation:
                          description: |-
                            mountPropagation determines how mounts are propagated from the host
                            to container and the other way around.
                            When not set, MountPropagationNone is used.
                            This field is beta in 1.10.
                            When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                            (which defaults to None).
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: |-
                            Mounted read-only if true, read-write otherwise (false or unspecified).
                            Defaults to false.
                          type: boolean
                        recursiveReadOnly:
                          description: |-
                            RecursiveReadOnly specifies whether read-only mounts should be handled
                            recursively.

                            If ReadOnly is false, this field has no meaning and must be unspecified.

                            If ReadOnly is true, and this field is set to Disabled, the mount is not made
                            recursively read-only.  If this field is set to IfPossible, the mount is made
                            recursively read-only, if it is supported by the container runtime.  If this
                            field is set to Enabled, the mount is made recursively read-only if it is
                            supported by the container runtime, otherwise the pod will not be started and
                            an error will be generated to indicate the reason.

                            If this field is set to IfPossible or Enabled, MountPropagation must be set to
                            None (or be unspecified, which defaults to None).

                            If this field is not specified, it is treated as an equivalent of Disabled.
                          type: string
                        subPath:
                          description: |-
                            Path within the volume from which the container's volume should be mounted.
                            Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: |-
                            Expanded path within the volume from which the container's volume should be mounted.
                            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                            Defaults to "" (volume's root).
                            SubPathExpr and SubPath are mutually exclusive.
                          type: string
                      required:
                      - mountPath
                      - name
                      type: object
                    type: array
                type: object
              volumeMounts:
                description: |-
                  VolumeMounts allows configuration of additional VolumeMounts on the output Deployment/StatefulSet definition.
                  VolumeMounts specified will be appended to other VolumeMounts in the Application container
                items:
                  description: VolumeMount describes a mounting of a Volume within
                    a container.
                  properties:
                    mountPath:
                      description: |-
                        Path within the container at which the volume should be mounted.  Must
                        not contain ':'.
                      type: string
                    mountPropagation:
                      description: |-
                        mountPropagation determines how mounts are propagated from the host
                        to container and the other way around.
                        When not set, MountPropagationNone is used.
                        This field is beta in 1.10.
                        When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
                        (which defaults to None).
                      type: string
                    name:
                      description: This must match the Name of a Volume.
                      type: string
                    readOnly:
                      description: |-
                        Mounted read-only if true, read-write otherwise (false or unspecified).
                        Defaults to false.
                      type: boolean
                    recursiveReadOnly:
                      description: |-
                        RecursiveReadOnly specifies whether read-only mounts should be handled
                        recursively.

                        If ReadOnly is false, this field has no meaning and must be unspecified.

                        If ReadOnly is true, and this field is set to Disabled, the mount is not made
                        recursively read-only.  If this field is set to IfPossible, the mount is made
                        recursively read-only, if it is supported by the container runtime.  If this
                        field is set to Enabled, the mount is made recursively read-only if it is
                        supported by the container runtime, otherwise the pod will not be started and
                        an error will be generated to indicate the reason.

                        If this field is set to IfPossible or Enabled, MountPropagation must be set to
                        None (or be unspecified, which defaults to None).

                        If this field is not specified, it is treated as an equivalent of Disabled.
                      type: string
                    subPath:
                      description: |-
                        Path within the volume from which the container's volume should be mounted.
                        Defaults to "" (volume's root).
                      type: string
                    subPathExpr:
                      description: |-
                        Expanded path within the volume from which the container's volume should be mounted.
                        Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                        Defaults to "" (volume's root).
                        SubPathExpr and SubPath are mutually exclusive.
                      type: string
                  required:
                  - mountPath
                  - name
                  type: object
                type: array
              volumes:
                description: |-
                  Volumes allows configuration of additional volumes on the output Deployment/StatefulSet definition.
                  Volumes specified will be appended to other volumes that are generated.
                  / +optional
                items:
                  description: Volume represents a named volume in a pod that may
                    be accessed by any container in the pod.
                  required:
                  - name
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type: array
            required:
            - retentionPeriod
            type: object
          status:
            description: VMSingleStatus defines the observed state of VMSingle
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              singleStatus:
                description: LegacyStatus is deprecated and will be removed at v0.52.0
                  version
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmstaticscrapes.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMStaticScrape
    listKind: VMStaticScrapeList
    plural: vmstaticscrapes
    singular: vmstaticscrape
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMStaticScrape  defines static targets configuration for scraping.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMStaticScrapeSpec defines the desired state of VMStaticScrape.
            properties:
              jobName:
                description: JobName name of job.
                type: string
              sampleLimit:
                description: SampleLimit defines per-scrape limit on number of scraped
                  samples that will be accepted.
                format: int64
                type: integer
              seriesLimit:
                description: |-
                  SeriesLimit defines per-scrape limit on number of unique time series
                  a single target can expose during all the scrapes on the time window of 24h.
                format: int64
                type: integer
              targetEndpoints:
                description: A list of target endpoints to scrape metrics from.
                items:
                  description: TargetEndpoint defines single static target endpoint.
                  properties:
                    authorization:
                      description: Authorization with http header Authorization
                      properties:
                        credentials:
                          description: Reference to the secret with value for authorization
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        credentialsFile:
                          description: File with value for authorization
                          type: string
                        type:
                          description: Type of authorization, default to bearer
                          type: string
                      type: object
                    basicAuth:
                      description: BasicAuth allow an endpoint to authenticate over
                        basic authentication
                      properties:
                        password:
                          description: |-
                            Password defines reference for secret with password value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        password_file:
                          description: |-
                            PasswordFile defines path to password file at disk
                            must be pre-mounted
                          type: string
                        username:
                          description: |-
                            Username defines reference for secret with username value
                            The secret needs to be in the same namespace as scrape object
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    bearerTokenFile:
                      description: File to read bearer token for scraping targets.
                      type: string
                    bearerTokenSecret:
                      description: |-
                        Secret to mount to read bearer token for scraping targets. The secret
                        needs to be in the same namespace as the scrape object and accessible by
                        the victoria-metrics operator.
                      nullable: true
                      properties:
                        key:
                          description: The key of the secret to select from.  Must
                            be a valid secret key.
                          type: string
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        optional:
                          description: Specify whether the Secret or its key must
                            be defined
                          type: boolean
                      required:
                      - key
                      type: object
                      x-kubernetes-map-type: atomic
                    follow_redirects:
                      description: FollowRedirects controls redirects for scraping.
                      type: boolean
                    honorLabels:
                      description: HonorLabels chooses the metric's labels on collisions
                        with target labels.
                      type: boolean
                    honorTimestamps:
                      description: HonorTimestamps controls whether vmagent respects
                        the timestamps present in scraped data.
                      type: boolean
                    interval:
                      description: Interval at which metrics should be scraped
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels static labels for targets.
                      type: object
                    max_scrape_size:
                      description: MaxScrapeSize defines a maximum size of scraped
                        data for a job
                      type: string
                    metricRelabelConfigs:
                      description: MetricRelabelConfigs to apply to samples after
                        scrapping.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    oauth2:
                      description: OAuth2 defines auth configuration
                      properties:
                        client_id:
                          description: The secret or configmap containing the OAuth2
                            client id
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        client_secret:
                          description: The secret containing the OAuth2 client secret
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        client_secret_file:
                          description: ClientSecretFile defines path for client secret
                            file.
                          type: string
                        endpoint_params:
                          additionalProperties:
                            type: string
                          description: Parameters to append to the token URL
                          type: object
                        scopes:
                          description: OAuth2 scopes used for the token request
                          items:
                            type: string
                          type: array
                        token_url:
                          description: The URL to fetch the token from
                          minLength: 1
                          type: string
                      required:
                      - client_id
                      - token_url
                      type: object
                    params:
                      additionalProperties:
                        items:
                          type: string
                        type: array
                      description: Optional HTTP URL parameters
                      type: object
                    path:
                      description: HTTP path to scrape for metrics.
                      type: string
                    proxyURL:
                      description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                        to proxy through this endpoint.
                      type: string
                    relabelConfigs:
                      description: RelabelConfigs to apply to samples during service
                        discovery.
                      items:
                        description: |-
                          RelabelConfig allows dynamic rewriting of the label set
                          More info: https://docs.victoriametrics.com/#relabeling
                        properties:
                          action:
                            description: Action to perform based on regex matching.
                              Default is 'replace'
                            type: string
                          if:
                            description: 'If represents metricsQL match expression
                              (or list of expressions): ''{__name__=~"foo_.*"}'''
                            x-kubernetes-preserve-unknown-fields: true
                          labels:
                            additionalProperties:
                              type: string
                            description: 'Labels is used together with Match for `action:
                              graphite`'
                            type: object
                          match:
                            description: 'Match is used together with Labels for `action:
                              graphite`'
                            type: string
                          modulus:
                            description: Modulus to take of the hash of the source
                              label values.
                            format: int64
                            type: integer
                          regex:
                            description: |-
                              Regular expression against which the extracted value is matched. Default is '(.*)'
                              victoriaMetrics supports multiline regex joined with |
                              https://docs.victoriametrics.com/vmagent/#relabeling-enhancements
                            x-kubernetes-preserve-unknown-fields: true
                          replacement:
                            description: |-
                              Replacement value against which a regex replace is performed if the
                              regular expression matches. Regex capture groups are available. Default is '$1'
                            type: string
                          separator:
                            description: Separator placed between concatenated source
                              label values. default is ';'.
                            type: string
                          source_labels:
                            description: |-
                              UnderScoreSourceLabels - additional form of source labels source_labels
                              for compatibility with original relabel config.
                              if set  both sourceLabels and source_labels, sourceLabels has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            items:
                              type: string
                            type: array
                          sourceLabels:
                            description: |-
                              The source labels select values from existing labels. Their content is concatenated
                              using the configured separator and matched against the configured regular expression
                              for the replace, keep, and drop actions.
                            items:
                              type: string
                            type: array
                          target_label:
                            description: |-
                              UnderScoreTargetLabel - additional form of target label - target_label
                              for compatibility with original relabel config.
                              if set  both targetLabel and target_label, targetLabel has priority.
                              for details https://github.com/VictoriaMetrics/operator/issues/131
                            type: string
                          targetLabel:
                            description: |-
                              Label to which the resulting value is written in a replace action.
                              It is mandatory for replace actions. Regex capture groups are available.
                            type: string
                        type: object
                      type: array
                    sampleLimit:
                      description: SampleLimit defines per-scrape limit on number
                        of scraped samples that will be accepted.
                      format: int64
                      type: integer
                    scheme:
                      description: HTTP scheme to use for scraping.
                      enum:
                      - http
                      - https
                      - HTTPS
                      - HTTP
                      type: string
                    scrape_interval:
                      description: |-
                        ScrapeInterval is the same as Interval and has priority over it.
                        one of scrape_interval or interval can be used
                      type: string
                    scrapeTimeout:
                      description: Timeout after which the scrape is ended
                      type: string
                    seriesLimit:
                      description: |-
                        SeriesLimit defines per-scrape limit on number of unique time series
                        a single target can expose during all the scrapes on the time window of 24h.
                      format: int64
                      type: integer
                    targets:
                      description: Targets static targets addresses in form of ["192.122.55.55:9100","some-name:9100"].
                      items:
                        type: string
                      minItems: 1
                      type: array
                    tlsConfig:
                      description: TLSConfig configuration to use when scraping the
                        endpoint
                      properties:
                        ca:
                          description: Stuct containing the CA cert to use for the
                            targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        caFile:
                          description: Path to the CA cert in the container to use
                            for the targets.
                          type: string
                        cert:
                          description: Struct containing the client cert file for
                            the targets.
                          properties:
                            configMap:
                              description: ConfigMap containing data to use for the
                                targets.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            secret:
                              description: Secret containing data to use for the targets.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        certFile:
                          description: Path to the client cert file in the container
                            for the targets.
                          type: string
                        insecureSkipVerify:
                          description: Disable target certificate validation.
                          type: boolean
                        keyFile:
                          description: Path to the client key file in the container
                            for the targets.
                          type: string
                        keySecret:
                          description: Secret containing the client key file for the
                            targets.
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        serverName:
                          description: Used to verify the hostname for the targets.
                          type: string
                      type: object
                    vm_scrape_params:
                      description: VMScrapeParams defines VictoriaMetrics specific
                        scrape parameters
                      properties:
                        disable_compression:
                          description: DisableCompression
                          type: boolean
                        disable_keep_alive:
                          description: |-
                            disable_keepalive allows disabling HTTP keep-alive when scraping targets.
                            By default, HTTP keep-alive is enabled, so TCP connections to scrape targets
                            could be re-used.
                            See https://docs.victoriametrics.com/vmagent#scrape_config-enhancements
                          type: boolean
                        headers:
                          description: |-
                            Headers allows sending custom headers to scrape targets
                            must be in of semicolon separated header with it's value
                            eg:
                            headerName: headerValue
                            vmagent supports since 1.79.0 version
                          items:
                            type: string
                          type: array
                        no_stale_markers:
                          type: boolean
                        proxy_client_config:
                          description: |-
                            ProxyClientConfig configures proxy auth settings for scraping
                            See feature description https://docs.victoriametrics.com/vmagent#scraping-targets-via-a-proxy
                          properties:
                            basic_auth:
                              description: BasicAuth allow an endpoint to authenticate
                                over basic authentication
                              properties:
                                password:
                                  description: |-
                                    Password defines reference for secret with password value
                                    The secret needs to be in the same namespace as scrape object
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                password_file:
                                  description: |-
                                    PasswordFile defines path to password file at disk
                                    must be pre-mounted
                                  type: string
                                username:
                                  description: |-
                                    Username defines reference for secret with username value
                                    The secret needs to be in the same namespace as scrape object
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                            bearer_token:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            bearer_token_file:
                              type: string
                            tls_config:
                              description: TLSConfig specifies TLSConfig configuration
                                parameters.
                              properties:
                                ca:
                                  description: Stuct containing the CA cert to use
                                    for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use
                                        for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secret:
                                      description: Secret containing data to use for
                                        the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                caFile:
                                  description: Path to the CA cert in the container
                                    to use for the targets.
                                  type: string
                                cert:
                                  description: Struct containing the client cert file
                                    for the targets.
                                  properties:
                                    configMap:
                                      description: ConfigMap containing data to use
                                        for the targets.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    secret:
                                      description: Secret containing data to use for
                                        the targets.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                certFile:
                                  description: Path to the client cert file in the
                                    container for the targets.
                                  type: string
                                insecureSkipVerify:
                                  description: Disable target certificate validation.
                                  type: boolean
                                keyFile:
                                  description: Path to the client key file in the
                                    container for the targets.
                                  type: string
                                keySecret:
                                  description: Secret containing the client key file
                                    for the targets.
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      default: ""
                                      description: |-
                                        Name of the referent.
                                        This field is effectively required, but due to backwards compatibility is
                                        allowed to be empty. Instances of this type with an empty value here are
                                        almost certainly wrong.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                serverName:
                                  description: Used to verify the hostname for the
                                    targets.
                                  type: string
                              type: object
                          type: object
                        scrape_align_interval:
                          type: string
                        scrape_offset:
                          type: string
                        stream_parse:
                          type: boolean
                      type: object
                  required:
                  - targets
                  type: object
                type: array
            required:
            - targetEndpoints
            type: object
          status:
            description: ScrapeObjectStatus defines the observed state of ScrapeObjects
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: vmusers.operator.victoriametrics.com
spec:
  group: operator.victoriametrics.com
  names:
    kind: VMUser
    listKind: VMUserList
    plural: vmusers
    singular: vmuser
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.updateStatus
      name: Status
      type: string
    - jsonPath: .status.reason
      name: Sync Error
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: VMUser is the Schema for the vmusers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: VMUserSpec defines the desired state of VMUser
            properties:
              bearerToken:
                description: BearerToken Authorization header value for accessing
                  protected endpoint.
                type: string
              default_url:
                description: |-
                  DefaultURLs backend url for non-matching paths filter
                  usually used for default backend with error message
                items:
                  type: string
                type: array
              disable_secret_creation:
                description: DisableSecretCreation skips related secret creation for
                  vmuser
                type: boolean
              discover_backend_ips:
                description: DiscoverBackendIPs instructs discovering URLPrefix backend
                  IPs via DNS.
                type: boolean
              drop_src_path_prefix_parts:
                description: |-
                  DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                  See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
                type: integer
              dump_request_on_errors:
                description: |-
                  DumpRequestOnErrors instructs vmauth to return detailed request params to the client
                  if routing rules don't allow to forward request to the backends.
                  Useful for debugging `src_hosts` and `src_headers` based routing rules

                  available since v1.107.0 vmauth version
                type: boolean
              generatePassword:
                description: |-
                  GeneratePassword instructs operator to generate password for user
                  if spec.password if empty.
                type: boolean
              headers:
                description: |-
                  Headers represent additional http headers, that vmauth uses
                  in form of ["header_key: header_value"]
                  multiple values for header key:
                  ["header_key: value1,value2"]
                  it's available since 1.68.0 version of vmauth
                items:
                  type: string
                type: array
              ip_filters:
                description: |-
                  IPFilters defines per target src ip filters
                  supported only with enterprise version of [vmauth](https://docs.victoriametrics.com/vmauth/#ip-filters)
                properties:
                  allow_list:
                    items:
                      type: string
                    type: array
                  deny_list:
                    items:
                      type: string
                    type: array
                type: object
              load_balancing_policy:
                description: |-
                  LoadBalancingPolicy defines load balancing policy to use for backend urls.
                  Supported policies: least_loaded, first_available.
                  See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
                enum:
                - least_loaded
                - first_available
                type: string
              max_concurrent_requests:
                description: |-
                  MaxConcurrentRequests defines max concurrent requests per user
                  300 is default value for vmauth
                type: integer
              metric_labels:
                additionalProperties:
                  type: string
                description: MetricLabels - additional labels for metrics exported
                  by vmauth for given user.
                type: object
              name:
                description: Name of the VMUser object.
                type: string
              password:
                description: Password basic auth password for accessing protected
                  endpoint.
                type: string
              passwordRef:
                description: PasswordRef allows fetching password from user-create
                  secret by its name and key.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              response_headers:
                description: |-
                  ResponseHeaders represent additional http headers, that vmauth adds for request response
                  in form of ["header_key: header_value"]
                  multiple values for header key:
                  ["header_key: value1,value2"]
                  it's available since 1.93.0 version of vmauth
                items:
                  type: string
                type: array
              retry_status_codes:
                description: |-
                  RetryStatusCodes defines http status codes in numeric format for request retries
                  e.g. [429,503]
                items:
                  type: integer
                type: array
              targetRefs:
                description: TargetRefs - reference to endpoints, which user may access.
                items:
                  description: |-
                    TargetRef describes target for user traffic forwarding.
                    one of target types can be chosen:
                    crd or static per targetRef.
                    user can define multiple targetRefs with different ref Types.
                  properties:
                    crd:
                      description: |-
                        CRD describes exist operator's CRD object,
                        operator generates access url based on CRD params.
                      properties:
                        kind:
                          description: |-
                            Kind one of:
                            VMAgent,VMAlert, VMSingle, VMCluster/vmselect, VMCluster/vmstorage,VMCluster/vminsert  or VMAlertManager
                          enum:
                          - VMAgent
                          - VMAlert
                          - VMSingle
                          - VLogs
                          - VMAlertManager
                          - VMAlertmanager
                          - VMCluster/vmselect
                          - VMCluster/vmstorage
                          - VMCluster/vminsert
                          type: string
                        name:
                          description: Name target CRD object name
                          type: string
                        namespace:
                          description: Namespace target CRD object namespace.
                          type: string
                      required:
                      - kind
                      - name
                      - namespace
                      type: object
                    discover_backend_ips:
                      description: DiscoverBackendIPs instructs discovering URLPrefix
                        backend IPs via DNS.
                      type: boolean
                    drop_src_path_prefix_parts:
                      description: |-
                        DropSrcPathPrefixParts is the number of `/`-delimited request path prefix parts to drop before proxying the request to backend.
                        See [here](https://docs.victoriametrics.com/vmauth#dropping-request-path-prefix) for more details.
                      type: integer
                    headers:
                      description: |-
                        RequestHeaders represent additional http headers, that vmauth uses
                        in form of ["header_key: header_value"]
                        multiple values for header key:
                        ["header_key: value1,value2"]
                        it's available since 1.68.0 version of vmauth
                      items:
                        type: string
                      type: array
                    hosts:
                      items:
                        type: string
                      type: array
                    load_balancing_policy:
                      description: |-
                        LoadBalancingPolicy defines load balancing policy to use for backend urls.
                        Supported policies: least_loaded, first_available.
                        See [here](https://docs.victoriametrics.com/vmauth#load-balancing) for more details (default "least_loaded")
                      enum:
                      - least_loaded
                      - first_available
                      type: string
                    paths:
                      description: Paths - matched path to route.
                      items:
                        type: string
                      type: array
                    response_headers:
                      description: |-
                        ResponseHeaders represent additional http headers, that vmauth adds for request response
                        in form of ["header_key: header_value"]
                        multiple values for header key:
                        ["header_key: value1,value2"]
                        it's available since 1.93.0 version of vmauth
                      items:
                        type: string
                      type: array
                    retry_status_codes:
                      description: |-
                        RetryStatusCodes defines http status codes in numeric format for request retries
                        Can be defined per target or at VMUser.spec level
                        e.g. [429,503]
                      items:
                        type: integer
                      type: array
                    src_headers:
                      description: SrcHeaders is an optional list of headers, which
                        must match request headers.
                      items:
                        type: string
                      type: array
                    src_query_args:
                      description: SrcQueryArgs is an optional list of query args,
                        which must match request URL query args.
                      items:
                        type: string
                      type: array
                    static:
                      description: |-
                        Static - user defined url for traffic forward,
                        for instance http://vmsingle:8429
                      properties:
                        url:
                          description: URL http url for given staticRef.
                          type: string
                        urls:
                          description: URLs allows setting multiple urls for load-balancing
                            at vmauth-side.
                          items:
                            type: string
                          type: array
                      type: object
                    target_path_suffix:
                      description: |-
                        TargetPathSuffix allows to add some suffix to the target path
                        It allows to hide tenant configuration from user with crd as ref.
                        it also may contain any url encoded params.
                      type: string
                    targetRefBasicAuth:
                      description: TargetRefBasicAuth allow an target endpoint to
                        authenticate over basic authentication
                      properties:
                        password:
                          description: |-
                            The secret in the service scrape namespace that contains the password
                            for authentication.
                            It must be at them same namespace as CRD
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        username:
                          description: |-
                            The secret in the service scrape namespace that contains the username
                            for authentication.
                            It must be at them same namespace as CRD
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - password
                      - username
                      type: object
                  type: object
                type: array
              tlsConfig:
                description: TLSConfig defines tls configuration for the backend connection
                properties:
                  ca:
                    description: Stuct containing the CA cert to use for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  caFile:
                    description: Path to the CA cert in the container to use for the
                      targets.
                    type: string
                  cert:
                    description: Struct containing the client cert file for the targets.
                    properties:
                      configMap:
                        description: ConfigMap containing data to use for the targets.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the ConfigMap or its key
                              must be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                      secret:
                        description: Secret containing data to use for the targets.
                        properties:
                          key:
                            description: The key of the secret to select from.  Must
                              be a valid secret key.
                            type: string
                          name:
                            default: ""
                            description: |-
                              Name of the referent.
                              This field is effectively required, but due to backwards compatibility is
                              allowed to be empty. Instances of this type with an empty value here are
                              almost certainly wrong.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          optional:
                            description: Specify whether the Secret or its key must
                              be defined
                            type: boolean
                        required:
                        - key
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  certFile:
                    description: Path to the client cert file in the container for
                      the targets.
                    type: string
                  insecureSkipVerify:
                    description: Disable target certificate validation.
                    type: boolean
                  keyFile:
                    description: Path to the client key file in the container for
                      the targets.
                    type: string
                  keySecret:
                    description: Secret containing the client key file for the targets.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be
                          a valid secret key.
                        type: string
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      optional:
                        description: Specify whether the Secret or its key must be
                          defined
                        type: boolean
                    required:
                    - key
                    type: object
                    x-kubernetes-map-type: atomic
                  serverName:
                    description: Used to verify the hostname for the targets.
                    type: string
                type: object
              tokenRef:
                description: TokenRef allows fetching token from user-created secrets
                  by its name and key.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be a
                      valid secret key.
                    type: string
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  optional:
                    description: Specify whether the Secret or its key must be defined
                    type: boolean
                required:
                - key
                type: object
                x-kubernetes-map-type: atomic
              username:
                description: |-
                  UserName basic auth user name for accessing protected endpoint,
                  will be replaced with metadata.name of VMUser if omitted.
                type: string
            required:
            - targetRefs
            type: object
          status:
            description: VMUserStatus defines the observed state of VMUser
            properties:
              conditions:
                description: 'Known .status.conditions.type are: "Available", "Progressing",
                  and "Degraded"'
                items:
                  description: Condition defines status condition of the resource
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    lastUpdateTime:
                      description: |-
                        LastUpdateTime is the last time of given type update.
                        This value is used for status TTL update and removal
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: Type of condition in CamelCase or in name.namespace.resource.victoriametrics.com/CamelCase.
                      maxLength: 316
                      type: string
                  required:
                  - lastTransitionTime
                  - lastUpdateTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration defines current generation picked by operator for the
                  reconcile
                format: int64
                type: integer
              reason:
                description: Reason defines human readable error reason
                type: string
              updateStatus:
                description: UpdateStatus defines a status for update rollout
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/catalogsources.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: catalogsources.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: CatalogSource
    listKind: CatalogSourceList
    plural: catalogsources
    shortNames:
    - catsrc
    singular: catalogsource
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The pretty name of the catalog
      jsonPath: .spec.displayName
      name: Display
      type: string
    - description: The type of the catalog
      jsonPath: .spec.sourceType
      name: Type
      type: string
    - description: The publisher of the catalog
      jsonPath: .spec.publisher
      name: Publisher
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CatalogSource is a repository of CSVs, CRDs, and operator packages.
        type: object
        required:
        - metadata
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            type: object
            required:
            - sourceType
            properties:
              address:
                description: 'Address is a host that OLM can use to connect to a pre-existing
                  registry. Format: <registry-host or ip>:<port> Only used when SourceType
                  = SourceTypeGrpc. Ignored when the Image field is set.'
                type: string
              configMap:
                description: ConfigMap is the name of the ConfigMap to be used to
                  back a configmap-server registry. Only used when SourceType = SourceTypeConfigmap
                  or SourceTypeInternal.
                type: string
              description:
                type: string
              displayName:
                description: Metadata
                type: string
              grpcPodConfig:
                description: GrpcPodConfig exposes different overrides for the pod
                  spec of the CatalogSource Pod. Only used when SourceType = SourceTypeGrpc
                  and Image is set.
                type: object
                properties:
                  nodeSelector:
                    description: NodeSelector is a selector which must be true for
                      the pod to fit on a node. Selector which must match a node's
                      labels for the pod to be scheduled on that node.
                    type: object
                    additionalProperties:
                      type: string
                  priorityClassName:
                    description: If specified, indicates the pod's priority. If not
                      specified, the pod priority will be default or zero if there
                      is no default.
                    type: string
                  securityContextConfig:
                    description: "SecurityContextConfig can be one of `legacy` or\
                      \ `restricted`. The CatalogSource's pod is either injected with\
                      \ the right pod.spec.securityContext and pod.spec.container[*].securityContext\
                      \ values to allow the pod to run in Pod Security Admission (PSA)\
                      \ `restricted` mode, or doesn't set these values at all, in\
                      \ which case the pod can only be run in PSA `baseline` or `privileged`\
                      \ namespaces. Currently if the SecurityContextConfig is unspecified,\
                      \ the default value of `legacy` is used. Specifying a value\
                      \ other than `legacy` or `restricted` result in a validation\
                      \ error. When using older catalog images, which could not be\
                      \ run in `restricted` mode, the SecurityContextConfig should\
                      \ be set to `legacy`. \n In a future version will the default\
                      \ will be set to `restricted`, catalog maintainers should rebuild\
                      \ their catalogs with a version of opm that supports running\
                      \ catalogSource pods in `restricted` mode to prepare for these\
                      \ changes. \n More information about PSA can be found here:\
                      \ https://kubernetes.io/docs/concepts/security/pod-security-admission/'"
                    type: string
                    default: legacy
                    enum:
                    - legacy
                    - restricted
                  tolerations:
                    description: Tolerations are the catalog source's pod's tolerations.
                    type: array
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      type: object
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          type: integer
                          format: int64
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
              icon:
                type: object
                required:
                - base64data
                - mediatype
                properties:
                  base64data:
                    type: string
                  mediatype:
                    type: string
              image:
                description: Image is an operator-registry container image to instantiate
                  a registry-server with. Only used when SourceType = SourceTypeGrpc.
                  If present, the address field is ignored.
                type: string
              priority:
                description: 'Priority field assigns a weight to the catalog source
                  to prioritize them so that it can be consumed by the dependency
                  resolver. Usage: Higher weight indicates that this catalog source
                  is preferred over lower weighted catalog sources during dependency
                  resolution. The range of the priority value can go from positive
                  to negative in the range of int32. The default value to a catalog
                  source with unassigned priority would be 0. The catalog source with
                  the same priority values will be ranked lexicographically based
                  on its name.'
                type: integer
              publisher:
                type: string
              secrets:
                description: Secrets represent set of secrets that can be used to
                  access the contents of the catalog. It is best to keep this list
                  small, since each will need to be tried for every catalog entry.
                type: array
                items:
                  type: string
              sourceType:
                description: SourceType is the type of source
                type: string
              updateStrategy:
                description: UpdateStrategy defines how updated catalog source images
                  can be discovered Consists of an interval that defines polling duration
                  and an embedded strategy type
                type: object
                properties:
                  registryPoll:
                    type: object
                    properties:
                      interval:
                        description: Interval is used to determine the time interval
                          between checks of the latest catalog source version. The
                          catalog operator polls to see if a new version of the catalog
                          source is available. If available, the latest image is pulled
                          and gRPC traffic is directed to the latest catalog source.
                        type: string
          status:
            type: object
            properties:
              conditions:
                description: Represents the state of a CatalogSource. Note that Message
                  and Reason represent the original status information, which may
                  be migrated to be conditions based in the future. Any new features
                  introduced will use conditions.
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              configMapReference:
                type: object
                required:
                - name
                - namespace
                properties:
                  lastUpdateTime:
                    type: string
                    format: date-time
                  name:
                    type: string
                  namespace:
                    type: string
                  resourceVersion:
                    type: string
                  uid:
                    description: UID is a type that holds unique ID values, including
                      UUIDs.  Because we don't ONLY use UUIDs, this is an alias to
                      string.  Being a type captures intent and helps make sure that
                      UIDs and names do not get conflated.
                    type: string
              connectionState:
                type: object
                required:
                - lastObservedState
                properties:
                  address:
                    type: string
                  lastConnect:
                    type: string
                    format: date-time
                  lastObservedState:
                    type: string
              latestImageRegistryPoll:
                description: The last time the CatalogSource image registry has been
                  polled to ensure the image is up-to-date
                type: string
                format: date-time
              message:
                description: A human readable message indicating details about why
                  the CatalogSource is in this condition.
                type: string
              reason:
                description: Reason is the reason the CatalogSource was transitioned
                  to its current state.
                type: string
              registryService:
                type: object
                properties:
                  createdAt:
                    type: string
                    format: date-time
                  port:
                    type: string
                  protocol:
                    type: string
                  serviceName:
                    type: string
                  serviceNamespace:
                    type: string
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/clusterserviceversions.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: clusterserviceversions.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: ClusterServiceVersion
    listKind: ClusterServiceVersionList
    plural: clusterserviceversions
    shortNames:
    - csv
    - csvs
    singular: clusterserviceversion
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The name of the CSV
      jsonPath: .spec.displayName
      name: Display
      type: string
    - description: The version of the CSV
      jsonPath: .spec.version
      name: Version
      type: string
    - description: The name of a CSV that this one replaces
      jsonPath: .spec.replaces
      name: Replaces
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClusterServiceVersion is a Custom Resource of type `ClusterServiceVersionSpec`.
        type: object
        required:
        - metadata
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterServiceVersionSpec declarations tell OLM how to install
              an operator that can manage apps for a given version.
            type: object
            required:
            - displayName
            - install
            properties:
              annotations:
                description: Annotations is an unstructured key value map stored with
                  a resource that may be set by external tools to store and retrieve
                  arbitrary metadata.
                type: object
                additionalProperties:
                  type: string
              apiservicedefinitions:
                description: APIServiceDefinitions declares all of the extension apis
                  managed or required by an operator being ran by ClusterServiceVersion.
                type: object
                properties:
                  owned:
                    type: array
                    items:
                      description: APIServiceDescription provides details to OLM about
                        apis provided via aggregation
                      type: object
                      required:
                      - group
                      - kind
                      - name
                      - version
                      properties:
                        actionDescriptors:
                          type: array
                          items:
                            description: ActionDescriptor describes a declarative
                              action that can be performed on a custom resource instance
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        containerPort:
                          type: integer
                          format: int32
                        deploymentName:
                          type: string
                        description:
                          type: string
                        displayName:
                          type: string
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        resources:
                          type: array
                          items:
                            description: APIResourceReference is a reference to a
                              Kubernetes resource type that the referrer utilizes.
                            type: object
                            required:
                            - kind
                            - name
                            - version
                            properties:
                              kind:
                                description: Kind of the referenced resource type.
                                type: string
                              name:
                                description: Plural name of the referenced resource
                                  type (CustomResourceDefinition.Spec.Names[].Plural).
                                  Empty string if the referenced resource type is
                                  not a custom resource.
                                type: string
                              version:
                                description: API Version of the referenced resource
                                  type.
                                type: string
                        specDescriptors:
                          type: array
                          items:
                            description: SpecDescriptor describes a field in a spec
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        statusDescriptors:
                          type: array
                          items:
                            description: StatusDescriptor describes a field in a status
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        version:
                          type: string
                  required:
                    type: array
                    items:
                      description: APIServiceDescription provides details to OLM about
                        apis provided via aggregation
                      type: object
                      required:
                      - group
                      - kind
                      - name
                      - version
                      properties:
                        actionDescriptors:
                          type: array
                          items:
                            description: ActionDescriptor describes a declarative
                              action that can be performed on a custom resource instance
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        containerPort:
                          type: integer
                          format: int32
                        deploymentName:
                          type: string
                        description:
                          type: string
                        displayName:
                          type: string
                        group:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        resources:
                          type: array
                          items:
                            description: APIResourceReference is a reference to a
                              Kubernetes resource type that the referrer utilizes.
                            type: object
                            required:
                            - kind
                            - name
                            - version
                            properties:
                              kind:
                                description: Kind of the referenced resource type.
                                type: string
                              name:
                                description: Plural name of the referenced resource
                                  type (CustomResourceDefinition.Spec.Names[].Plural).
                                  Empty string if the referenced resource type is
                                  not a custom resource.
                                type: string
                              version:
                                description: API Version of the referenced resource
                                  type.
                                type: string
                        specDescriptors:
                          type: array
                          items:
                            description: SpecDescriptor describes a field in a spec
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        statusDescriptors:
                          type: array
                          items:
                            description: StatusDescriptor describes a field in a status
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        version:
                          type: string
              cleanup:
                description: Cleanup specifies the cleanup behaviour when the CSV
                  gets deleted
                type: object
                required:
                - enabled
                properties:
                  enabled:
                    type: boolean
              customresourcedefinitions:
                description: "CustomResourceDefinitions declares all of the CRDs managed\
                  \ or required by an operator being ran by ClusterServiceVersion.\
                  \ \n If the CRD is present in the Owned list, it is implicitly required."
                type: object
                properties:
                  owned:
                    type: array
                    items:
                      description: CRDDescription provides details to OLM about the
                        CRDs
                      type: object
                      required:
                      - kind
                      - name
                      - version
                      properties:
                        actionDescriptors:
                          type: array
                          items:
                            description: ActionDescriptor describes a declarative
                              action that can be performed on a custom resource instance
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        description:
                          type: string
                        displayName:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        resources:
                          type: array
                          items:
                            description: APIResourceReference is a reference to a
                              Kubernetes resource type that the referrer utilizes.
                            type: object
                            required:
                            - kind
                            - name
                            - version
                            properties:
                              kind:
                                description: Kind of the referenced resource type.
                                type: string
                              name:
                                description: Plural name of the referenced resource
                                  type (CustomResourceDefinition.Spec.Names[].Plural).
                                  Empty string if the referenced resource type is
                                  not a custom resource.
                                type: string
                              version:
                                description: API Version of the referenced resource
                                  type.
                                type: string
                        specDescriptors:
                          type: array
                          items:
                            description: SpecDescriptor describes a field in a spec
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        statusDescriptors:
                          type: array
                          items:
                            description: StatusDescriptor describes a field in a status
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        version:
                          type: string
                  required:
                    type: array
                    items:
                      description: CRDDescription provides details to OLM about the
                        CRDs
                      type: object
                      required:
                      - kind
                      - name
                      - version
                      properties:
                        actionDescriptors:
                          type: array
                          items:
                            description: ActionDescriptor describes a declarative
                              action that can be performed on a custom resource instance
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        description:
                          type: string
                        displayName:
                          type: string
                        kind:
                          type: string
                        name:
                          type: string
                        resources:
                          type: array
                          items:
                            description: APIResourceReference is a reference to a
                              Kubernetes resource type that the referrer utilizes.
                            type: object
                            required:
                            - kind
                            - name
                            - version
                            properties:
                              kind:
                                description: Kind of the referenced resource type.
                                type: string
                              name:
                                description: Plural name of the referenced resource
                                  type (CustomResourceDefinition.Spec.Names[].Plural).
                                  Empty string if the referenced resource type is
                                  not a custom resource.
                                type: string
                              version:
                                description: API Version of the referenced resource
                                  type.
                                type: string
                        specDescriptors:
                          type: array
                          items:
                            description: SpecDescriptor describes a field in a spec
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        statusDescriptors:
                          type: array
                          items:
                            description: StatusDescriptor describes a field in a status
                              block of a CRD so that OLM can consume it
                            type: object
                            required:
                            - path
                            properties:
                              description:
                                type: string
                              displayName:
                                type: string
                              path:
                                type: string
                              value:
                                description: RawMessage is a raw encoded JSON value.
                                  It implements Marshaler and Unmarshaler and can
                                  be used to delay JSON decoding or precompute a JSON
                                  encoding.
                                type: string
                                format: byte
                              x-descriptors:
                                type: array
                                items:
                                  type: string
                        version:
                          type: string
              description:
                description: Description of the operator. Can include the features,
                  limitations or use-cases of the operator.
                type: string
              displayName:
                description: The name of the operator in display format.
                type: string
              icon:
                description: The icon for this operator.
                type: array
                items:
                  type: object
                  required:
                  - base64data
                  - mediatype
                  properties:
                    base64data:
                      type: string
                    mediatype:
                      type: string
              install:
                description: NamedInstallStrategy represents the block of an ClusterServiceVersion
                  resource where the install strategy is specified.
                type: object
                required:
                - strategy
                properties:
                  spec:
                    description: StrategyDetailsDeployment represents the parsed details
                      of a Deployment InstallStrategy.
                    type: object
                    required:
                    - deployments
                    properties:
                      clusterPermissions:
                        type: array
                        items:
                          description: StrategyDeploymentPermissions describe the
                            rbac rules and service account needed by the install strategy
                          type: object
                          required:
                          - rules
                          - serviceAccountName
                          properties:
                            rules:
                              type: array
                              items:
                                description: PolicyRule holds information that describes
                                  a policy rule, but does not contain information
                                  about who the rule applies to or which namespace
                                  the rule applies to.
                                type: object
                                required:
                                - verbs
                                properties:
                                  apiGroups:
                                    description: APIGroups is the name of the APIGroup
                                      that contains the resources.  If multiple API
                                      groups are specified, any action requested against
                                      one of the enumerated resources in any API group
                                      will be allowed. "" represents the core API
                                      group and "*" represents all API groups.
                                    type: array
                                    items:
                                      type: string
                                  nonResourceURLs:
                                    description: NonResourceURLs is a set of partial
                                      urls that a user should have access to.  *s
                                      are allowed, but only as the full, final step
                                      in the path Since non-resource URLs are not
                                      namespaced, this field is only applicable for
                                      ClusterRoles referenced from a ClusterRoleBinding.
                                      Rules can either apply to API resources (such
                                      as "pods" or "secrets") or non-resource URL
                                      paths (such as "/api"),  but not both.
                                    type: array
                                    items:
                                      type: string
                                  resourceNames:
                                    description: ResourceNames is an optional white
                                      list of names that the rule applies to.  An
                                      empty set means that everything is allowed.
                                    type: array
                                    items:
                                      type: string
                                  resources:
                                    description: Resources is a list of resources
                                      this rule applies to. '*' represents all resources.
                                    type: array
                                    items:
                                      type: string
                                  verbs:
                                    description: Verbs is a list of Verbs that apply
                                      to ALL the ResourceKinds contained in this rule.
                                      '*' represents all verbs.
                                    type: array
                                    items:
                                      type: string
                            serviceAccountName:
                              type: string
                      deployments:
                        type: array
                        items:
                          description: StrategyDeploymentSpec contains the name, spec
                            and labels for the deployment ALM should create
                          type: object
                          required:
                          - name
                          - spec
                          properties:
                            label:
                              description: Set is a map of label:value. It implements
                                Labels.
                              type: object
                              additionalProperties:
                                type: string
                            name:
                              type: string
                            spec:
                              description: DeploymentSpec is the specification of
                                the desired behavior of the Deployment.
                              type: object
                              required:
                              - selector
                              - template
                              properties:
                                minReadySeconds:
                                  description: Minimum number of seconds for which
                                    a newly created pod should be ready without any
                                    of its container crashing, for it to be considered
                                    available. Defaults to 0 (pod will be considered
                                    available as soon as it is ready)
                                  type: integer
                                  format: int32
                                paused:
                                  description: Indicates that the deployment is paused.
                                  type: boolean
                                progressDeadlineSeconds:
                                  description: The maximum time in seconds for a deployment
                                    to make progress before it is considered to be
                                    failed. The deployment controller will continue
                                    to process failed deployments and a condition
                                    with a ProgressDeadlineExceeded reason will be
                                    surfaced in the deployment status. Note that progress
                                    will not be estimated during the time a deployment
                                    is paused. Defaults to 600s.
                                  type: integer
                                  format: int32
                                replicas:
                                  description: Number of desired pods. This is a pointer
                                    to distinguish between explicit zero and not specified.
                                    Defaults to 1.
                                  type: integer
                                  format: int32
                                revisionHistoryLimit:
                                  description: The number of old ReplicaSets to retain
                                    to allow rollback. This is a pointer to distinguish
                                    between explicit zero and not specified. Defaults
                                    to 10.
                                  type: integer
                                  format: int32
                                selector:
                                  description: Label selector for pods. Existing ReplicaSets
                                    whose pods are selected by this will be the ones
                                    affected by this deployment. It must match the
                                    pod template's labels.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      type: array
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                strategy:
                                  description: The deployment strategy to use to replace
                                    existing pods with new ones.
                                  type: object
                                  properties:
                                    rollingUpdate:
                                      description: 'Rolling update config params.
                                        Present only if DeploymentStrategyType = RollingUpdate.
                                        --- TODO: Update this to follow our convention
                                        for oneOf, whatever we decide it to be.'
                                      type: object
                                      properties:
                                        maxSurge:
                                          description: 'The maximum number of pods
                                            that can be scheduled above the desired
                                            number of pods. Value can be an absolute
                                            number (ex: 5) or a percentage of desired
                                            pods (ex: 10%). This can not be 0 if MaxUnavailable
                                            is 0. Absolute number is calculated from
                                            percentage by rounding up. Defaults to
                                            25%. Example: when this is set to 30%,
                                            the new ReplicaSet can be scaled up immediately
                                            when the rolling update starts, such that
                                            the total number of old and new pods do
                                            not exceed 130% of desired pods. Once
                                            old pods have been killed, new ReplicaSet
                                            can be scaled up further, ensuring that
                                            total number of pods running at any time
                                            during the update is at most 130% of desired
                                            pods.'
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          x-kubernetes-int-or-string: true
                                        maxUnavailable:
                                          description: 'The maximum number of pods
                                            that can be unavailable during the update.
                                            Value can be an absolute number (ex: 5)
                                            or a percentage of desired pods (ex: 10%).
                                            Absolute number is calculated from percentage
                                            by rounding down. This can not be 0 if
                                            MaxSurge is 0. Defaults to 25%. Example:
                                            when this is set to 30%, the old ReplicaSet
                                            can be scaled down to 70% of desired pods
                                            immediately when the rolling update starts.
                                            Once new pods are ready, old ReplicaSet
                                            can be scaled down further, followed by
                                            scaling up the new ReplicaSet, ensuring
                                            that the total number of pods available
                                            at all times during the update is at least
                                            70% of desired pods.'
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          x-kubernetes-int-or-string: true
                                    type:
                                      description: Type of deployment. Can be "Recreate"
                                        or "RollingUpdate". Default is RollingUpdate.
                                      type: string
                                template:
                                  description: Template describes the pods that will
                                    be created.
                                  type: object
                                  properties:
                                    metadata:
                                      description: 'Standard object''s metadata. More
                                        info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: 'Specification of the desired behavior
                                        of the pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
                                      type: object
                                      required:
                                      - containers
                                      properties:
                                        activeDeadlineSeconds:
                                          description: Optional duration in seconds
                                            the pod may be active on the node relative
                                            to StartTime before the system will actively
                                            try to mark it failed and kill associated
                                            containers. Value must be a positive integer.
                                          type: integer
                                          format: int64
                                        affinity:
                                          description: If specified, the pod's scheduling
                                            constraints
                                          type: object
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity
                                                scheduling rules for the pod.
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node matches
                                                    the corresponding matchExpressions;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  type: array
                                                  items:
                                                    description: An empty preferred
                                                      scheduling term matches all
                                                      objects with implicit weight
                                                      0 (i.e. it's a no-op). A null
                                                      preferred scheduling term matches
                                                      no objects (i.e. is also a no-op).
                                                    type: object
                                                    required:
                                                    - preference
                                                    - weight
                                                    properties:
                                                      preference:
                                                        description: A node selector
                                                          term, associated with the
                                                          corresponding weight.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                      weight:
                                                        description: Weight associated
                                                          with matching the corresponding
                                                          nodeSelectorTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to an
                                                    update), the system may or may
                                                    not try to eventually evict the
                                                    pod from its node.
                                                  type: object
                                                  required:
                                                  - nodeSelectorTerms
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list
                                                        of node selector terms. The
                                                        terms are ORed.
                                                      type: array
                                                      items:
                                                        description: A null or empty
                                                          node selector term matches
                                                          no objects. The requirements
                                                          of them are ANDed. The TopologySelectorTerm
                                                          type implements a subset
                                                          of the NodeSelectorTerm.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's labels.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchFields:
                                                            description: A list of
                                                              node selector requirements
                                                              by node's fields.
                                                            type: array
                                                            items:
                                                              description: A node
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: The
                                                                    label key that
                                                                    the selector applies
                                                                    to.
                                                                  type: string
                                                                operator:
                                                                  description: Represents
                                                                    a key's relationship
                                                                    to a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists, DoesNotExist.
                                                                    Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: An
                                                                    array of string
                                                                    values. If the
                                                                    operator is In
                                                                    or NotIn, the
                                                                    values array must
                                                                    be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    If the operator
                                                                    is Gt or Lt, the
                                                                    values array must
                                                                    have a single
                                                                    element, which
                                                                    will be interpreted
                                                                    as an integer.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                            podAffinity:
                                              description: Describes pod affinity
                                                scheduling rules (e.g. co-locate this
                                                pod in the same node, zone, etc. as
                                                some other pod(s)).
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the affinity expressions
                                                    specified by this field, but it
                                                    may choose a node that violates
                                                    one or more of the expressions.
                                                    The node that is most preferred
                                                    is the one with the greatest sum
                                                    of weights, i.e. for each node
                                                    that meets all of the scheduling
                                                    requirements (resource request,
                                                    requiredDuringScheduling affinity
                                                    expressions, etc.), compute a
                                                    sum by iterating through the elements
                                                    of this field and adding "weight"
                                                    to the sum if the node has pods
                                                    which matches the corresponding
                                                    podAffinityTerm; the node(s) with
                                                    the highest sum are the most preferred.
                                                  type: array
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    type: object
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        type: object
                                                        required:
                                                        - topologyKey
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            type: array
                                                            items:
                                                              type: string
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the affinity requirements
                                                    specified by this field are not
                                                    met at scheduling time, the pod
                                                    will not be scheduled onto the
                                                    node. If the affinity requirements
                                                    specified by this field cease
                                                    to be met at some point during
                                                    pod execution (e.g. due to a pod
                                                    label update), the system may
                                                    or may not try to eventually evict
                                                    the pod from its node. When there
                                                    are multiple elements, the lists
                                                    of nodes corresponding to each
                                                    podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  type: array
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    type: object
                                                    required:
                                                    - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity
                                                scheduling rules (e.g. avoid putting
                                                this pod in the same node, zone, etc.
                                                as some other pod(s)).
                                              type: object
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: The scheduler will
                                                    prefer to schedule pods to nodes
                                                    that satisfy the anti-affinity
                                                    expressions specified by this
                                                    field, but it may choose a node
                                                    that violates one or more of the
                                                    expressions. The node that is
                                                    most preferred is the one with
                                                    the greatest sum of weights, i.e.
                                                    for each node that meets all of
                                                    the scheduling requirements (resource
                                                    request, requiredDuringScheduling
                                                    anti-affinity expressions, etc.),
                                                    compute a sum by iterating through
                                                    the elements of this field and
                                                    adding "weight" to the sum if
                                                    the node has pods which matches
                                                    the corresponding podAffinityTerm;
                                                    the node(s) with the highest sum
                                                    are the most preferred.
                                                  type: array
                                                  items:
                                                    description: The weights of all
                                                      of the matched WeightedPodAffinityTerm
                                                      fields are added per-node to
                                                      find the most preferred node(s)
                                                    type: object
                                                    required:
                                                    - podAffinityTerm
                                                    - weight
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod
                                                          affinity term, associated
                                                          with the corresponding weight.
                                                        type: object
                                                        required:
                                                        - topologyKey
                                                        properties:
                                                          labelSelector:
                                                            description: A label query
                                                              over a set of resources,
                                                              in this case pods.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                          namespaceSelector:
                                                            description: A label query
                                                              over the set of namespaces
                                                              that the term applies
                                                              to. The term is applied
                                                              to the union of the
                                                              namespaces selected
                                                              by this field and the
                                                              ones listed in the namespaces
                                                              field. null selector
                                                              and null or empty namespaces
                                                              list means "this pod's
                                                              namespace". An empty
                                                              selector ({}) matches
                                                              all namespaces.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                          namespaces:
                                                            description: namespaces
                                                              specifies a static list
                                                              of namespace names that
                                                              the term applies to.
                                                              The term is applied
                                                              to the union of the
                                                              namespaces listed in
                                                              this field and the ones
                                                              selected by namespaceSelector.
                                                              null or empty namespaces
                                                              list and null namespaceSelector
                                                              means "this pod's namespace".
                                                            type: array
                                                            items:
                                                              type: string
                                                          topologyKey:
                                                            description: This pod
                                                              should be co-located
                                                              (affinity) or not co-located
                                                              (anti-affinity) with
                                                              the pods matching the
                                                              labelSelector in the
                                                              specified namespaces,
                                                              where co-located is
                                                              defined as running on
                                                              a node whose value of
                                                              the label with key topologyKey
                                                              matches that of any
                                                              node on which any of
                                                              the selected pods is
                                                              running. Empty topologyKey
                                                              is not allowed.
                                                            type: string
                                                      weight:
                                                        description: weight associated
                                                          with matching the corresponding
                                                          podAffinityTerm, in the
                                                          range 1-100.
                                                        type: integer
                                                        format: int32
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: If the anti-affinity
                                                    requirements specified by this
                                                    field are not met at scheduling
                                                    time, the pod will not be scheduled
                                                    onto the node. If the anti-affinity
                                                    requirements specified by this
                                                    field cease to be met at some
                                                    point during pod execution (e.g.
                                                    due to a pod label update), the
                                                    system may or may not try to eventually
                                                    evict the pod from its node. When
                                                    there are multiple elements, the
                                                    lists of nodes corresponding to
                                                    each podAffinityTerm are intersected,
                                                    i.e. all terms must be satisfied.
                                                  type: array
                                                  items:
                                                    description: Defines a set of
                                                      pods (namely those matching
                                                      the labelSelector relative to
                                                      the given namespace(s)) that
                                                      this pod should be co-located
                                                      (affinity) or not co-located
                                                      (anti-affinity) with, where
                                                      co-located is defined as running
                                                      on a node whose value of the
                                                      label with key <topologyKey>
                                                      matches that of any node on
                                                      which a pod of the set of pods
                                                      is running
                                                    type: object
                                                    required:
                                                    - topologyKey
                                                    properties:
                                                      labelSelector:
                                                        description: A label query
                                                          over a set of resources,
                                                          in this case pods.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                      namespaceSelector:
                                                        description: A label query
                                                          over the set of namespaces
                                                          that the term applies to.
                                                          The term is applied to the
                                                          union of the namespaces
                                                          selected by this field and
                                                          the ones listed in the namespaces
                                                          field. null selector and
                                                          null or empty namespaces
                                                          list means "this pod's namespace".
                                                          An empty selector ({}) matches
                                                          all namespaces.
                                                        type: object
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions
                                                              is a list of label selector
                                                              requirements. The requirements
                                                              are ANDed.
                                                            type: array
                                                            items:
                                                              description: A label
                                                                selector requirement
                                                                is a selector that
                                                                contains values, a
                                                                key, and an operator
                                                                that relates the key
                                                                and values.
                                                              type: object
                                                              required:
                                                              - key
                                                              - operator
                                                              properties:
                                                                key:
                                                                  description: key
                                                                    is the label key
                                                                    that the selector
                                                                    applies to.
                                                                  type: string
                                                                operator:
                                                                  description: operator
                                                                    represents a key's
                                                                    relationship to
                                                                    a set of values.
                                                                    Valid operators
                                                                    are In, NotIn,
                                                                    Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: values
                                                                    is an array of
                                                                    string values.
                                                                    If the operator
                                                                    is In or NotIn,
                                                                    the values array
                                                                    must be non-empty.
                                                                    If the operator
                                                                    is Exists or DoesNotExist,
                                                                    the values array
                                                                    must be empty.
                                                                    This array is
                                                                    replaced during
                                                                    a strategic merge
                                                                    patch.
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                          matchLabels:
                                                            description: matchLabels
                                                              is a map of {key,value}
                                                              pairs. A single {key,value}
                                                              in the matchLabels map
                                                              is equivalent to an
                                                              element of matchExpressions,
                                                              whose key field is "key",
                                                              the operator is "In",
                                                              and the values array
                                                              contains only "value".
                                                              The requirements are
                                                              ANDed.
                                                            type: object
                                                            additionalProperties:
                                                              type: string
                                                      namespaces:
                                                        description: namespaces specifies
                                                          a static list of namespace
                                                          names that the term applies
                                                          to. The term is applied
                                                          to the union of the namespaces
                                                          listed in this field and
                                                          the ones selected by namespaceSelector.
                                                          null or empty namespaces
                                                          list and null namespaceSelector
                                                          means "this pod's namespace".
                                                        type: array
                                                        items:
                                                          type: string
                                                      topologyKey:
                                                        description: This pod should
                                                          be co-located (affinity)
                                                          or not co-located (anti-affinity)
                                                          with the pods matching the
                                                          labelSelector in the specified
                                                          namespaces, where co-located
                                                          is defined as running on
                                                          a node whose value of the
                                                          label with key topologyKey
                                                          matches that of any node
                                                          on which any of the selected
                                                          pods is running. Empty topologyKey
                                                          is not allowed.
                                                        type: string
                                        automountServiceAccountToken:
                                          description: AutomountServiceAccountToken
                                            indicates whether a service account token
                                            should be automatically mounted.
                                          type: boolean
                                        containers:
                                          description: List of containers belonging
                                            to the pod. Containers cannot currently
                                            be added or removed. There must be at
                                            least one container in a Pod. Cannot be
                                            updated.
                                          type: array
                                          items:
                                            description: A single application container
                                              that you want to run within a pod.
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              args:
                                                description: 'Arguments to the entrypoint.
                                                  The container image''s CMD is used
                                                  if this is not provided. Variable
                                                  references $(VAR_NAME) are expanded
                                                  using the container''s environment.
                                                  If a variable cannot be resolved,
                                                  the reference in the input string
                                                  will be unchanged. Double $$ are
                                                  reduced to a single $, which allows
                                                  for escaping the $(VAR_NAME) syntax:
                                                  i.e. "$$(VAR_NAME)" will produce
                                                  the string literal "$(VAR_NAME)".
                                                  Escaped references will never be
                                                  expanded, regardless of whether
                                                  the variable exists or not. Cannot
                                                  be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                type: array
                                                items:
                                                  type: string
                                              command:
                                                description: 'Entrypoint array. Not
                                                  executed within a shell. The container
                                                  image''s ENTRYPOINT is used if this
                                                  is not provided. Variable references
                                                  $(VAR_NAME) are expanded using the
                                                  container''s environment. If a variable
                                                  cannot be resolved, the reference
                                                  in the input string will be unchanged.
                                                  Double $$ are reduced to a single
                                                  $, which allows for escaping the
                                                  $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                                  will produce the string literal
                                                  "$(VAR_NAME)". Escaped references
                                                  will never be expanded, regardless
                                                  of whether the variable exists or
                                                  not. Cannot be updated. More info:
                                                  https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                type: array
                                                items:
                                                  type: string
                                              env:
                                                description: List of environment variables
                                                  to set in the container. Cannot
                                                  be updated.
                                                type: array
                                                items:
                                                  description: EnvVar represents an
                                                    environment variable present in
                                                    a Container.
                                                  type: object
                                                  required:
                                                  - name
                                                  properties:
                                                    name:
                                                      description: Name of the environment
                                                        variable. Must be a C_IDENTIFIER.
                                                      type: string
                                                    value:
                                                      description: 'Variable references
                                                        $(VAR_NAME) are expanded using
                                                        the previously defined environment
                                                        variables in the container
                                                        and any service environment
                                                        variables. If a variable cannot
                                                        be resolved, the reference
                                                        in the input string will be
                                                        unchanged. Double $$ are reduced
                                                        to a single $, which allows
                                                        for escaping the $(VAR_NAME)
                                                        syntax: i.e. "$$(VAR_NAME)"
                                                        will produce the string literal
                                                        "$(VAR_NAME)". Escaped references
                                                        will never be expanded, regardless
                                                        of whether the variable exists
                                                        or not. Defaults to "".'
                                                      type: string
                                                    valueFrom:
                                                      description: Source for the
                                                        environment variable's value.
                                                        Cannot be used if value is
                                                        not empty.
                                                      type: object
                                                      properties:
                                                        configMapKeyRef:
                                                          description: Selects a key
                                                            of a ConfigMap.
                                                          type: object
                                                          required:
                                                          - key
                                                          properties:
                                                            key:
                                                              description: The key
                                                                to select.
                                                              type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: Specify
                                                                whether the ConfigMap
                                                                or its key must be
                                                                defined
                                                              type: boolean
                                                        fieldRef:
                                                          description: 'Selects a
                                                            field of the pod: supports
                                                            metadata.name, metadata.namespace,
                                                            `metadata.labels[''<KEY>'']`,
                                                            `metadata.annotations[''<KEY>'']`,
                                                            spec.nodeName, spec.serviceAccountName,
                                                            status.hostIP, status.podIP,
                                                            status.podIPs.'
                                                          type: object
                                                          required:
                                                          - fieldPath
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, limits.ephemeral-storage,
                                                            requests.cpu, requests.memory
                                                            and requests.ephemeral-storage)
                                                            are currently supported.'
                                                          type: object
                                                          required:
                                                          - resource
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                        secretKeyRef:
                                                          description: Selects a key
                                                            of a secret in the pod's
                                                            namespace
                                                          type: object
                                                          required:
                                                          - key
                                                          properties:
                                                            key:
                                                              description: The key
                                                                of the secret to select
                                                                from.  Must be a valid
                                                                secret key.
                                                              type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: Specify
                                                                whether the Secret
                                                                or its key must be
                                                                defined
                                                              type: boolean
                                              envFrom:
                                                description: List of sources to populate
                                                  environment variables in the container.
                                                  The keys defined within a source
                                                  must be a C_IDENTIFIER. All invalid
                                                  keys will be reported as an event
                                                  when the container is starting.
                                                  When a key exists in multiple sources,
                                                  the value associated with the last
                                                  source will take precedence. Values
                                                  defined by an Env with a duplicate
                                                  key will take precedence. Cannot
                                                  be updated.
                                                type: array
                                                items:
                                                  description: EnvFromSource represents
                                                    the source of a set of ConfigMaps
                                                  type: object
                                                  properties:
                                                    configMapRef:
                                                      description: The ConfigMap to
                                                        select from
                                                      type: object
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                        optional:
                                                          description: Specify whether
                                                            the ConfigMap must be
                                                            defined
                                                          type: boolean
                                                    prefix:
                                                      description: An optional identifier
                                                        to prepend to each key in
                                                        the ConfigMap. Must be a C_IDENTIFIER.
                                                      type: string
                                                    secretRef:
                                                      description: The Secret to select
                                                        from
                                                      type: object
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                        optional:
                                                          description: Specify whether
                                                            the Secret must be defined
                                                          type: boolean
                                              image:
                                                description: 'Container image name.
                                                  More info: https://kubernetes.io/docs/concepts/containers/images
                                                  This field is optional to allow
                                                  higher level config management to
                                                  default or override container images
                                                  in workload controllers like Deployments
                                                  and StatefulSets.'
                                                type: string
                                              imagePullPolicy:
                                                description: 'Image pull policy. One
                                                  of Always, Never, IfNotPresent.
                                                  Defaults to Always if :latest tag
                                                  is specified, or IfNotPresent otherwise.
                                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                type: string
                                              lifecycle:
                                                description: Actions that the management
                                                  system should take in response to
                                                  container lifecycle events. Cannot
                                                  be updated.
                                                type: object
                                                properties:
                                                  postStart:
                                                    description: 'PostStart is called
                                                      immediately after a container
                                                      is created. If the handler fails,
                                                      the container is terminated
                                                      and restarted according to its
                                                      restart policy. Other management
                                                      of the container blocks until
                                                      the hook completes. More info:
                                                      https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                    type: object
                                                    properties:
                                                      exec:
                                                        description: Exec specifies
                                                          the action to take.
                                                        type: object
                                                        properties:
                                                          command:
                                                            description: Command is
                                                              the command line to
                                                              execute inside the container,
                                                              the working directory
                                                              for the command  is
                                                              root ('/') in the container's
                                                              filesystem. The command
                                                              is simply exec'd, it
                                                              is not run inside a
                                                              shell, so traditional
                                                              shell instructions ('|',
                                                              etc) won't work. To
                                                              use a shell, you need
                                                              to explicitly call out
                                                              to that shell. Exit
                                                              status of 0 is treated
                                                              as live/healthy and
                                                              non-zero is unhealthy.
                                                            type: array
                                                            items:
                                                              type: string
                                                      httpGet:
                                                        description: HTTPGet specifies
                                                          the http request to perform.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: Host name
                                                              to connect to, defaults
                                                              to the pod IP. You probably
                                                              want to set "Host" in
                                                              httpHeaders instead.
                                                            type: string
                                                          httpHeaders:
                                                            description: Custom headers
                                                              to set in the request.
                                                              HTTP allows repeated
                                                              headers.
                                                            type: array
                                                            items:
                                                              description: HTTPHeader
                                                                describes a custom
                                                                header to be used
                                                                in HTTP probes
                                                              type: object
                                                              required:
                                                              - name
                                                              - value
                                                              properties:
                                                                name:
                                                                  description: The
                                                                    header field name
                                                                  type: string
                                                                value:
                                                                  description: The
                                                                    header field value
                                                                  type: string
                                                          path:
                                                            description: Path to access
                                                              on the HTTP server.
                                                            type: string
                                                          port:
                                                            description: Name or number
                                                              of the port to access
                                                              on the container. Number
                                                              must be in the range
                                                              1 to 65535. Name must
                                                              be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                          scheme:
                                                            description: Scheme to
                                                              use for connecting to
                                                              the host. Defaults to
                                                              HTTP.
                                                            type: string
                                                      tcpSocket:
                                                        description: Deprecated. TCPSocket
                                                          is NOT supported as a LifecycleHandler
                                                          and kept for the backward
                                                          compatibility. There are
                                                          no validation of this field
                                                          and lifecycle hooks will
                                                          fail in runtime when tcp
                                                          handler is specified.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: 'Optional:
                                                              Host name to connect
                                                              to, defaults to the
                                                              pod IP.'
                                                            type: string
                                                          port:
                                                            description: Number or
                                                              name of the port to
                                                              access on the container.
                                                              Number must be in the
                                                              range 1 to 65535. Name
                                                              must be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                  preStop:
                                                    description: 'PreStop is called
                                                      immediately before a container
                                                      is terminated due to an API
                                                      request or management event
                                                      such as liveness/startup probe
                                                      failure, preemption, resource
                                                      contention, etc. The handler
                                                      is not called if the container
                                                      crashes or exits. The Pod''s
                                                      termination grace period countdown
                                                      begins before the PreStop hook
                                                      is executed. Regardless of the
                                                      outcome of the handler, the
                                                      container will eventually terminate
                                                      within the Pod''s termination
                                                      grace period (unless delayed
                                                      by finalizers). Other management
                                                      of the container blocks until
                                                      the hook completes or until
                                                      the termination grace period
                                                      is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                    type: object
                                                    properties:
                                                      exec:
                                                        description: Exec specifies
                                                          the action to take.
                                                        type: object
                                                        properties:
                                                          command:
                                                            description: Command is
                                                              the command line to
                                                              execute inside the container,
                                                              the working directory
                                                              for the command  is
                                                              root ('/') in the container's
                                                              filesystem. The command
                                                              is simply exec'd, it
                                                              is not run inside a
                                                              shell, so traditional
                                                              shell instructions ('|',
                                                              etc) won't work. To
                                                              use a shell, you need
                                                              to explicitly call out
                                                              to that shell. Exit
                                                              status of 0 is treated
                                                              as live/healthy and
                                                              non-zero is unhealthy.
                                                            type: array
                                                            items:
                                                              type: string
                                                      httpGet:
                                                        description: HTTPGet specifies
                                                          the http request to perform.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: Host name
                                                              to connect to, defaults
                                                              to the pod IP. You probably
                                                              want to set "Host" in
                                                              httpHeaders instead.
                                                            type: string
                                                          httpHeaders:
                                                            description: Custom headers
                                                              to set in the request.
                                                              HTTP allows repeated
                                                              headers.
                                                            type: array
                                                            items:
                                                              description: HTTPHeader
                                                                describes a custom
                                                                header to be used
                                                                in HTTP probes
                                                              type: object
                                                              required:
                                                              - name
                                                              - value
                                                              properties:
                                                                name:
                                                                  description: The
                                                                    header field name
                                                                  type: string
                                                                value:
                                                                  description: The
                                                                    header field value
                                                                  type: string
                                                          path:
                                                            description: Path to access
                                                              on the HTTP server.
                                                            type: string
                                                          port:
                                                            description: Name or number
                                                              of the port to access
                                                              on the container. Number
                                                              must be in the range
                                                              1 to 65535. Name must
                                                              be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                          scheme:
                                                            description: Scheme to
                                                              use for connecting to
                                                              the host. Defaults to
                                                              HTTP.
                                                            type: string
                                                      tcpSocket:
                                                        description: Deprecated. TCPSocket
                                                          is NOT supported as a LifecycleHandler
                                                          and kept for the backward
                                                          compatibility. There are
                                                          no validation of this field
                                                          and lifecycle hooks will
                                                          fail in runtime when tcp
                                                          handler is specified.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: 'Optional:
                                                              Host name to connect
                                                              to, defaults to the
                                                              pod IP.'
                                                            type: string
                                                          port:
                                                            description: Number or
                                                              name of the port to
                                                              access on the container.
                                                              Number must be in the
                                                              range 1 to 65535. Name
                                                              must be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                              livenessProbe:
                                                description: 'Periodic probe of container
                                                  liveness. Container will be restarted
                                                  if the probe fails. Cannot be updated.
                                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              name:
                                                description: Name of the container
                                                  specified as a DNS_LABEL. Each container
                                                  in a pod must have a unique name
                                                  (DNS_LABEL). Cannot be updated.
                                                type: string
                                              ports:
                                                description: List of ports to expose
                                                  from the container. Not specifying
                                                  a port here DOES NOT prevent that
                                                  port from being exposed. Any port
                                                  which is listening on the default
                                                  "0.0.0.0" address inside a container
                                                  will be accessible from the network.
                                                  Modifying this array with strategic
                                                  merge patch may corrupt the data.
                                                  For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                                  Cannot be updated.
                                                type: array
                                                items:
                                                  description: ContainerPort represents
                                                    a network port in a single container.
                                                  type: object
                                                  required:
                                                  - containerPort
                                                  properties:
                                                    containerPort:
                                                      description: Number of port
                                                        to expose on the pod's IP
                                                        address. This must be a valid
                                                        port number, 0 < x < 65536.
                                                      type: integer
                                                      format: int32
                                                    hostIP:
                                                      description: What host IP to
                                                        bind the external port to.
                                                      type: string
                                                    hostPort:
                                                      description: Number of port
                                                        to expose on the host. If
                                                        specified, this must be a
                                                        valid port number, 0 < x <
                                                        65536. If HostNetwork is specified,
                                                        this must match ContainerPort.
                                                        Most containers do not need
                                                        this.
                                                      type: integer
                                                      format: int32
                                                    name:
                                                      description: If specified, this
                                                        must be an IANA_SVC_NAME and
                                                        unique within the pod. Each
                                                        named port in a pod must have
                                                        a unique name. Name for the
                                                        port that can be referred
                                                        to by services.
                                                      type: string
                                                    protocol:
                                                      description: Protocol for port.
                                                        Must be UDP, TCP, or SCTP.
                                                        Defaults to "TCP".
                                                      type: string
                                                      default: TCP
                                                x-kubernetes-list-map-keys:
                                                - containerPort
                                                - protocol
                                                x-kubernetes-list-type: map
                                              readinessProbe:
                                                description: 'Periodic probe of container
                                                  service readiness. Container will
                                                  be removed from service endpoints
                                                  if the probe fails. Cannot be updated.
                                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              resources:
                                                description: 'Compute Resources required
                                                  by this container. Cannot be updated.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                                properties:
                                                  claims:
                                                    description: "Claims lists the\
                                                      \ names of resources, defined\
                                                      \ in spec.resourceClaims, that\
                                                      \ are used by this container.\
                                                      \ \n This is an alpha field\
                                                      \ and requires enabling the\
                                                      \ DynamicResourceAllocation\
                                                      \ feature gate. \n This field\
                                                      \ is immutable."
                                                    type: array
                                                    items:
                                                      description: ResourceClaim references
                                                        one entry in PodSpec.ResourceClaims.
                                                      type: object
                                                      required:
                                                      - name
                                                      properties:
                                                        name:
                                                          description: Name must match
                                                            the name of one entry
                                                            in pod.spec.resourceClaims
                                                            of the Pod where this
                                                            field is used. It makes
                                                            that resource available
                                                            inside a container.
                                                          type: string
                                                    x-kubernetes-list-map-keys:
                                                    - name
                                                    x-kubernetes-list-type: map
                                                  limits:
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                    additionalProperties:
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      x-kubernetes-int-or-string: true
                                                  requests:
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                    additionalProperties:
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      x-kubernetes-int-or-string: true
                                              securityContext:
                                                description: 'SecurityContext defines
                                                  the security options the container
                                                  should be run with. If set, the
                                                  fields of SecurityContext override
                                                  the equivalent fields of PodSecurityContext.
                                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                                type: object
                                                properties:
                                                  allowPrivilegeEscalation:
                                                    description: 'AllowPrivilegeEscalation
                                                      controls whether a process can
                                                      gain more privileges than its
                                                      parent process. This bool directly
                                                      controls if the no_new_privs
                                                      flag will be set on the container
                                                      process. AllowPrivilegeEscalation
                                                      is true always when the container
                                                      is: 1) run as Privileged 2)
                                                      has CAP_SYS_ADMIN Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.'
                                                    type: boolean
                                                  capabilities:
                                                    description: The capabilities
                                                      to add/drop when running containers.
                                                      Defaults to the default set
                                                      of capabilities granted by the
                                                      container runtime. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: object
                                                    properties:
                                                      add:
                                                        description: Added capabilities
                                                        type: array
                                                        items:
                                                          description: Capability
                                                            represent POSIX capabilities
                                                            type
                                                          type: string
                                                      drop:
                                                        description: Removed capabilities
                                                        type: array
                                                        items:
                                                          description: Capability
                                                            represent POSIX capabilities
                                                            type
                                                          type: string
                                                  privileged:
                                                    description: Run container in
                                                      privileged mode. Processes in
                                                      privileged containers are essentially
                                                      equivalent to root on the host.
                                                      Defaults to false. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: boolean
                                                  procMount:
                                                    description: procMount denotes
                                                      the type of proc mount to use
                                                      for the containers. The default
                                                      is DefaultProcMount which uses
                                                      the container runtime defaults
                                                      for readonly paths and masked
                                                      paths. This requires the ProcMountType
                                                      feature flag to be enabled.
                                                      Note that this field cannot
                                                      be set when spec.os.name is
                                                      windows.
                                                    type: string
                                                  readOnlyRootFilesystem:
                                                    description: Whether this container
                                                      has a read-only root filesystem.
                                                      Default is false. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: boolean
                                                  runAsGroup:
                                                    description: The GID to run the
                                                      entrypoint of the container
                                                      process. Uses runtime default
                                                      if unset. May also be set in
                                                      PodSecurityContext.  If set
                                                      in both SecurityContext and
                                                      PodSecurityContext, the value
                                                      specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: integer
                                                    format: int64
                                                  runAsNonRoot:
                                                    description: Indicates that the
                                                      container must run as a non-root
                                                      user. If true, the Kubelet will
                                                      validate the image at runtime
                                                      to ensure that it does not run
                                                      as UID 0 (root) and fail to
                                                      start the container if it does.
                                                      If unset or false, no such validation
                                                      will be performed. May also
                                                      be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence.
                                                    type: boolean
                                                  runAsUser:
                                                    description: The UID to run the
                                                      entrypoint of the container
                                                      process. Defaults to user specified
                                                      in image metadata if unspecified.
                                                      May also be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: integer
                                                    format: int64
                                                  seLinuxOptions:
                                                    description: The SELinux context
                                                      to be applied to the container.
                                                      If unspecified, the container
                                                      runtime will allocate a random
                                                      SELinux context for each container.  May
                                                      also be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: object
                                                    properties:
                                                      level:
                                                        description: Level is SELinux
                                                          level label that applies
                                                          to the container.
                                                        type: string
                                                      role:
                                                        description: Role is a SELinux
                                                          role label that applies
                                                          to the container.
                                                        type: string
                                                      type:
                                                        description: Type is a SELinux
                                                          type label that applies
                                                          to the container.
                                                        type: string
                                                      user:
                                                        description: User is a SELinux
                                                          user label that applies
                                                          to the container.
                                                        type: string
                                                  seccompProfile:
                                                    description: The seccomp options
                                                      to use by this container. If
                                                      seccomp options are provided
                                                      at both the pod & container
                                                      level, the container options
                                                      override the pod options. Note
                                                      that this field cannot be set
                                                      when spec.os.name is windows.
                                                    type: object
                                                    required:
                                                    - type
                                                    properties:
                                                      localhostProfile:
                                                        description: localhostProfile
                                                          indicates a profile defined
                                                          in a file on the node should
                                                          be used. The profile must
                                                          be preconfigured on the
                                                          node to work. Must be a
                                                          descending path, relative
                                                          to the kubelet's configured
                                                          seccomp profile location.
                                                          Must only be set if type
                                                          is "Localhost".
                                                        type: string
                                                      type:
                                                        description: "type indicates\
                                                          \ which kind of seccomp\
                                                          \ profile will be applied.\
                                                          \ Valid options are: \n\
                                                          \ Localhost - a profile\
                                                          \ defined in a file on the\
                                                          \ node should be used. RuntimeDefault\
                                                          \ - the container runtime\
                                                          \ default profile should\
                                                          \ be used. Unconfined -\
                                                          \ no profile should be applied."
                                                        type: string
                                                  windowsOptions:
                                                    description: The Windows specific
                                                      settings applied to all containers.
                                                      If unspecified, the options
                                                      from the PodSecurityContext
                                                      will be used. If set in both
                                                      SecurityContext and PodSecurityContext,
                                                      the value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is linux.
                                                    type: object
                                                    properties:
                                                      gmsaCredentialSpec:
                                                        description: GMSACredentialSpec
                                                          is where the GMSA admission
                                                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                          inlines the contents of
                                                          the GMSA credential spec
                                                          named by the GMSACredentialSpecName
                                                          field.
                                                        type: string
                                                      gmsaCredentialSpecName:
                                                        description: GMSACredentialSpecName
                                                          is the name of the GMSA
                                                          credential spec to use.
                                                        type: string
                                                      hostProcess:
                                                        description: HostProcess determines
                                                          if a container should be
                                                          run as a 'Host Process'
                                                          container. This field is
                                                          alpha-level and will only
                                                          be honored by components
                                                          that enable the WindowsHostProcessContainers
                                                          feature flag. Setting this
                                                          field without the feature
                                                          flag will result in errors
                                                          when validating the Pod.
                                                          All of a Pod's containers
                                                          must have the same effective
                                                          HostProcess value (it is
                                                          not allowed to have a mix
                                                          of HostProcess containers
                                                          and non-HostProcess containers).  In
                                                          addition, if HostProcess
                                                          is true then HostNetwork
                                                          must also be set to true.
                                                        type: boolean
                                                      runAsUserName:
                                                        description: The UserName
                                                          in Windows to run the entrypoint
                                                          of the container process.
                                                          Defaults to the user specified
                                                          in image metadata if unspecified.
                                                          May also be set in PodSecurityContext.
                                                          If set in both SecurityContext
                                                          and PodSecurityContext,
                                                          the value specified in SecurityContext
                                                          takes precedence.
                                                        type: string
                                              startupProbe:
                                                description: 'StartupProbe indicates
                                                  that the Pod has successfully initialized.
                                                  If specified, no other probes are
                                                  executed until this completes successfully.
                                                  If this probe fails, the Pod will
                                                  be restarted, just as if the livenessProbe
                                                  failed. This can be used to provide
                                                  different probe parameters at the
                                                  beginning of a Pod''s lifecycle,
                                                  when it might take a long time to
                                                  load data or warm a cache, than
                                                  during steady-state operation. This
                                                  cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              stdin:
                                                description: Whether this container
                                                  should allocate a buffer for stdin
                                                  in the container runtime. If this
                                                  is not set, reads from stdin in
                                                  the container will always result
                                                  in EOF. Default is false.
                                                type: boolean
                                              stdinOnce:
                                                description: Whether the container
                                                  runtime should close the stdin channel
                                                  after it has been opened by a single
                                                  attach. When stdin is true the stdin
                                                  stream will remain open across multiple
                                                  attach sessions. If stdinOnce is
                                                  set to true, stdin is opened on
                                                  container start, is empty until
                                                  the first client attaches to stdin,
                                                  and then remains open and accepts
                                                  data until the client disconnects,
                                                  at which time stdin is closed and
                                                  remains closed until the container
                                                  is restarted. If this flag is false,
                                                  a container processes that reads
                                                  from stdin will never receive an
                                                  EOF. Default is false
                                                type: boolean
                                              terminationMessagePath:
                                                description: 'Optional: Path at which
                                                  the file to which the container''s
                                                  termination message will be written
                                                  is mounted into the container''s
                                                  filesystem. Message written is intended
                                                  to be brief final status, such as
                                                  an assertion failure message. Will
                                                  be truncated by the node if greater
                                                  than 4096 bytes. The total message
                                                  length across all containers will
                                                  be limited to 12kb. Defaults to
                                                  /dev/termination-log. Cannot be
                                                  updated.'
                                                type: string
                                              terminationMessagePolicy:
                                                description: Indicate how the termination
                                                  message should be populated. File
                                                  will use the contents of terminationMessagePath
                                                  to populate the container status
                                                  message on both success and failure.
                                                  FallbackToLogsOnError will use the
                                                  last chunk of container log output
                                                  if the termination message file
                                                  is empty and the container exited
                                                  with an error. The log output is
                                                  limited to 2048 bytes or 80 lines,
                                                  whichever is smaller. Defaults to
                                                  File. Cannot be updated.
                                                type: string
                                              tty:
                                                description: Whether this container
                                                  should allocate a TTY for itself,
                                                  also requires 'stdin' to be true.
                                                  Default is false.
                                                type: boolean
                                              volumeDevices:
                                                description: volumeDevices is the
                                                  list of block devices to be used
                                                  by the container.
                                                type: array
                                                items:
                                                  description: volumeDevice describes
                                                    a mapping of a raw block device
                                                    within a container.
                                                  type: object
                                                  required:
                                                  - devicePath
                                                  - name
                                                  properties:
                                                    devicePath:
                                                      description: devicePath is the
                                                        path inside of the container
                                                        that the device will be mapped
                                                        to.
                                                      type: string
                                                    name:
                                                      description: name must match
                                                        the name of a persistentVolumeClaim
                                                        in the pod
                                                      type: string
                                              volumeMounts:
                                                description: Pod volumes to mount
                                                  into the container's filesystem.
                                                  Cannot be updated.
                                                type: array
                                                items:
                                                  description: VolumeMount describes
                                                    a mounting of a Volume within
                                                    a container.
                                                  type: object
                                                  required:
                                                  - mountPath
                                                  - name
                                                  properties:
                                                    mountPath:
                                                      description: Path within the
                                                        container at which the volume
                                                        should be mounted.  Must not
                                                        contain ':'.
                                                      type: string
                                                    mountPropagation:
                                                      description: mountPropagation
                                                        determines how mounts are
                                                        propagated from the host to
                                                        container and the other way
                                                        around. When not set, MountPropagationNone
                                                        is used. This field is beta
                                                        in 1.10.
                                                      type: string
                                                    name:
                                                      description: This must match
                                                        the Name of a Volume.
                                                      type: string
                                                    readOnly:
                                                      description: Mounted read-only
                                                        if true, read-write otherwise
                                                        (false or unspecified). Defaults
                                                        to false.
                                                      type: boolean
                                                    subPath:
                                                      description: Path within the
                                                        volume from which the container's
                                                        volume should be mounted.
                                                        Defaults to "" (volume's root).
                                                      type: string
                                                    subPathExpr:
                                                      description: Expanded path within
                                                        the volume from which the
                                                        container's volume should
                                                        be mounted. Behaves similarly
                                                        to SubPath but environment
                                                        variable references $(VAR_NAME)
                                                        are expanded using the container's
                                                        environment. Defaults to ""
                                                        (volume's root). SubPathExpr
                                                        and SubPath are mutually exclusive.
                                                      type: string
                                              workingDir:
                                                description: Container's working directory.
                                                  If not specified, the container
                                                  runtime's default will be used,
                                                  which might be configured in the
                                                  container image. Cannot be updated.
                                                type: string
                                        dnsConfig:
                                          description: Specifies the DNS parameters
                                            of a pod. Parameters specified here will
                                            be merged to the generated DNS configuration
                                            based on DNSPolicy.
                                          type: object
                                          properties:
                                            nameservers:
                                              description: A list of DNS name server
                                                IP addresses. This will be appended
                                                to the base nameservers generated
                                                from DNSPolicy. Duplicated nameservers
                                                will be removed.
                                              type: array
                                              items:
                                                type: string
                                            options:
                                              description: A list of DNS resolver
                                                options. This will be merged with
                                                the base options generated from DNSPolicy.
                                                Duplicated entries will be removed.
                                                Resolution options given in Options
                                                will override those that appear in
                                                the base DNSPolicy.
                                              type: array
                                              items:
                                                description: PodDNSConfigOption defines
                                                  DNS resolver options of a pod.
                                                type: object
                                                properties:
                                                  name:
                                                    description: Required.
                                                    type: string
                                                  value:
                                                    type: string
                                            searches:
                                              description: A list of DNS search domains
                                                for host-name lookup. This will be
                                                appended to the base search paths
                                                generated from DNSPolicy. Duplicated
                                                search paths will be removed.
                                              type: array
                                              items:
                                                type: string
                                        dnsPolicy:
                                          description: Set DNS policy for the pod.
                                            Defaults to "ClusterFirst". Valid values
                                            are 'ClusterFirstWithHostNet', 'ClusterFirst',
                                            'Default' or 'None'. DNS parameters given
                                            in DNSConfig will be merged with the policy
                                            selected with DNSPolicy. To have DNS options
                                            set along with hostNetwork, you have to
                                            specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
                                          type: string
                                        enableServiceLinks:
                                          description: 'EnableServiceLinks indicates
                                            whether information about services should
                                            be injected into pod''s environment variables,
                                            matching the syntax of Docker links. Optional:
                                            Defaults to true.'
                                          type: boolean
                                        ephemeralContainers:
                                          description: List of ephemeral containers
                                            run in this pod. Ephemeral containers
                                            may be run in an existing pod to perform
                                            user-initiated actions such as debugging.
                                            This list cannot be specified when creating
                                            a pod, and it cannot be modified by updating
                                            the pod spec. In order to add an ephemeral
                                            container to an existing pod, use the
                                            pod's ephemeralcontainers subresource.
                                          type: array
                                          items:
                                            description: "An EphemeralContainer is\
                                              \ a temporary container that you may\
                                              \ add to an existing Pod for user-initiated\
                                              \ activities such as debugging. Ephemeral\
                                              \ containers have no resource or scheduling\
                                              \ guarantees, and they will not be restarted\
                                              \ when they exit or when a Pod is removed\
                                              \ or restarted. The kubelet may evict\
                                              \ a Pod if an ephemeral container causes\
                                              \ the Pod to exceed its resource allocation.\
                                              \ \n To add an ephemeral container,\
                                              \ use the ephemeralcontainers subresource\
                                              \ of an existing Pod. Ephemeral containers\
                                              \ may not be removed or restarted."
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              args:
                                                description: 'Arguments to the entrypoint.
                                                  The image''s CMD is used if this
                                                  is not provided. Variable references
                                                  $(VAR_NAME) are expanded using the
                                                  container''s environment. If a variable
                                                  cannot be resolved, the reference
                                                  in the input string will be unchanged.
                                                  Double $$ are reduced to a single
                                                  $, which allows for escaping the
                                                  $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                                  will produce the string literal
                                                  "$(VAR_NAME)". Escaped references
                                                  will never be expanded, regardless
                                                  of whether the variable exists or
                                                  not. Cannot be updated. More info:
                                                  https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                type: array
                                                items:
                                                  type: string
                                              command:
                                                description: 'Entrypoint array. Not
                                                  executed within a shell. The image''s
                                                  ENTRYPOINT is used if this is not
                                                  provided. Variable references $(VAR_NAME)
                                                  are expanded using the container''s
                                                  environment. If a variable cannot
                                                  be resolved, the reference in the
                                                  input string will be unchanged.
                                                  Double $$ are reduced to a single
                                                  $, which allows for escaping the
                                                  $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                                  will produce the string literal
                                                  "$(VAR_NAME)". Escaped references
                                                  will never be expanded, regardless
                                                  of whether the variable exists or
                                                  not. Cannot be updated. More info:
                                                  https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                type: array
                                                items:
                                                  type: string
                                              env:
                                                description: List of environment variables
                                                  to set in the container. Cannot
                                                  be updated.
                                                type: array
                                                items:
                                                  description: EnvVar represents an
                                                    environment variable present in
                                                    a Container.
                                                  type: object
                                                  required:
                                                  - name
                                                  properties:
                                                    name:
                                                      description: Name of the environment
                                                        variable. Must be a C_IDENTIFIER.
                                                      type: string
                                                    value:
                                                      description: 'Variable references
                                                        $(VAR_NAME) are expanded using
                                                        the previously defined environment
                                                        variables in the container
                                                        and any service environment
                                                        variables. If a variable cannot
                                                        be resolved, the reference
                                                        in the input string will be
                                                        unchanged. Double $$ are reduced
                                                        to a single $, which allows
                                                        for escaping the $(VAR_NAME)
                                                        syntax: i.e. "$$(VAR_NAME)"
                                                        will produce the string literal
                                                        "$(VAR_NAME)". Escaped references
                                                        will never be expanded, regardless
                                                        of whether the variable exists
                                                        or not. Defaults to "".'
                                                      type: string
                                                    valueFrom:
                                                      description: Source for the
                                                        environment variable's value.
                                                        Cannot be used if value is
                                                        not empty.
                                                      type: object
                                                      properties:
                                                        configMapKeyRef:
                                                          description: Selects a key
                                                            of a ConfigMap.
                                                          type: object
                                                          required:
                                                          - key
                                                          properties:
                                                            key:
                                                              description: The key
                                                                to select.
                                                              type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: Specify
                                                                whether the ConfigMap
                                                                or its key must be
                                                                defined
                                                              type: boolean
                                                        fieldRef:
                                                          description: 'Selects a
                                                            field of the pod: supports
                                                            metadata.name, metadata.namespace,
                                                            `metadata.labels[''<KEY>'']`,
                                                            `metadata.annotations[''<KEY>'']`,
                                                            spec.nodeName, spec.serviceAccountName,
                                                            status.hostIP, status.podIP,
                                                            status.podIPs.'
                                                          type: object
                                                          required:
                                                          - fieldPath
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, limits.ephemeral-storage,
                                                            requests.cpu, requests.memory
                                                            and requests.ephemeral-storage)
                                                            are currently supported.'
                                                          type: object
                                                          required:
                                                          - resource
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                        secretKeyRef:
                                                          description: Selects a key
                                                            of a secret in the pod's
                                                            namespace
                                                          type: object
                                                          required:
                                                          - key
                                                          properties:
                                                            key:
                                                              description: The key
                                                                of the secret to select
                                                                from.  Must be a valid
                                                                secret key.
                                                              type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: Specify
                                                                whether the Secret
                                                                or its key must be
                                                                defined
                                                              type: boolean
                                              envFrom:
                                                description: List of sources to populate
                                                  environment variables in the container.
                                                  The keys defined within a source
                                                  must be a C_IDENTIFIER. All invalid
                                                  keys will be reported as an event
                                                  when the container is starting.
                                                  When a key exists in multiple sources,
                                                  the value associated with the last
                                                  source will take precedence. Values
                                                  defined by an Env with a duplicate
                                                  key will take precedence. Cannot
                                                  be updated.
                                                type: array
                                                items:
                                                  description: EnvFromSource represents
                                                    the source of a set of ConfigMaps
                                                  type: object
                                                  properties:
                                                    configMapRef:
                                                      description: The ConfigMap to
                                                        select from
                                                      type: object
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                        optional:
                                                          description: Specify whether
                                                            the ConfigMap must be
                                                            defined
                                                          type: boolean
                                                    prefix:
                                                      description: An optional identifier
                                                        to prepend to each key in
                                                        the ConfigMap. Must be a C_IDENTIFIER.
                                                      type: string
                                                    secretRef:
                                                      description: The Secret to select
                                                        from
                                                      type: object
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                        optional:
                                                          description: Specify whether
                                                            the Secret must be defined
                                                          type: boolean
                                              image:
                                                description: 'Container image name.
                                                  More info: https://kubernetes.io/docs/concepts/containers/images'
                                                type: string
                                              imagePullPolicy:
                                                description: 'Image pull policy. One
                                                  of Always, Never, IfNotPresent.
                                                  Defaults to Always if :latest tag
                                                  is specified, or IfNotPresent otherwise.
                                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                type: string
                                              lifecycle:
                                                description: Lifecycle is not allowed
                                                  for ephemeral containers.
                                                type: object
                                                properties:
                                                  postStart:
                                                    description: 'PostStart is called
                                                      immediately after a container
                                                      is created. If the handler fails,
                                                      the container is terminated
                                                      and restarted according to its
                                                      restart policy. Other management
                                                      of the container blocks until
                                                      the hook completes. More info:
                                                      https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                    type: object
                                                    properties:
                                                      exec:
                                                        description: Exec specifies
                                                          the action to take.
                                                        type: object
                                                        properties:
                                                          command:
                                                            description: Command is
                                                              the command line to
                                                              execute inside the container,
                                                              the working directory
                                                              for the command  is
                                                              root ('/') in the container's
                                                              filesystem. The command
                                                              is simply exec'd, it
                                                              is not run inside a
                                                              shell, so traditional
                                                              shell instructions ('|',
                                                              etc) won't work. To
                                                              use a shell, you need
                                                              to explicitly call out
                                                              to that shell. Exit
                                                              status of 0 is treated
                                                              as live/healthy and
                                                              non-zero is unhealthy.
                                                            type: array
                                                            items:
                                                              type: string
                                                      httpGet:
                                                        description: HTTPGet specifies
                                                          the http request to perform.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: Host name
                                                              to connect to, defaults
                                                              to the pod IP. You probably
                                                              want to set "Host" in
                                                              httpHeaders instead.
                                                            type: string
                                                          httpHeaders:
                                                            description: Custom headers
                                                              to set in the request.
                                                              HTTP allows repeated
                                                              headers.
                                                            type: array
                                                            items:
                                                              description: HTTPHeader
                                                                describes a custom
                                                                header to be used
                                                                in HTTP probes
                                                              type: object
                                                              required:
                                                              - name
                                                              - value
                                                              properties:
                                                                name:
                                                                  description: The
                                                                    header field name
                                                                  type: string
                                                                value:
                                                                  description: The
                                                                    header field value
                                                                  type: string
                                                          path:
                                                            description: Path to access
                                                              on the HTTP server.
                                                            type: string
                                                          port:
                                                            description: Name or number
                                                              of the port to access
                                                              on the container. Number
                                                              must be in the range
                                                              1 to 65535. Name must
                                                              be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                          scheme:
                                                            description: Scheme to
                                                              use for connecting to
                                                              the host. Defaults to
                                                              HTTP.
                                                            type: string
                                                      tcpSocket:
                                                        description: Deprecated. TCPSocket
                                                          is NOT supported as a LifecycleHandler
                                                          and kept for the backward
                                                          compatibility. There are
                                                          no validation of this field
                                                          and lifecycle hooks will
                                                          fail in runtime when tcp
                                                          handler is specified.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: 'Optional:
                                                              Host name to connect
                                                              to, defaults to the
                                                              pod IP.'
                                                            type: string
                                                          port:
                                                            description: Number or
                                                              name of the port to
                                                              access on the container.
                                                              Number must be in the
                                                              range 1 to 65535. Name
                                                              must be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                  preStop:
                                                    description: 'PreStop is called
                                                      immediately before a container
                                                      is terminated due to an API
                                                      request or management event
                                                      such as liveness/startup probe
                                                      failure, preemption, resource
                                                      contention, etc. The handler
                                                      is not called if the container
                                                      crashes or exits. The Pod''s
                                                      termination grace period countdown
                                                      begins before the PreStop hook
                                                      is executed. Regardless of the
                                                      outcome of the handler, the
                                                      container will eventually terminate
                                                      within the Pod''s termination
                                                      grace period (unless delayed
                                                      by finalizers). Other management
                                                      of the container blocks until
                                                      the hook completes or until
                                                      the termination grace period
                                                      is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                    type: object
                                                    properties:
                                                      exec:
                                                        description: Exec specifies
                                                          the action to take.
                                                        type: object
                                                        properties:
                                                          command:
                                                            description: Command is
                                                              the command line to
                                                              execute inside the container,
                                                              the working directory
                                                              for the command  is
                                                              root ('/') in the container's
                                                              filesystem. The command
                                                              is simply exec'd, it
                                                              is not run inside a
                                                              shell, so traditional
                                                              shell instructions ('|',
                                                              etc) won't work. To
                                                              use a shell, you need
                                                              to explicitly call out
                                                              to that shell. Exit
                                                              status of 0 is treated
                                                              as live/healthy and
                                                              non-zero is unhealthy.
                                                            type: array
                                                            items:
                                                              type: string
                                                      httpGet:
                                                        description: HTTPGet specifies
                                                          the http request to perform.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: Host name
                                                              to connect to, defaults
                                                              to the pod IP. You probably
                                                              want to set "Host" in
                                                              httpHeaders instead.
                                                            type: string
                                                          httpHeaders:
                                                            description: Custom headers
                                                              to set in the request.
                                                              HTTP allows repeated
                                                              headers.
                                                            type: array
                                                            items:
                                                              description: HTTPHeader
                                                                describes a custom
                                                                header to be used
                                                                in HTTP probes
                                                              type: object
                                                              required:
                                                              - name
                                                              - value
                                                              properties:
                                                                name:
                                                                  description: The
                                                                    header field name
                                                                  type: string
                                                                value:
                                                                  description: The
                                                                    header field value
                                                                  type: string
                                                          path:
                                                            description: Path to access
                                                              on the HTTP server.
                                                            type: string
                                                          port:
                                                            description: Name or number
                                                              of the port to access
                                                              on the container. Number
                                                              must be in the range
                                                              1 to 65535. Name must
                                                              be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                          scheme:
                                                            description: Scheme to
                                                              use for connecting to
                                                              the host. Defaults to
                                                              HTTP.
                                                            type: string
                                                      tcpSocket:
                                                        description: Deprecated. TCPSocket
                                                          is NOT supported as a LifecycleHandler
                                                          and kept for the backward
                                                          compatibility. There are
                                                          no validation of this field
                                                          and lifecycle hooks will
                                                          fail in runtime when tcp
                                                          handler is specified.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: 'Optional:
                                                              Host name to connect
                                                              to, defaults to the
                                                              pod IP.'
                                                            type: string
                                                          port:
                                                            description: Number or
                                                              name of the port to
                                                              access on the container.
                                                              Number must be in the
                                                              range 1 to 65535. Name
                                                              must be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                              livenessProbe:
                                                description: Probes are not allowed
                                                  for ephemeral containers.
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              name:
                                                description: Name of the ephemeral
                                                  container specified as a DNS_LABEL.
                                                  This name must be unique among all
                                                  containers, init containers and
                                                  ephemeral containers.
                                                type: string
                                              ports:
                                                description: Ports are not allowed
                                                  for ephemeral containers.
                                                type: array
                                                items:
                                                  description: ContainerPort represents
                                                    a network port in a single container.
                                                  type: object
                                                  required:
                                                  - containerPort
                                                  properties:
                                                    containerPort:
                                                      description: Number of port
                                                        to expose on the pod's IP
                                                        address. This must be a valid
                                                        port number, 0 < x < 65536.
                                                      type: integer
                                                      format: int32
                                                    hostIP:
                                                      description: What host IP to
                                                        bind the external port to.
                                                      type: string
                                                    hostPort:
                                                      description: Number of port
                                                        to expose on the host. If
                                                        specified, this must be a
                                                        valid port number, 0 < x <
                                                        65536. If HostNetwork is specified,
                                                        this must match ContainerPort.
                                                        Most containers do not need
                                                        this.
                                                      type: integer
                                                      format: int32
                                                    name:
                                                      description: If specified, this
                                                        must be an IANA_SVC_NAME and
                                                        unique within the pod. Each
                                                        named port in a pod must have
                                                        a unique name. Name for the
                                                        port that can be referred
                                                        to by services.
                                                      type: string
                                                    protocol:
                                                      description: Protocol for port.
                                                        Must be UDP, TCP, or SCTP.
                                                        Defaults to "TCP".
                                                      type: string
                                                      default: TCP
                                                x-kubernetes-list-map-keys:
                                                - containerPort
                                                - protocol
                                                x-kubernetes-list-type: map
                                              readinessProbe:
                                                description: Probes are not allowed
                                                  for ephemeral containers.
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              resources:
                                                description: Resources are not allowed
                                                  for ephemeral containers. Ephemeral
                                                  containers use spare resources already
                                                  allocated to the pod.
                                                type: object
                                                properties:
                                                  claims:
                                                    description: "Claims lists the\
                                                      \ names of resources, defined\
                                                      \ in spec.resourceClaims, that\
                                                      \ are used by this container.\
                                                      \ \n This is an alpha field\
                                                      \ and requires enabling the\
                                                      \ DynamicResourceAllocation\
                                                      \ feature gate. \n This field\
                                                      \ is immutable."
                                                    type: array
                                                    items:
                                                      description: ResourceClaim references
                                                        one entry in PodSpec.ResourceClaims.
                                                      type: object
                                                      required:
                                                      - name
                                                      properties:
                                                        name:
                                                          description: Name must match
                                                            the name of one entry
                                                            in pod.spec.resourceClaims
                                                            of the Pod where this
                                                            field is used. It makes
                                                            that resource available
                                                            inside a container.
                                                          type: string
                                                    x-kubernetes-list-map-keys:
                                                    - name
                                                    x-kubernetes-list-type: map
                                                  limits:
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                    additionalProperties:
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      x-kubernetes-int-or-string: true
                                                  requests:
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                    additionalProperties:
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      x-kubernetes-int-or-string: true
                                              securityContext:
                                                description: 'Optional: SecurityContext
                                                  defines the security options the
                                                  ephemeral container should be run
                                                  with. If set, the fields of SecurityContext
                                                  override the equivalent fields of
                                                  PodSecurityContext.'
                                                type: object
                                                properties:
                                                  allowPrivilegeEscalation:
                                                    description: 'AllowPrivilegeEscalation
                                                      controls whether a process can
                                                      gain more privileges than its
                                                      parent process. This bool directly
                                                      controls if the no_new_privs
                                                      flag will be set on the container
                                                      process. AllowPrivilegeEscalation
                                                      is true always when the container
                                                      is: 1) run as Privileged 2)
                                                      has CAP_SYS_ADMIN Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.'
                                                    type: boolean
                                                  capabilities:
                                                    description: The capabilities
                                                      to add/drop when running containers.
                                                      Defaults to the default set
                                                      of capabilities granted by the
                                                      container runtime. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: object
                                                    properties:
                                                      add:
                                                        description: Added capabilities
                                                        type: array
                                                        items:
                                                          description: Capability
                                                            represent POSIX capabilities
                                                            type
                                                          type: string
                                                      drop:
                                                        description: Removed capabilities
                                                        type: array
                                                        items:
                                                          description: Capability
                                                            represent POSIX capabilities
                                                            type
                                                          type: string
                                                  privileged:
                                                    description: Run container in
                                                      privileged mode. Processes in
                                                      privileged containers are essentially
                                                      equivalent to root on the host.
                                                      Defaults to false. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: boolean
                                                  procMount:
                                                    description: procMount denotes
                                                      the type of proc mount to use
                                                      for the containers. The default
                                                      is DefaultProcMount which uses
                                                      the container runtime defaults
                                                      for readonly paths and masked
                                                      paths. This requires the ProcMountType
                                                      feature flag to be enabled.
                                                      Note that this field cannot
                                                      be set when spec.os.name is
                                                      windows.
                                                    type: string
                                                  readOnlyRootFilesystem:
                                                    description: Whether this container
                                                      has a read-only root filesystem.
                                                      Default is false. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: boolean
                                                  runAsGroup:
                                                    description: The GID to run the
                                                      entrypoint of the container
                                                      process. Uses runtime default
                                                      if unset. May also be set in
                                                      PodSecurityContext.  If set
                                                      in both SecurityContext and
                                                      PodSecurityContext, the value
                                                      specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: integer
                                                    format: int64
                                                  runAsNonRoot:
                                                    description: Indicates that the
                                                      container must run as a non-root
                                                      user. If true, the Kubelet will
                                                      validate the image at runtime
                                                      to ensure that it does not run
                                                      as UID 0 (root) and fail to
                                                      start the container if it does.
                                                      If unset or false, no such validation
                                                      will be performed. May also
                                                      be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence.
                                                    type: boolean
                                                  runAsUser:
                                                    description: The UID to run the
                                                      entrypoint of the container
                                                      process. Defaults to user specified
                                                      in image metadata if unspecified.
                                                      May also be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: integer
                                                    format: int64
                                                  seLinuxOptions:
                                                    description: The SELinux context
                                                      to be applied to the container.
                                                      If unspecified, the container
                                                      runtime will allocate a random
                                                      SELinux context for each container.  May
                                                      also be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: object
                                                    properties:
                                                      level:
                                                        description: Level is SELinux
                                                          level label that applies
                                                          to the container.
                                                        type: string
                                                      role:
                                                        description: Role is a SELinux
                                                          role label that applies
                                                          to the container.
                                                        type: string
                                                      type:
                                                        description: Type is a SELinux
                                                          type label that applies
                                                          to the container.
                                                        type: string
                                                      user:
                                                        description: User is a SELinux
                                                          user label that applies
                                                          to the container.
                                                        type: string
                                                  seccompProfile:
                                                    description: The seccomp options
                                                      to use by this container. If
                                                      seccomp options are provided
                                                      at both the pod & container
                                                      level, the container options
                                                      override the pod options. Note
                                                      that this field cannot be set
                                                      when spec.os.name is windows.
                                                    type: object
                                                    required:
                                                    - type
                                                    properties:
                                                      localhostProfile:
                                                        description: localhostProfile
                                                          indicates a profile defined
                                                          in a file on the node should
                                                          be used. The profile must
                                                          be preconfigured on the
                                                          node to work. Must be a
                                                          descending path, relative
                                                          to the kubelet's configured
                                                          seccomp profile location.
                                                          Must only be set if type
                                                          is "Localhost".
                                                        type: string
                                                      type:
                                                        description: "type indicates\
                                                          \ which kind of seccomp\
                                                          \ profile will be applied.\
                                                          \ Valid options are: \n\
                                                          \ Localhost - a profile\
                                                          \ defined in a file on the\
                                                          \ node should be used. RuntimeDefault\
                                                          \ - the container runtime\
                                                          \ default profile should\
                                                          \ be used. Unconfined -\
                                                          \ no profile should be applied."
                                                        type: string
                                                  windowsOptions:
                                                    description: The Windows specific
                                                      settings applied to all containers.
                                                      If unspecified, the options
                                                      from the PodSecurityContext
                                                      will be used. If set in both
                                                      SecurityContext and PodSecurityContext,
                                                      the value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is linux.
                                                    type: object
                                                    properties:
                                                      gmsaCredentialSpec:
                                                        description: GMSACredentialSpec
                                                          is where the GMSA admission
                                                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                          inlines the contents of
                                                          the GMSA credential spec
                                                          named by the GMSACredentialSpecName
                                                          field.
                                                        type: string
                                                      gmsaCredentialSpecName:
                                                        description: GMSACredentialSpecName
                                                          is the name of the GMSA
                                                          credential spec to use.
                                                        type: string
                                                      hostProcess:
                                                        description: HostProcess determines
                                                          if a container should be
                                                          run as a 'Host Process'
                                                          container. This field is
                                                          alpha-level and will only
                                                          be honored by components
                                                          that enable the WindowsHostProcessContainers
                                                          feature flag. Setting this
                                                          field without the feature
                                                          flag will result in errors
                                                          when validating the Pod.
                                                          All of a Pod's containers
                                                          must have the same effective
                                                          HostProcess value (it is
                                                          not allowed to have a mix
                                                          of HostProcess containers
                                                          and non-HostProcess containers).  In
                                                          addition, if HostProcess
                                                          is true then HostNetwork
                                                          must also be set to true.
                                                        type: boolean
                                                      runAsUserName:
                                                        description: The UserName
                                                          in Windows to run the entrypoint
                                                          of the container process.
                                                          Defaults to the user specified
                                                          in image metadata if unspecified.
                                                          May also be set in PodSecurityContext.
                                                          If set in both SecurityContext
                                                          and PodSecurityContext,
                                                          the value specified in SecurityContext
                                                          takes precedence.
                                                        type: string
                                              startupProbe:
                                                description: Probes are not allowed
                                                  for ephemeral containers.
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              stdin:
                                                description: Whether this container
                                                  should allocate a buffer for stdin
                                                  in the container runtime. If this
                                                  is not set, reads from stdin in
                                                  the container will always result
                                                  in EOF. Default is false.
                                                type: boolean
                                              stdinOnce:
                                                description: Whether the container
                                                  runtime should close the stdin channel
                                                  after it has been opened by a single
                                                  attach. When stdin is true the stdin
                                                  stream will remain open across multiple
                                                  attach sessions. If stdinOnce is
                                                  set to true, stdin is opened on
                                                  container start, is empty until
                                                  the first client attaches to stdin,
                                                  and then remains open and accepts
                                                  data until the client disconnects,
                                                  at which time stdin is closed and
                                                  remains closed until the container
                                                  is restarted. If this flag is false,
                                                  a container processes that reads
                                                  from stdin will never receive an
                                                  EOF. Default is false
                                                type: boolean
                                              targetContainerName:
                                                description: "If set, the name of\
                                                  \ the container from PodSpec that\
                                                  \ this ephemeral container targets.\
                                                  \ The ephemeral container will be\
                                                  \ run in the namespaces (IPC, PID,\
                                                  \ etc) of this container. If not\
                                                  \ set then the ephemeral container\
                                                  \ uses the namespaces configured\
                                                  \ in the Pod spec. \n The container\
                                                  \ runtime must implement support\
                                                  \ for this feature. If the runtime\
                                                  \ does not support namespace targeting\
                                                  \ then the result of setting this\
                                                  \ field is undefined."
                                                type: string
                                              terminationMessagePath:
                                                description: 'Optional: Path at which
                                                  the file to which the container''s
                                                  termination message will be written
                                                  is mounted into the container''s
                                                  filesystem. Message written is intended
                                                  to be brief final status, such as
                                                  an assertion failure message. Will
                                                  be truncated by the node if greater
                                                  than 4096 bytes. The total message
                                                  length across all containers will
                                                  be limited to 12kb. Defaults to
                                                  /dev/termination-log. Cannot be
                                                  updated.'
                                                type: string
                                              terminationMessagePolicy:
                                                description: Indicate how the termination
                                                  message should be populated. File
                                                  will use the contents of terminationMessagePath
                                                  to populate the container status
                                                  message on both success and failure.
                                                  FallbackToLogsOnError will use the
                                                  last chunk of container log output
                                                  if the termination message file
                                                  is empty and the container exited
                                                  with an error. The log output is
                                                  limited to 2048 bytes or 80 lines,
                                                  whichever is smaller. Defaults to
                                                  File. Cannot be updated.
                                                type: string
                                              tty:
                                                description: Whether this container
                                                  should allocate a TTY for itself,
                                                  also requires 'stdin' to be true.
                                                  Default is false.
                                                type: boolean
                                              volumeDevices:
                                                description: volumeDevices is the
                                                  list of block devices to be used
                                                  by the container.
                                                type: array
                                                items:
                                                  description: volumeDevice describes
                                                    a mapping of a raw block device
                                                    within a container.
                                                  type: object
                                                  required:
                                                  - devicePath
                                                  - name
                                                  properties:
                                                    devicePath:
                                                      description: devicePath is the
                                                        path inside of the container
                                                        that the device will be mapped
                                                        to.
                                                      type: string
                                                    name:
                                                      description: name must match
                                                        the name of a persistentVolumeClaim
                                                        in the pod
                                                      type: string
                                              volumeMounts:
                                                description: Pod volumes to mount
                                                  into the container's filesystem.
                                                  Subpath mounts are not allowed for
                                                  ephemeral containers. Cannot be
                                                  updated.
                                                type: array
                                                items:
                                                  description: VolumeMount describes
                                                    a mounting of a Volume within
                                                    a container.
                                                  type: object
                                                  required:
                                                  - mountPath
                                                  - name
                                                  properties:
                                                    mountPath:
                                                      description: Path within the
                                                        container at which the volume
                                                        should be mounted.  Must not
                                                        contain ':'.
                                                      type: string
                                                    mountPropagation:
                                                      description: mountPropagation
                                                        determines how mounts are
                                                        propagated from the host to
                                                        container and the other way
                                                        around. When not set, MountPropagationNone
                                                        is used. This field is beta
                                                        in 1.10.
                                                      type: string
                                                    name:
                                                      description: This must match
                                                        the Name of a Volume.
                                                      type: string
                                                    readOnly:
                                                      description: Mounted read-only
                                                        if true, read-write otherwise
                                                        (false or unspecified). Defaults
                                                        to false.
                                                      type: boolean
                                                    subPath:
                                                      description: Path within the
                                                        volume from which the container's
                                                        volume should be mounted.
                                                        Defaults to "" (volume's root).
                                                      type: string
                                                    subPathExpr:
                                                      description: Expanded path within
                                                        the volume from which the
                                                        container's volume should
                                                        be mounted. Behaves similarly
                                                        to SubPath but environment
                                                        variable references $(VAR_NAME)
                                                        are expanded using the container's
                                                        environment. Defaults to ""
                                                        (volume's root). SubPathExpr
                                                        and SubPath are mutually exclusive.
                                                      type: string
                                              workingDir:
                                                description: Container's working directory.
                                                  If not specified, the container
                                                  runtime's default will be used,
                                                  which might be configured in the
                                                  container image. Cannot be updated.
                                                type: string
                                        hostAliases:
                                          description: HostAliases is an optional
                                            list of hosts and IPs that will be injected
                                            into the pod's hosts file if specified.
                                            This is only valid for non-hostNetwork
                                            pods.
                                          type: array
                                          items:
                                            description: HostAlias holds the mapping
                                              between IP and hostnames that will be
                                              injected as an entry in the pod's hosts
                                              file.
                                            type: object
                                            properties:
                                              hostnames:
                                                description: Hostnames for the above
                                                  IP address.
                                                type: array
                                                items:
                                                  type: string
                                              ip:
                                                description: IP address of the host
                                                  file entry.
                                                type: string
                                        hostIPC:
                                          description: 'Use the host''s ipc namespace.
                                            Optional: Default to false.'
                                          type: boolean
                                        hostNetwork:
                                          description: Host networking requested for
                                            this pod. Use the host's network namespace.
                                            If this option is set, the ports that
                                            will be used must be specified. Default
                                            to false.
                                          type: boolean
                                        hostPID:
                                          description: 'Use the host''s pid namespace.
                                            Optional: Default to false.'
                                          type: boolean
                                        hostUsers:
                                          description: 'Use the host''s user namespace.
                                            Optional: Default to true. If set to true
                                            or not present, the pod will be run in
                                            the host user namespace, useful for when
                                            the pod needs a feature only available
                                            to the host user namespace, such as loading
                                            a kernel module with CAP_SYS_MODULE. When
                                            set to false, a new userns is created
                                            for the pod. Setting false is useful for
                                            mitigating container breakout vulnerabilities
                                            even allowing users to run their containers
                                            as root without actually having root privileges
                                            on the host. This field is alpha-level
                                            and is only honored by servers that enable
                                            the UserNamespacesSupport feature.'
                                          type: boolean
                                        hostname:
                                          description: Specifies the hostname of the
                                            Pod If not specified, the pod's hostname
                                            will be set to a system-defined value.
                                          type: string
                                        imagePullSecrets:
                                          description: 'ImagePullSecrets is an optional
                                            list of references to secrets in the same
                                            namespace to use for pulling any of the
                                            images used by this PodSpec. If specified,
                                            these secrets will be passed to individual
                                            puller implementations for them to use.
                                            More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod'
                                          type: array
                                          items:
                                            description: LocalObjectReference contains
                                              enough information to let you locate
                                              the referenced object inside the same
                                              namespace.
                                            type: object
                                            properties:
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                        initContainers:
                                          description: 'List of initialization containers
                                            belonging to the pod. Init containers
                                            are executed in order prior to containers
                                            being started. If any init container fails,
                                            the pod is considered to have failed and
                                            is handled according to its restartPolicy.
                                            The name for an init container or normal
                                            container must be unique among all containers.
                                            Init containers may not have Lifecycle
                                            actions, Readiness probes, Liveness probes,
                                            or Startup probes. The resourceRequirements
                                            of an init container are taken into account
                                            during scheduling by finding the highest
                                            request/limit for each resource type,
                                            and then using the max of of that value
                                            or the sum of the normal containers. Limits
                                            are applied to init containers in a similar
                                            fashion. Init containers cannot currently
                                            be added or removed. Cannot be updated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/'
                                          type: array
                                          items:
                                            description: A single application container
                                              that you want to run within a pod.
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              args:
                                                description: 'Arguments to the entrypoint.
                                                  The container image''s CMD is used
                                                  if this is not provided. Variable
                                                  references $(VAR_NAME) are expanded
                                                  using the container''s environment.
                                                  If a variable cannot be resolved,
                                                  the reference in the input string
                                                  will be unchanged. Double $$ are
                                                  reduced to a single $, which allows
                                                  for escaping the $(VAR_NAME) syntax:
                                                  i.e. "$$(VAR_NAME)" will produce
                                                  the string literal "$(VAR_NAME)".
                                                  Escaped references will never be
                                                  expanded, regardless of whether
                                                  the variable exists or not. Cannot
                                                  be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                type: array
                                                items:
                                                  type: string
                                              command:
                                                description: 'Entrypoint array. Not
                                                  executed within a shell. The container
                                                  image''s ENTRYPOINT is used if this
                                                  is not provided. Variable references
                                                  $(VAR_NAME) are expanded using the
                                                  container''s environment. If a variable
                                                  cannot be resolved, the reference
                                                  in the input string will be unchanged.
                                                  Double $$ are reduced to a single
                                                  $, which allows for escaping the
                                                  $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                                  will produce the string literal
                                                  "$(VAR_NAME)". Escaped references
                                                  will never be expanded, regardless
                                                  of whether the variable exists or
                                                  not. Cannot be updated. More info:
                                                  https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                                                type: array
                                                items:
                                                  type: string
                                              env:
                                                description: List of environment variables
                                                  to set in the container. Cannot
                                                  be updated.
                                                type: array
                                                items:
                                                  description: EnvVar represents an
                                                    environment variable present in
                                                    a Container.
                                                  type: object
                                                  required:
                                                  - name
                                                  properties:
                                                    name:
                                                      description: Name of the environment
                                                        variable. Must be a C_IDENTIFIER.
                                                      type: string
                                                    value:
                                                      description: 'Variable references
                                                        $(VAR_NAME) are expanded using
                                                        the previously defined environment
                                                        variables in the container
                                                        and any service environment
                                                        variables. If a variable cannot
                                                        be resolved, the reference
                                                        in the input string will be
                                                        unchanged. Double $$ are reduced
                                                        to a single $, which allows
                                                        for escaping the $(VAR_NAME)
                                                        syntax: i.e. "$$(VAR_NAME)"
                                                        will produce the string literal
                                                        "$(VAR_NAME)". Escaped references
                                                        will never be expanded, regardless
                                                        of whether the variable exists
                                                        or not. Defaults to "".'
                                                      type: string
                                                    valueFrom:
                                                      description: Source for the
                                                        environment variable's value.
                                                        Cannot be used if value is
                                                        not empty.
                                                      type: object
                                                      properties:
                                                        configMapKeyRef:
                                                          description: Selects a key
                                                            of a ConfigMap.
                                                          type: object
                                                          required:
                                                          - key
                                                          properties:
                                                            key:
                                                              description: The key
                                                                to select.
                                                              type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: Specify
                                                                whether the ConfigMap
                                                                or its key must be
                                                                defined
                                                              type: boolean
                                                        fieldRef:
                                                          description: 'Selects a
                                                            field of the pod: supports
                                                            metadata.name, metadata.namespace,
                                                            `metadata.labels[''<KEY>'']`,
                                                            `metadata.annotations[''<KEY>'']`,
                                                            spec.nodeName, spec.serviceAccountName,
                                                            status.hostIP, status.podIP,
                                                            status.podIPs.'
                                                          type: object
                                                          required:
                                                          - fieldPath
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, limits.ephemeral-storage,
                                                            requests.cpu, requests.memory
                                                            and requests.ephemeral-storage)
                                                            are currently supported.'
                                                          type: object
                                                          required:
                                                          - resource
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                                        secretKeyRef:
                                                          description: Selects a key
                                                            of a secret in the pod's
                                                            namespace
                                                          type: object
                                                          required:
                                                          - key
                                                          properties:
                                                            key:
                                                              description: The key
                                                                of the secret to select
                                                                from.  Must be a valid
                                                                secret key.
                                                              type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: Specify
                                                                whether the Secret
                                                                or its key must be
                                                                defined
                                                              type: boolean
                                              envFrom:
                                                description: List of sources to populate
                                                  environment variables in the container.
                                                  The keys defined within a source
                                                  must be a C_IDENTIFIER. All invalid
                                                  keys will be reported as an event
                                                  when the container is starting.
                                                  When a key exists in multiple sources,
                                                  the value associated with the last
                                                  source will take precedence. Values
                                                  defined by an Env with a duplicate
                                                  key will take precedence. Cannot
                                                  be updated.
                                                type: array
                                                items:
                                                  description: EnvFromSource represents
                                                    the source of a set of ConfigMaps
                                                  type: object
                                                  properties:
                                                    configMapRef:
                                                      description: The ConfigMap to
                                                        select from
                                                      type: object
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                        optional:
                                                          description: Specify whether
                                                            the ConfigMap must be
                                                            defined
                                                          type: boolean
                                                    prefix:
                                                      description: An optional identifier
                                                        to prepend to each key in
                                                        the ConfigMap. Must be a C_IDENTIFIER.
                                                      type: string
                                                    secretRef:
                                                      description: The Secret to select
                                                        from
                                                      type: object
                                                      properties:
                                                        name:
                                                          description: 'Name of the
                                                            referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                            TODO: Add other useful
                                                            fields. apiVersion, kind,
                                                            uid?'
                                                          type: string
                                                        optional:
                                                          description: Specify whether
                                                            the Secret must be defined
                                                          type: boolean
                                              image:
                                                description: 'Container image name.
                                                  More info: https://kubernetes.io/docs/concepts/containers/images
                                                  This field is optional to allow
                                                  higher level config management to
                                                  default or override container images
                                                  in workload controllers like Deployments
                                                  and StatefulSets.'
                                                type: string
                                              imagePullPolicy:
                                                description: 'Image pull policy. One
                                                  of Always, Never, IfNotPresent.
                                                  Defaults to Always if :latest tag
                                                  is specified, or IfNotPresent otherwise.
                                                  Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                                                type: string
                                              lifecycle:
                                                description: Actions that the management
                                                  system should take in response to
                                                  container lifecycle events. Cannot
                                                  be updated.
                                                type: object
                                                properties:
                                                  postStart:
                                                    description: 'PostStart is called
                                                      immediately after a container
                                                      is created. If the handler fails,
                                                      the container is terminated
                                                      and restarted according to its
                                                      restart policy. Other management
                                                      of the container blocks until
                                                      the hook completes. More info:
                                                      https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                    type: object
                                                    properties:
                                                      exec:
                                                        description: Exec specifies
                                                          the action to take.
                                                        type: object
                                                        properties:
                                                          command:
                                                            description: Command is
                                                              the command line to
                                                              execute inside the container,
                                                              the working directory
                                                              for the command  is
                                                              root ('/') in the container's
                                                              filesystem. The command
                                                              is simply exec'd, it
                                                              is not run inside a
                                                              shell, so traditional
                                                              shell instructions ('|',
                                                              etc) won't work. To
                                                              use a shell, you need
                                                              to explicitly call out
                                                              to that shell. Exit
                                                              status of 0 is treated
                                                              as live/healthy and
                                                              non-zero is unhealthy.
                                                            type: array
                                                            items:
                                                              type: string
                                                      httpGet:
                                                        description: HTTPGet specifies
                                                          the http request to perform.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: Host name
                                                              to connect to, defaults
                                                              to the pod IP. You probably
                                                              want to set "Host" in
                                                              httpHeaders instead.
                                                            type: string
                                                          httpHeaders:
                                                            description: Custom headers
                                                              to set in the request.
                                                              HTTP allows repeated
                                                              headers.
                                                            type: array
                                                            items:
                                                              description: HTTPHeader
                                                                describes a custom
                                                                header to be used
                                                                in HTTP probes
                                                              type: object
                                                              required:
                                                              - name
                                                              - value
                                                              properties:
                                                                name:
                                                                  description: The
                                                                    header field name
                                                                  type: string
                                                                value:
                                                                  description: The
                                                                    header field value
                                                                  type: string
                                                          path:
                                                            description: Path to access
                                                              on the HTTP server.
                                                            type: string
                                                          port:
                                                            description: Name or number
                                                              of the port to access
                                                              on the container. Number
                                                              must be in the range
                                                              1 to 65535. Name must
                                                              be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                          scheme:
                                                            description: Scheme to
                                                              use for connecting to
                                                              the host. Defaults to
                                                              HTTP.
                                                            type: string
                                                      tcpSocket:
                                                        description: Deprecated. TCPSocket
                                                          is NOT supported as a LifecycleHandler
                                                          and kept for the backward
                                                          compatibility. There are
                                                          no validation of this field
                                                          and lifecycle hooks will
                                                          fail in runtime when tcp
                                                          handler is specified.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: 'Optional:
                                                              Host name to connect
                                                              to, defaults to the
                                                              pod IP.'
                                                            type: string
                                                          port:
                                                            description: Number or
                                                              name of the port to
                                                              access on the container.
                                                              Number must be in the
                                                              range 1 to 65535. Name
                                                              must be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                  preStop:
                                                    description: 'PreStop is called
                                                      immediately before a container
                                                      is terminated due to an API
                                                      request or management event
                                                      such as liveness/startup probe
                                                      failure, preemption, resource
                                                      contention, etc. The handler
                                                      is not called if the container
                                                      crashes or exits. The Pod''s
                                                      termination grace period countdown
                                                      begins before the PreStop hook
                                                      is executed. Regardless of the
                                                      outcome of the handler, the
                                                      container will eventually terminate
                                                      within the Pod''s termination
                                                      grace period (unless delayed
                                                      by finalizers). Other management
                                                      of the container blocks until
                                                      the hook completes or until
                                                      the termination grace period
                                                      is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                                    type: object
                                                    properties:
                                                      exec:
                                                        description: Exec specifies
                                                          the action to take.
                                                        type: object
                                                        properties:
                                                          command:
                                                            description: Command is
                                                              the command line to
                                                              execute inside the container,
                                                              the working directory
                                                              for the command  is
                                                              root ('/') in the container's
                                                              filesystem. The command
                                                              is simply exec'd, it
                                                              is not run inside a
                                                              shell, so traditional
                                                              shell instructions ('|',
                                                              etc) won't work. To
                                                              use a shell, you need
                                                              to explicitly call out
                                                              to that shell. Exit
                                                              status of 0 is treated
                                                              as live/healthy and
                                                              non-zero is unhealthy.
                                                            type: array
                                                            items:
                                                              type: string
                                                      httpGet:
                                                        description: HTTPGet specifies
                                                          the http request to perform.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: Host name
                                                              to connect to, defaults
                                                              to the pod IP. You probably
                                                              want to set "Host" in
                                                              httpHeaders instead.
                                                            type: string
                                                          httpHeaders:
                                                            description: Custom headers
                                                              to set in the request.
                                                              HTTP allows repeated
                                                              headers.
                                                            type: array
                                                            items:
                                                              description: HTTPHeader
                                                                describes a custom
                                                                header to be used
                                                                in HTTP probes
                                                              type: object
                                                              required:
                                                              - name
                                                              - value
                                                              properties:
                                                                name:
                                                                  description: The
                                                                    header field name
                                                                  type: string
                                                                value:
                                                                  description: The
                                                                    header field value
                                                                  type: string
                                                          path:
                                                            description: Path to access
                                                              on the HTTP server.
                                                            type: string
                                                          port:
                                                            description: Name or number
                                                              of the port to access
                                                              on the container. Number
                                                              must be in the range
                                                              1 to 65535. Name must
                                                              be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                                          scheme:
                                                            description: Scheme to
                                                              use for connecting to
                                                              the host. Defaults to
                                                              HTTP.
                                                            type: string
                                                      tcpSocket:
                                                        description: Deprecated. TCPSocket
                                                          is NOT supported as a LifecycleHandler
                                                          and kept for the backward
                                                          compatibility. There are
                                                          no validation of this field
                                                          and lifecycle hooks will
                                                          fail in runtime when tcp
                                                          handler is specified.
                                                        type: object
                                                        required:
                                                        - port
                                                        properties:
                                                          host:
                                                            description: 'Optional:
                                                              Host name to connect
                                                              to, defaults to the
                                                              pod IP.'
                                                            type: string
                                                          port:
                                                            description: Number or
                                                              name of the port to
                                                              access on the container.
                                                              Number must be in the
                                                              range 1 to 65535. Name
                                                              must be an IANA_SVC_NAME.
                                                            anyOf:
                                                            - type: integer
                                                            - type: string
                                                            x-kubernetes-int-or-string: true
                                              livenessProbe:
                                                description: 'Periodic probe of container
                                                  liveness. Container will be restarted
                                                  if the probe fails. Cannot be updated.
                                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              name:
                                                description: Name of the container
                                                  specified as a DNS_LABEL. Each container
                                                  in a pod must have a unique name
                                                  (DNS_LABEL). Cannot be updated.
                                                type: string
                                              ports:
                                                description: List of ports to expose
                                                  from the container. Not specifying
                                                  a port here DOES NOT prevent that
                                                  port from being exposed. Any port
                                                  which is listening on the default
                                                  "0.0.0.0" address inside a container
                                                  will be accessible from the network.
                                                  Modifying this array with strategic
                                                  merge patch may corrupt the data.
                                                  For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                                                  Cannot be updated.
                                                type: array
                                                items:
                                                  description: ContainerPort represents
                                                    a network port in a single container.
                                                  type: object
                                                  required:
                                                  - containerPort
                                                  properties:
                                                    containerPort:
                                                      description: Number of port
                                                        to expose on the pod's IP
                                                        address. This must be a valid
                                                        port number, 0 < x < 65536.
                                                      type: integer
                                                      format: int32
                                                    hostIP:
                                                      description: What host IP to
                                                        bind the external port to.
                                                      type: string
                                                    hostPort:
                                                      description: Number of port
                                                        to expose on the host. If
                                                        specified, this must be a
                                                        valid port number, 0 < x <
                                                        65536. If HostNetwork is specified,
                                                        this must match ContainerPort.
                                                        Most containers do not need
                                                        this.
                                                      type: integer
                                                      format: int32
                                                    name:
                                                      description: If specified, this
                                                        must be an IANA_SVC_NAME and
                                                        unique within the pod. Each
                                                        named port in a pod must have
                                                        a unique name. Name for the
                                                        port that can be referred
                                                        to by services.
                                                      type: string
                                                    protocol:
                                                      description: Protocol for port.
                                                        Must be UDP, TCP, or SCTP.
                                                        Defaults to "TCP".
                                                      type: string
                                                      default: TCP
                                                x-kubernetes-list-map-keys:
                                                - containerPort
                                                - protocol
                                                x-kubernetes-list-type: map
                                              readinessProbe:
                                                description: 'Periodic probe of container
                                                  service readiness. Container will
                                                  be removed from service endpoints
                                                  if the probe fails. Cannot be updated.
                                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              resources:
                                                description: 'Compute Resources required
                                                  by this container. Cannot be updated.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                type: object
                                                properties:
                                                  claims:
                                                    description: "Claims lists the\
                                                      \ names of resources, defined\
                                                      \ in spec.resourceClaims, that\
                                                      \ are used by this container.\
                                                      \ \n This is an alpha field\
                                                      \ and requires enabling the\
                                                      \ DynamicResourceAllocation\
                                                      \ feature gate. \n This field\
                                                      \ is immutable."
                                                    type: array
                                                    items:
                                                      description: ResourceClaim references
                                                        one entry in PodSpec.ResourceClaims.
                                                      type: object
                                                      required:
                                                      - name
                                                      properties:
                                                        name:
                                                          description: Name must match
                                                            the name of one entry
                                                            in pod.spec.resourceClaims
                                                            of the Pod where this
                                                            field is used. It makes
                                                            that resource available
                                                            inside a container.
                                                          type: string
                                                    x-kubernetes-list-map-keys:
                                                    - name
                                                    x-kubernetes-list-type: map
                                                  limits:
                                                    description: 'Limits describes
                                                      the maximum amount of compute
                                                      resources allowed. More info:
                                                      https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                    additionalProperties:
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      x-kubernetes-int-or-string: true
                                                  requests:
                                                    description: 'Requests describes
                                                      the minimum amount of compute
                                                      resources required. If Requests
                                                      is omitted for a container,
                                                      it defaults to Limits if that
                                                      is explicitly specified, otherwise
                                                      to an implementation-defined
                                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                    type: object
                                                    additionalProperties:
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      anyOf:
                                                      - type: integer
                                                      - type: string
                                                      x-kubernetes-int-or-string: true
                                              securityContext:
                                                description: 'SecurityContext defines
                                                  the security options the container
                                                  should be run with. If set, the
                                                  fields of SecurityContext override
                                                  the equivalent fields of PodSecurityContext.
                                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                                                type: object
                                                properties:
                                                  allowPrivilegeEscalation:
                                                    description: 'AllowPrivilegeEscalation
                                                      controls whether a process can
                                                      gain more privileges than its
                                                      parent process. This bool directly
                                                      controls if the no_new_privs
                                                      flag will be set on the container
                                                      process. AllowPrivilegeEscalation
                                                      is true always when the container
                                                      is: 1) run as Privileged 2)
                                                      has CAP_SYS_ADMIN Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.'
                                                    type: boolean
                                                  capabilities:
                                                    description: The capabilities
                                                      to add/drop when running containers.
                                                      Defaults to the default set
                                                      of capabilities granted by the
                                                      container runtime. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: object
                                                    properties:
                                                      add:
                                                        description: Added capabilities
                                                        type: array
                                                        items:
                                                          description: Capability
                                                            represent POSIX capabilities
                                                            type
                                                          type: string
                                                      drop:
                                                        description: Removed capabilities
                                                        type: array
                                                        items:
                                                          description: Capability
                                                            represent POSIX capabilities
                                                            type
                                                          type: string
                                                  privileged:
                                                    description: Run container in
                                                      privileged mode. Processes in
                                                      privileged containers are essentially
                                                      equivalent to root on the host.
                                                      Defaults to false. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: boolean
                                                  procMount:
                                                    description: procMount denotes
                                                      the type of proc mount to use
                                                      for the containers. The default
                                                      is DefaultProcMount which uses
                                                      the container runtime defaults
                                                      for readonly paths and masked
                                                      paths. This requires the ProcMountType
                                                      feature flag to be enabled.
                                                      Note that this field cannot
                                                      be set when spec.os.name is
                                                      windows.
                                                    type: string
                                                  readOnlyRootFilesystem:
                                                    description: Whether this container
                                                      has a read-only root filesystem.
                                                      Default is false. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: boolean
                                                  runAsGroup:
                                                    description: The GID to run the
                                                      entrypoint of the container
                                                      process. Uses runtime default
                                                      if unset. May also be set in
                                                      PodSecurityContext.  If set
                                                      in both SecurityContext and
                                                      PodSecurityContext, the value
                                                      specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: integer
                                                    format: int64
                                                  runAsNonRoot:
                                                    description: Indicates that the
                                                      container must run as a non-root
                                                      user. If true, the Kubelet will
                                                      validate the image at runtime
                                                      to ensure that it does not run
                                                      as UID 0 (root) and fail to
                                                      start the container if it does.
                                                      If unset or false, no such validation
                                                      will be performed. May also
                                                      be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence.
                                                    type: boolean
                                                  runAsUser:
                                                    description: The UID to run the
                                                      entrypoint of the container
                                                      process. Defaults to user specified
                                                      in image metadata if unspecified.
                                                      May also be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: integer
                                                    format: int64
                                                  seLinuxOptions:
                                                    description: The SELinux context
                                                      to be applied to the container.
                                                      If unspecified, the container
                                                      runtime will allocate a random
                                                      SELinux context for each container.  May
                                                      also be set in PodSecurityContext.  If
                                                      set in both SecurityContext
                                                      and PodSecurityContext, the
                                                      value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is windows.
                                                    type: object
                                                    properties:
                                                      level:
                                                        description: Level is SELinux
                                                          level label that applies
                                                          to the container.
                                                        type: string
                                                      role:
                                                        description: Role is a SELinux
                                                          role label that applies
                                                          to the container.
                                                        type: string
                                                      type:
                                                        description: Type is a SELinux
                                                          type label that applies
                                                          to the container.
                                                        type: string
                                                      user:
                                                        description: User is a SELinux
                                                          user label that applies
                                                          to the container.
                                                        type: string
                                                  seccompProfile:
                                                    description: The seccomp options
                                                      to use by this container. If
                                                      seccomp options are provided
                                                      at both the pod & container
                                                      level, the container options
                                                      override the pod options. Note
                                                      that this field cannot be set
                                                      when spec.os.name is windows.
                                                    type: object
                                                    required:
                                                    - type
                                                    properties:
                                                      localhostProfile:
                                                        description: localhostProfile
                                                          indicates a profile defined
                                                          in a file on the node should
                                                          be used. The profile must
                                                          be preconfigured on the
                                                          node to work. Must be a
                                                          descending path, relative
                                                          to the kubelet's configured
                                                          seccomp profile location.
                                                          Must only be set if type
                                                          is "Localhost".
                                                        type: string
                                                      type:
                                                        description: "type indicates\
                                                          \ which kind of seccomp\
                                                          \ profile will be applied.\
                                                          \ Valid options are: \n\
                                                          \ Localhost - a profile\
                                                          \ defined in a file on the\
                                                          \ node should be used. RuntimeDefault\
                                                          \ - the container runtime\
                                                          \ default profile should\
                                                          \ be used. Unconfined -\
                                                          \ no profile should be applied."
                                                        type: string
                                                  windowsOptions:
                                                    description: The Windows specific
                                                      settings applied to all containers.
                                                      If unspecified, the options
                                                      from the PodSecurityContext
                                                      will be used. If set in both
                                                      SecurityContext and PodSecurityContext,
                                                      the value specified in SecurityContext
                                                      takes precedence. Note that
                                                      this field cannot be set when
                                                      spec.os.name is linux.
                                                    type: object
                                                    properties:
                                                      gmsaCredentialSpec:
                                                        description: GMSACredentialSpec
                                                          is where the GMSA admission
                                                          webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                                          inlines the contents of
                                                          the GMSA credential spec
                                                          named by the GMSACredentialSpecName
                                                          field.
                                                        type: string
                                                      gmsaCredentialSpecName:
                                                        description: GMSACredentialSpecName
                                                          is the name of the GMSA
                                                          credential spec to use.
                                                        type: string
                                                      hostProcess:
                                                        description: HostProcess determines
                                                          if a container should be
                                                          run as a 'Host Process'
                                                          container. This field is
                                                          alpha-level and will only
                                                          be honored by components
                                                          that enable the WindowsHostProcessContainers
                                                          feature flag. Setting this
                                                          field without the feature
                                                          flag will result in errors
                                                          when validating the Pod.
                                                          All of a Pod's containers
                                                          must have the same effective
                                                          HostProcess value (it is
                                                          not allowed to have a mix
                                                          of HostProcess containers
                                                          and non-HostProcess containers).  In
                                                          addition, if HostProcess
                                                          is true then HostNetwork
                                                          must also be set to true.
                                                        type: boolean
                                                      runAsUserName:
                                                        description: The UserName
                                                          in Windows to run the entrypoint
                                                          of the container process.
                                                          Defaults to the user specified
                                                          in image metadata if unspecified.
                                                          May also be set in PodSecurityContext.
                                                          If set in both SecurityContext
                                                          and PodSecurityContext,
                                                          the value specified in SecurityContext
                                                          takes precedence.
                                                        type: string
                                              startupProbe:
                                                description: 'StartupProbe indicates
                                                  that the Pod has successfully initialized.
                                                  If specified, no other probes are
                                                  executed until this completes successfully.
                                                  If this probe fails, the Pod will
                                                  be restarted, just as if the livenessProbe
                                                  failed. This can be used to provide
                                                  different probe parameters at the
                                                  beginning of a Pod''s lifecycle,
                                                  when it might take a long time to
                                                  load data or warm a cache, than
                                                  during steady-state operation. This
                                                  cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                type: object
                                                properties:
                                                  exec:
                                                    description: Exec specifies the
                                                      action to take.
                                                    type: object
                                                    properties:
                                                      command:
                                                        description: Command is the
                                                          command line to execute
                                                          inside the container, the
                                                          working directory for the
                                                          command  is root ('/') in
                                                          the container's filesystem.
                                                          The command is simply exec'd,
                                                          it is not run inside a shell,
                                                          so traditional shell instructions
                                                          ('|', etc) won't work. To
                                                          use a shell, you need to
                                                          explicitly call out to that
                                                          shell. Exit status of 0
                                                          is treated as live/healthy
                                                          and non-zero is unhealthy.
                                                        type: array
                                                        items:
                                                          type: string
                                                  failureThreshold:
                                                    description: Minimum consecutive
                                                      failures for the probe to be
                                                      considered failed after having
                                                      succeeded. Defaults to 3. Minimum
                                                      value is 1.
                                                    type: integer
                                                    format: int32
                                                  grpc:
                                                    description: GRPC specifies an
                                                      action involving a GRPC port.
                                                      This is a beta field and requires
                                                      enabling GRPCContainerProbe
                                                      feature gate.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      port:
                                                        description: Port number of
                                                          the gRPC service. Number
                                                          must be in the range 1 to
                                                          65535.
                                                        type: integer
                                                        format: int32
                                                      service:
                                                        description: "Service is the\
                                                          \ name of the service to\
                                                          \ place in the gRPC HealthCheckRequest\
                                                          \ (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                                          \ \n If this is not specified,\
                                                          \ the default behavior is\
                                                          \ defined by gRPC."
                                                        type: string
                                                  httpGet:
                                                    description: HTTPGet specifies
                                                      the http request to perform.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: Host name to
                                                          connect to, defaults to
                                                          the pod IP. You probably
                                                          want to set "Host" in httpHeaders
                                                          instead.
                                                        type: string
                                                      httpHeaders:
                                                        description: Custom headers
                                                          to set in the request. HTTP
                                                          allows repeated headers.
                                                        type: array
                                                        items:
                                                          description: HTTPHeader
                                                            describes a custom header
                                                            to be used in HTTP probes
                                                          type: object
                                                          required:
                                                          - name
                                                          - value
                                                          properties:
                                                            name:
                                                              description: The header
                                                                field name
                                                              type: string
                                                            value:
                                                              description: The header
                                                                field value
                                                              type: string
                                                      path:
                                                        description: Path to access
                                                          on the HTTP server.
                                                        type: string
                                                      port:
                                                        description: Name or number
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                      scheme:
                                                        description: Scheme to use
                                                          for connecting to the host.
                                                          Defaults to HTTP.
                                                        type: string
                                                  initialDelaySeconds:
                                                    description: 'Number of seconds
                                                      after the container has started
                                                      before liveness probes are initiated.
                                                      More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                                  periodSeconds:
                                                    description: How often (in seconds)
                                                      to perform the probe. Default
                                                      to 10 seconds. Minimum value
                                                      is 1.
                                                    type: integer
                                                    format: int32
                                                  successThreshold:
                                                    description: Minimum consecutive
                                                      successes for the probe to be
                                                      considered successful after
                                                      having failed. Defaults to 1.
                                                      Must be 1 for liveness and startup.
                                                      Minimum value is 1.
                                                    type: integer
                                                    format: int32
                                                  tcpSocket:
                                                    description: TCPSocket specifies
                                                      an action involving a TCP port.
                                                    type: object
                                                    required:
                                                    - port
                                                    properties:
                                                      host:
                                                        description: 'Optional: Host
                                                          name to connect to, defaults
                                                          to the pod IP.'
                                                        type: string
                                                      port:
                                                        description: Number or name
                                                          of the port to access on
                                                          the container. Number must
                                                          be in the range 1 to 65535.
                                                          Name must be an IANA_SVC_NAME.
                                                        anyOf:
                                                        - type: integer
                                                        - type: string
                                                        x-kubernetes-int-or-string: true
                                                  terminationGracePeriodSeconds:
                                                    description: Optional duration
                                                      in seconds the pod needs to
                                                      terminate gracefully upon probe
                                                      failure. The grace period is
                                                      the duration in seconds after
                                                      the processes running in the
                                                      pod are sent a termination signal
                                                      and the time when the processes
                                                      are forcibly halted with a kill
                                                      signal. Set this value longer
                                                      than the expected cleanup time
                                                      for your process. If this value
                                                      is nil, the pod's terminationGracePeriodSeconds
                                                      will be used. Otherwise, this
                                                      value overrides the value provided
                                                      by the pod spec. Value must
                                                      be non-negative integer. The
                                                      value zero indicates stop immediately
                                                      via the kill signal (no opportunity
                                                      to shut down). This is a beta
                                                      field and requires enabling
                                                      ProbeTerminationGracePeriod
                                                      feature gate. Minimum value
                                                      is 1. spec.terminationGracePeriodSeconds
                                                      is used if unset.
                                                    type: integer
                                                    format: int64
                                                  timeoutSeconds:
                                                    description: 'Number of seconds
                                                      after which the probe times
                                                      out. Defaults to 1 second. Minimum
                                                      value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                                    type: integer
                                                    format: int32
                                              stdin:
                                                description: Whether this container
                                                  should allocate a buffer for stdin
                                                  in the container runtime. If this
                                                  is not set, reads from stdin in
                                                  the container will always result
                                                  in EOF. Default is false.
                                                type: boolean
                                              stdinOnce:
                                                description: Whether the container
                                                  runtime should close the stdin channel
                                                  after it has been opened by a single
                                                  attach. When stdin is true the stdin
                                                  stream will remain open across multiple
                                                  attach sessions. If stdinOnce is
                                                  set to true, stdin is opened on
                                                  container start, is empty until
                                                  the first client attaches to stdin,
                                                  and then remains open and accepts
                                                  data until the client disconnects,
                                                  at which time stdin is closed and
                                                  remains closed until the container
                                                  is restarted. If this flag is false,
                                                  a container processes that reads
                                                  from stdin will never receive an
                                                  EOF. Default is false
                                                type: boolean
                                              terminationMessagePath:
                                                description: 'Optional: Path at which
                                                  the file to which the container''s
                                                  termination message will be written
                                                  is mounted into the container''s
                                                  filesystem. Message written is intended
                                                  to be brief final status, such as
                                                  an assertion failure message. Will
                                                  be truncated by the node if greater
                                                  than 4096 bytes. The total message
                                                  length across all containers will
                                                  be limited to 12kb. Defaults to
                                                  /dev/termination-log. Cannot be
                                                  updated.'
                                                type: string
                                              terminationMessagePolicy:
                                                description: Indicate how the termination
                                                  message should be populated. File
                                                  will use the contents of terminationMessagePath
                                                  to populate the container status
                                                  message on both success and failure.
                                                  FallbackToLogsOnError will use the
                                                  last chunk of container log output
                                                  if the termination message file
                                                  is empty and the container exited
                                                  with an error. The log output is
                                                  limited to 2048 bytes or 80 lines,
                                                  whichever is smaller. Defaults to
                                                  File. Cannot be updated.
                                                type: string
                                              tty:
                                                description: Whether this container
                                                  should allocate a TTY for itself,
                                                  also requires 'stdin' to be true.
                                                  Default is false.
                                                type: boolean
                                              volumeDevices:
                                                description: volumeDevices is the
                                                  list of block devices to be used
                                                  by the container.
                                                type: array
                                                items:
                                                  description: volumeDevice describes
                                                    a mapping of a raw block device
                                                    within a container.
                                                  type: object
                                                  required:
                                                  - devicePath
                                                  - name
                                                  properties:
                                                    devicePath:
                                                      description: devicePath is the
                                                        path inside of the container
                                                        that the device will be mapped
                                                        to.
                                                      type: string
                                                    name:
                                                      description: name must match
                                                        the name of a persistentVolumeClaim
                                                        in the pod
                                                      type: string
                                              volumeMounts:
                                                description: Pod volumes to mount
                                                  into the container's filesystem.
                                                  Cannot be updated.
                                                type: array
                                                items:
                                                  description: VolumeMount describes
                                                    a mounting of a Volume within
                                                    a container.
                                                  type: object
                                                  required:
                                                  - mountPath
                                                  - name
                                                  properties:
                                                    mountPath:
                                                      description: Path within the
                                                        container at which the volume
                                                        should be mounted.  Must not
                                                        contain ':'.
                                                      type: string
                                                    mountPropagation:
                                                      description: mountPropagation
                                                        determines how mounts are
                                                        propagated from the host to
                                                        container and the other way
                                                        around. When not set, MountPropagationNone
                                                        is used. This field is beta
                                                        in 1.10.
                                                      type: string
                                                    name:
                                                      description: This must match
                                                        the Name of a Volume.
                                                      type: string
                                                    readOnly:
                                                      description: Mounted read-only
                                                        if true, read-write otherwise
                                                        (false or unspecified). Defaults
                                                        to false.
                                                      type: boolean
                                                    subPath:
                                                      description: Path within the
                                                        volume from which the container's
                                                        volume should be mounted.
                                                        Defaults to "" (volume's root).
                                                      type: string
                                                    subPathExpr:
                                                      description: Expanded path within
                                                        the volume from which the
                                                        container's volume should
                                                        be mounted. Behaves similarly
                                                        to SubPath but environment
                                                        variable references $(VAR_NAME)
                                                        are expanded using the container's
                                                        environment. Defaults to ""
                                                        (volume's root). SubPathExpr
                                                        and SubPath are mutually exclusive.
                                                      type: string
                                              workingDir:
                                                description: Container's working directory.
                                                  If not specified, the container
                                                  runtime's default will be used,
                                                  which might be configured in the
                                                  container image. Cannot be updated.
                                                type: string
                                        nodeName:
                                          description: NodeName is a request to schedule
                                            this pod onto a specific node. If it is
                                            non-empty, the scheduler simply schedules
                                            this pod onto that node, assuming that
                                            it fits resource requirements.
                                          type: string
                                        nodeSelector:
                                          description: 'NodeSelector is a selector
                                            which must be true for the pod to fit
                                            on a node. Selector which must match a
                                            node''s labels for the pod to be scheduled
                                            on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                          type: object
                                          additionalProperties:
                                            type: string
                                          x-kubernetes-map-type: atomic
                                        os:
                                          description: "Specifies the OS of the containers\
                                            \ in the pod. Some pod and container fields\
                                            \ are restricted if this is set. \n If\
                                            \ the OS field is set to linux, the following\
                                            \ fields must be unset: -securityContext.windowsOptions\
                                            \ \n If the OS field is set to windows,\
                                            \ following fields must be unset: - spec.hostPID\
                                            \ - spec.hostIPC - spec.hostUsers - spec.securityContext.seLinuxOptions\
                                            \ - spec.securityContext.seccompProfile\
                                            \ - spec.securityContext.fsGroup - spec.securityContext.fsGroupChangePolicy\
                                            \ - spec.securityContext.sysctls - spec.shareProcessNamespace\
                                            \ - spec.securityContext.runAsUser - spec.securityContext.runAsGroup\
                                            \ - spec.securityContext.supplementalGroups\
                                            \ - spec.containers[*].securityContext.seLinuxOptions\
                                            \ - spec.containers[*].securityContext.seccompProfile\
                                            \ - spec.containers[*].securityContext.capabilities\
                                            \ - spec.containers[*].securityContext.readOnlyRootFilesystem\
                                            \ - spec.containers[*].securityContext.privileged\
                                            \ - spec.containers[*].securityContext.allowPrivilegeEscalation\
                                            \ - spec.containers[*].securityContext.procMount\
                                            \ - spec.containers[*].securityContext.runAsUser\
                                            \ - spec.containers[*].securityContext.runAsGroup"
                                          type: object
                                          required:
                                          - name
                                          properties:
                                            name:
                                              description: 'Name is the name of the
                                                operating system. The currently supported
                                                values are linux and windows. Additional
                                                value may be defined in future and
                                                can be one of: https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
                                                Clients should expect to handle additional
                                                values and treat unrecognized values
                                                in this field as os: null'
                                              type: string
                                        overhead:
                                          description: 'Overhead represents the resource
                                            overhead associated with running a pod
                                            for a given RuntimeClass. This field will
                                            be autopopulated at admission time by
                                            the RuntimeClass admission controller.
                                            If the RuntimeClass admission controller
                                            is enabled, overhead must not be set in
                                            Pod create requests. The RuntimeClass
                                            admission controller will reject Pod create
                                            requests which have the overhead already
                                            set. If RuntimeClass is configured and
                                            selected in the PodSpec, Overhead will
                                            be set to the value defined in the corresponding
                                            RuntimeClass, otherwise it will remain
                                            unset and treated as zero. More info:
                                            https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md'
                                          type: object
                                          additionalProperties:
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            x-kubernetes-int-or-string: true
                                        preemptionPolicy:
                                          description: PreemptionPolicy is the Policy
                                            for preempting pods with lower priority.
                                            One of Never, PreemptLowerPriority. Defaults
                                            to PreemptLowerPriority if unset.
                                          type: string
                                        priority:
                                          description: The priority value. Various
                                            system components use this field to find
                                            the priority of the pod. When Priority
                                            Admission Controller is enabled, it prevents
                                            users from setting this field. The admission
                                            controller populates this field from PriorityClassName.
                                            The higher the value, the higher the priority.
                                          type: integer
                                          format: int32
                                        priorityClassName:
                                          description: If specified, indicates the
                                            pod's priority. "system-node-critical"
                                            and "system-cluster-critical" are two
                                            special keywords which indicate the highest
                                            priorities with the former being the highest
                                            priority. Any other name must be defined
                                            by creating a PriorityClass object with
                                            that name. If not specified, the pod priority
                                            will be default or zero if there is no
                                            default.
                                          type: string
                                        readinessGates:
                                          description: 'If specified, all readiness
                                            gates will be evaluated for pod readiness.
                                            A pod is ready when all its containers
                                            are ready AND all conditions specified
                                            in the readiness gates have status equal
                                            to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates'
                                          type: array
                                          items:
                                            description: PodReadinessGate contains
                                              the reference to a pod condition
                                            type: object
                                            required:
                                            - conditionType
                                            properties:
                                              conditionType:
                                                description: ConditionType refers
                                                  to a condition in the pod's condition
                                                  list with matching type.
                                                type: string
                                        resourceClaims:
                                          description: "ResourceClaims defines which\
                                            \ ResourceClaims must be allocated and\
                                            \ reserved before the Pod is allowed to\
                                            \ start. The resources will be made available\
                                            \ to those containers which consume them\
                                            \ by name. \n This is an alpha field and\
                                            \ requires enabling the DynamicResourceAllocation\
                                            \ feature gate. \n This field is immutable."
                                          type: array
                                          items:
                                            description: PodResourceClaim references
                                              exactly one ResourceClaim through a
                                              ClaimSource. It adds a name to it that
                                              uniquely identifies the ResourceClaim
                                              inside the Pod. Containers that need
                                              access to the ResourceClaim reference
                                              it with this name.
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              name:
                                                description: Name uniquely identifies
                                                  this resource claim inside the pod.
                                                  This must be a DNS_LABEL.
                                                type: string
                                              source:
                                                description: Source describes where
                                                  to find the ResourceClaim.
                                                type: object
                                                properties:
                                                  resourceClaimName:
                                                    description: ResourceClaimName
                                                      is the name of a ResourceClaim
                                                      object in the same namespace
                                                      as this pod.
                                                    type: string
                                                  resourceClaimTemplateName:
                                                    description: "ResourceClaimTemplateName\
                                                      \ is the name of a ResourceClaimTemplate\
                                                      \ object in the same namespace\
                                                      \ as this pod. \n The template\
                                                      \ will be used to create a new\
                                                      \ ResourceClaim, which will\
                                                      \ be bound to this pod. When\
                                                      \ this pod is deleted, the ResourceClaim\
                                                      \ will also be deleted. The\
                                                      \ name of the ResourceClaim\
                                                      \ will be <pod name>-<resource\
                                                      \ name>, where <resource name>\
                                                      \ is the PodResourceClaim.Name.\
                                                      \ Pod validation will reject\
                                                      \ the pod if the concatenated\
                                                      \ name is not valid for a ResourceClaim\
                                                      \ (e.g. too long). \n An existing\
                                                      \ ResourceClaim with that name\
                                                      \ that is not owned by the pod\
                                                      \ will not be used for the pod\
                                                      \ to avoid using an unrelated\
                                                      \ resource by mistake. Scheduling\
                                                      \ and pod startup are then blocked\
                                                      \ until the unrelated ResourceClaim\
                                                      \ is removed. \n This field\
                                                      \ is immutable and no changes\
                                                      \ will be made to the corresponding\
                                                      \ ResourceClaim by the control\
                                                      \ plane after creating the ResourceClaim."
                                                    type: string
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        restartPolicy:
                                          description: 'Restart policy for all containers
                                            within the pod. One of Always, OnFailure,
                                            Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy'
                                          type: string
                                        runtimeClassName:
                                          description: 'RuntimeClassName refers to
                                            a RuntimeClass object in the node.k8s.io
                                            group, which should be used to run this
                                            pod.  If no RuntimeClass resource matches
                                            the named class, the pod will not be run.
                                            If unset or empty, the "legacy" RuntimeClass
                                            will be used, which is an implicit class
                                            with an empty definition that uses the
                                            default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class'
                                          type: string
                                        schedulerName:
                                          description: If specified, the pod will
                                            be dispatched by specified scheduler.
                                            If not specified, the pod will be dispatched
                                            by default scheduler.
                                          type: string
                                        schedulingGates:
                                          description: "SchedulingGates is an opaque\
                                            \ list of values that if specified will\
                                            \ block scheduling the pod. More info:\
                                            \  https://git.k8s.io/enhancements/keps/sig-scheduling/3521-pod-scheduling-readiness.\
                                            \ \n This is an alpha-level feature enabled\
                                            \ by PodSchedulingReadiness feature gate."
                                          type: array
                                          items:
                                            description: PodSchedulingGate is associated
                                              to a Pod to guard its scheduling.
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              name:
                                                description: Name of the scheduling
                                                  gate. Each scheduling gate must
                                                  have a unique name field.
                                                type: string
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        securityContext:
                                          description: 'SecurityContext holds pod-level
                                            security attributes and common container
                                            settings. Optional: Defaults to empty.  See
                                            type description for default values of
                                            each field.'
                                          type: object
                                          properties:
                                            fsGroup:
                                              description: "A special supplemental\
                                                \ group that applies to all containers\
                                                \ in a pod. Some volume types allow\
                                                \ the Kubelet to change the ownership\
                                                \ of that volume to be owned by the\
                                                \ pod: \n 1. The owning GID will be\
                                                \ the FSGroup 2. The setgid bit is\
                                                \ set (new files created in the volume\
                                                \ will be owned by FSGroup) 3. The\
                                                \ permission bits are OR'd with rw-rw----\
                                                \ \n If unset, the Kubelet will not\
                                                \ modify the ownership and permissions\
                                                \ of any volume. Note that this field\
                                                \ cannot be set when spec.os.name\
                                                \ is windows."
                                              type: integer
                                              format: int64
                                            fsGroupChangePolicy:
                                              description: 'fsGroupChangePolicy defines
                                                behavior of changing ownership and
                                                permission of the volume before being
                                                exposed inside Pod. This field will
                                                only apply to volume types which support
                                                fsGroup based ownership(and permissions).
                                                It will have no effect on ephemeral
                                                volume types such as: secret, configmaps
                                                and emptydir. Valid values are "OnRootMismatch"
                                                and "Always". If not specified, "Always"
                                                is used. Note that this field cannot
                                                be set when spec.os.name is windows.'
                                              type: string
                                            runAsGroup:
                                              description: The GID to run the entrypoint
                                                of the container process. Uses runtime
                                                default if unset. May also be set
                                                in SecurityContext.  If set in both
                                                SecurityContext and PodSecurityContext,
                                                the value specified in SecurityContext
                                                takes precedence for that container.
                                                Note that this field cannot be set
                                                when spec.os.name is windows.
                                              type: integer
                                              format: int64
                                            runAsNonRoot:
                                              description: Indicates that the container
                                                must run as a non-root user. If true,
                                                the Kubelet will validate the image
                                                at runtime to ensure that it does
                                                not run as UID 0 (root) and fail to
                                                start the container if it does. If
                                                unset or false, no such validation
                                                will be performed. May also be set
                                                in SecurityContext.  If set in both
                                                SecurityContext and PodSecurityContext,
                                                the value specified in SecurityContext
                                                takes precedence.
                                              type: boolean
                                            runAsUser:
                                              description: The UID to run the entrypoint
                                                of the container process. Defaults
                                                to user specified in image metadata
                                                if unspecified. May also be set in
                                                SecurityContext.  If set in both SecurityContext
                                                and PodSecurityContext, the value
                                                specified in SecurityContext takes
                                                precedence for that container. Note
                                                that this field cannot be set when
                                                spec.os.name is windows.
                                              type: integer
                                              format: int64
                                            seLinuxOptions:
                                              description: The SELinux context to
                                                be applied to all containers. If unspecified,
                                                the container runtime will allocate
                                                a random SELinux context for each
                                                container.  May also be set in SecurityContext.  If
                                                set in both SecurityContext and PodSecurityContext,
                                                the value specified in SecurityContext
                                                takes precedence for that container.
                                                Note that this field cannot be set
                                                when spec.os.name is windows.
                                              type: object
                                              properties:
                                                level:
                                                  description: Level is SELinux level
                                                    label that applies to the container.
                                                  type: string
                                                role:
                                                  description: Role is a SELinux role
                                                    label that applies to the container.
                                                  type: string
                                                type:
                                                  description: Type is a SELinux type
                                                    label that applies to the container.
                                                  type: string
                                                user:
                                                  description: User is a SELinux user
                                                    label that applies to the container.
                                                  type: string
                                            seccompProfile:
                                              description: The seccomp options to
                                                use by the containers in this pod.
                                                Note that this field cannot be set
                                                when spec.os.name is windows.
                                              type: object
                                              required:
                                              - type
                                              properties:
                                                localhostProfile:
                                                  description: localhostProfile indicates
                                                    a profile defined in a file on
                                                    the node should be used. The profile
                                                    must be preconfigured on the node
                                                    to work. Must be a descending
                                                    path, relative to the kubelet's
                                                    configured seccomp profile location.
                                                    Must only be set if type is "Localhost".
                                                  type: string
                                                type:
                                                  description: "type indicates which\
                                                    \ kind of seccomp profile will\
                                                    \ be applied. Valid options are:\
                                                    \ \n Localhost - a profile defined\
                                                    \ in a file on the node should\
                                                    \ be used. RuntimeDefault - the\
                                                    \ container runtime default profile\
                                                    \ should be used. Unconfined -\
                                                    \ no profile should be applied."
                                                  type: string
                                            supplementalGroups:
                                              description: A list of groups applied
                                                to the first process run in each container,
                                                in addition to the container's primary
                                                GID, the fsGroup (if specified), and
                                                group memberships defined in the container
                                                image for the uid of the container
                                                process. If unspecified, no additional
                                                groups are added to any container.
                                                Note that group memberships defined
                                                in the container image for the uid
                                                of the container process are still
                                                effective, even if they are not included
                                                in this list. Note that this field
                                                cannot be set when spec.os.name is
                                                windows.
                                              type: array
                                              items:
                                                type: integer
                                                format: int64
                                            sysctls:
                                              description: Sysctls hold a list of
                                                namespaced sysctls used for the pod.
                                                Pods with unsupported sysctls (by
                                                the container runtime) might fail
                                                to launch. Note that this field cannot
                                                be set when spec.os.name is windows.
                                              type: array
                                              items:
                                                description: Sysctl defines a kernel
                                                  parameter to be set
                                                type: object
                                                required:
                                                - name
                                                - value
                                                properties:
                                                  name:
                                                    description: Name of a property
                                                      to set
                                                    type: string
                                                  value:
                                                    description: Value of a property
                                                      to set
                                                    type: string
                                            windowsOptions:
                                              description: The Windows specific settings
                                                applied to all containers. If unspecified,
                                                the options within a container's SecurityContext
                                                will be used. If set in both SecurityContext
                                                and PodSecurityContext, the value
                                                specified in SecurityContext takes
                                                precedence. Note that this field cannot
                                                be set when spec.os.name is linux.
                                              type: object
                                              properties:
                                                gmsaCredentialSpec:
                                                  description: GMSACredentialSpec
                                                    is where the GMSA admission webhook
                                                    (https://github.com/kubernetes-sigs/windows-gmsa)
                                                    inlines the contents of the GMSA
                                                    credential spec named by the GMSACredentialSpecName
                                                    field.
                                                  type: string
                                                gmsaCredentialSpecName:
                                                  description: GMSACredentialSpecName
                                                    is the name of the GMSA credential
                                                    spec to use.
                                                  type: string
                                                hostProcess:
                                                  description: HostProcess determines
                                                    if a container should be run as
                                                    a 'Host Process' container. This
                                                    field is alpha-level and will
                                                    only be honored by components
                                                    that enable the WindowsHostProcessContainers
                                                    feature flag. Setting this field
                                                    without the feature flag will
                                                    result in errors when validating
                                                    the Pod. All of a Pod's containers
                                                    must have the same effective HostProcess
                                                    value (it is not allowed to have
                                                    a mix of HostProcess containers
                                                    and non-HostProcess containers).  In
                                                    addition, if HostProcess is true
                                                    then HostNetwork must also be
                                                    set to true.
                                                  type: boolean
                                                runAsUserName:
                                                  description: The UserName in Windows
                                                    to run the entrypoint of the container
                                                    process. Defaults to the user
                                                    specified in image metadata if
                                                    unspecified. May also be set in
                                                    PodSecurityContext. If set in
                                                    both SecurityContext and PodSecurityContext,
                                                    the value specified in SecurityContext
                                                    takes precedence.
                                                  type: string
                                        serviceAccount:
                                          description: 'DeprecatedServiceAccount is
                                            a depreciated alias for ServiceAccountName.
                                            Deprecated: Use serviceAccountName instead.'
                                          type: string
                                        serviceAccountName:
                                          description: 'ServiceAccountName is the
                                            name of the ServiceAccount to use to run
                                            this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/'
                                          type: string
                                        setHostnameAsFQDN:
                                          description: If true the pod's hostname
                                            will be configured as the pod's FQDN,
                                            rather than the leaf name (the default).
                                            In Linux containers, this means setting
                                            the FQDN in the hostname field of the
                                            kernel (the nodename field of struct utsname).
                                            In Windows containers, this means setting
                                            the registry value of hostname for the
                                            registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters
                                            to FQDN. If a pod does not have FQDN,
                                            this has no effect. Default to false.
                                          type: boolean
                                        shareProcessNamespace:
                                          description: 'Share a single process namespace
                                            between all of the containers in a pod.
                                            When this is set containers will be able
                                            to view and signal processes from other
                                            containers in the same pod, and the first
                                            process in each container will not be
                                            assigned PID 1. HostPID and ShareProcessNamespace
                                            cannot both be set. Optional: Default
                                            to false.'
                                          type: boolean
                                        subdomain:
                                          description: If specified, the fully qualified
                                            Pod hostname will be "<hostname>.<subdomain>.<pod
                                            namespace>.svc.<cluster domain>". If not
                                            specified, the pod will not have a domainname
                                            at all.
                                          type: string
                                        terminationGracePeriodSeconds:
                                          description: Optional duration in seconds
                                            the pod needs to terminate gracefully.
                                            May be decreased in delete request. Value
                                            must be non-negative integer. The value
                                            zero indicates stop immediately via the
                                            kill signal (no opportunity to shut down).
                                            If this value is nil, the default grace
                                            period will be used instead. The grace
                                            period is the duration in seconds after
                                            the processes running in the pod are sent
                                            a termination signal and the time when
                                            the processes are forcibly halted with
                                            a kill signal. Set this value longer than
                                            the expected cleanup time for your process.
                                            Defaults to 30 seconds.
                                          type: integer
                                          format: int64
                                        tolerations:
                                          description: If specified, the pod's tolerations.
                                          type: array
                                          items:
                                            description: The pod this Toleration is
                                              attached to tolerates any taint that
                                              matches the triple <key,value,effect>
                                              using the matching operator <operator>.
                                            type: object
                                            properties:
                                              effect:
                                                description: Effect indicates the
                                                  taint effect to match. Empty means
                                                  match all taint effects. When specified,
                                                  allowed values are NoSchedule, PreferNoSchedule
                                                  and NoExecute.
                                                type: string
                                              key:
                                                description: Key is the taint key
                                                  that the toleration applies to.
                                                  Empty means match all taint keys.
                                                  If the key is empty, operator must
                                                  be Exists; this combination means
                                                  to match all values and all keys.
                                                type: string
                                              operator:
                                                description: Operator represents a
                                                  key's relationship to the value.
                                                  Valid operators are Exists and Equal.
                                                  Defaults to Equal. Exists is equivalent
                                                  to wildcard for value, so that a
                                                  pod can tolerate all taints of a
                                                  particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: TolerationSeconds represents
                                                  the period of time the toleration
                                                  (which must be of effect NoExecute,
                                                  otherwise this field is ignored)
                                                  tolerates the taint. By default,
                                                  it is not set, which means tolerate
                                                  the taint forever (do not evict).
                                                  Zero and negative values will be
                                                  treated as 0 (evict immediately)
                                                  by the system.
                                                type: integer
                                                format: int64
                                              value:
                                                description: Value is the taint value
                                                  the toleration matches to. If the
                                                  operator is Exists, the value should
                                                  be empty, otherwise just a regular
                                                  string.
                                                type: string
                                        topologySpreadConstraints:
                                          description: TopologySpreadConstraints describes
                                            how a group of pods ought to spread across
                                            topology domains. Scheduler will schedule
                                            pods in a way which abides by the constraints.
                                            All topologySpreadConstraints are ANDed.
                                          type: array
                                          items:
                                            description: TopologySpreadConstraint
                                              specifies how to spread matching pods
                                              among the given topology.
                                            type: object
                                            required:
                                            - maxSkew
                                            - topologyKey
                                            - whenUnsatisfiable
                                            properties:
                                              labelSelector:
                                                description: LabelSelector is used
                                                  to find matching pods. Pods that
                                                  match this label selector are counted
                                                  to determine the number of pods
                                                  in their corresponding topology
                                                  domain.
                                                type: object
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    type: array
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      type: object
                                                      required:
                                                      - key
                                                      - operator
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          type: array
                                                          items:
                                                            type: string
                                                  matchLabels:
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                    additionalProperties:
                                                      type: string
                                              matchLabelKeys:
                                                description: MatchLabelKeys is a set
                                                  of pod label keys to select the
                                                  pods over which spreading will be
                                                  calculated. The keys are used to
                                                  lookup values from the incoming
                                                  pod labels, those key-value labels
                                                  are ANDed with labelSelector to
                                                  select the group of existing pods
                                                  over which spreading will be calculated
                                                  for the incoming pod. Keys that
                                                  don't exist in the incoming pod
                                                  labels will be ignored. A null or
                                                  empty list means only match against
                                                  labelSelector.
                                                type: array
                                                items:
                                                  type: string
                                                x-kubernetes-list-type: atomic
                                              maxSkew:
                                                description: 'MaxSkew describes the
                                                  degree to which pods may be unevenly
                                                  distributed. When `whenUnsatisfiable=DoNotSchedule`,
                                                  it is the maximum permitted difference
                                                  between the number of matching pods
                                                  in the target topology and the global
                                                  minimum. The global minimum is the
                                                  minimum number of matching pods
                                                  in an eligible domain or zero if
                                                  the number of eligible domains is
                                                  less than MinDomains. For example,
                                                  in a 3-zone cluster, MaxSkew is
                                                  set to 1, and pods with the same
                                                  labelSelector spread as 2/2/1: In
                                                  this case, the global minimum is
                                                  1. | zone1 | zone2 | zone3 | |  P
                                                  P  |  P P  |   P   | - if MaxSkew
                                                  is 1, incoming pod can only be scheduled
                                                  to zone3 to become 2/2/2; scheduling
                                                  it onto zone1(zone2) would make
                                                  the ActualSkew(3-1) on zone1(zone2)
                                                  violate MaxSkew(1). - if MaxSkew
                                                  is 2, incoming pod can be scheduled
                                                  onto any zone. When `whenUnsatisfiable=ScheduleAnyway`,
                                                  it is used to give higher precedence
                                                  to topologies that satisfy it. It''s
                                                  a required field. Default value
                                                  is 1 and 0 is not allowed.'
                                                type: integer
                                                format: int32
                                              minDomains:
                                                description: "MinDomains indicates\
                                                  \ a minimum number of eligible domains.\
                                                  \ When the number of eligible domains\
                                                  \ with matching topology keys is\
                                                  \ less than minDomains, Pod Topology\
                                                  \ Spread treats \"global minimum\"\
                                                  \ as 0, and then the calculation\
                                                  \ of Skew is performed. And when\
                                                  \ the number of eligible domains\
                                                  \ with matching topology keys equals\
                                                  \ or greater than minDomains, this\
                                                  \ value has no effect on scheduling.\
                                                  \ As a result, when the number of\
                                                  \ eligible domains is less than\
                                                  \ minDomains, scheduler won't schedule\
                                                  \ more than maxSkew Pods to those\
                                                  \ domains. If value is nil, the\
                                                  \ constraint behaves as if MinDomains\
                                                  \ is equal to 1. Valid values are\
                                                  \ integers greater than 0. When\
                                                  \ value is not nil, WhenUnsatisfiable\
                                                  \ must be DoNotSchedule. \n For\
                                                  \ example, in a 3-zone cluster,\
                                                  \ MaxSkew is set to 2, MinDomains\
                                                  \ is set to 5 and pods with the\
                                                  \ same labelSelector spread as 2/2/2:\
                                                  \ | zone1 | zone2 | zone3 | |  P\
                                                  \ P  |  P P  |  P P  | The number\
                                                  \ of domains is less than 5(MinDomains),\
                                                  \ so \"global minimum\" is treated\
                                                  \ as 0. In this situation, new pod\
                                                  \ with the same labelSelector cannot\
                                                  \ be scheduled, because computed\
                                                  \ skew will be 3(3 - 0) if new Pod\
                                                  \ is scheduled to any of the three\
                                                  \ zones, it will violate MaxSkew.\
                                                  \ \n This is a beta field and requires\
                                                  \ the MinDomainsInPodTopologySpread\
                                                  \ feature gate to be enabled (enabled\
                                                  \ by default)."
                                                type: integer
                                                format: int32
                                              nodeAffinityPolicy:
                                                description: "NodeAffinityPolicy indicates\
                                                  \ how we will treat Pod's nodeAffinity/nodeSelector\
                                                  \ when calculating pod topology\
                                                  \ spread skew. Options are: - Honor:\
                                                  \ only nodes matching nodeAffinity/nodeSelector\
                                                  \ are included in the calculations.\
                                                  \ - Ignore: nodeAffinity/nodeSelector\
                                                  \ are ignored. All nodes are included\
                                                  \ in the calculations. \n If this\
                                                  \ value is nil, the behavior is\
                                                  \ equivalent to the Honor policy.\
                                                  \ This is a beta-level feature default\
                                                  \ enabled by the NodeInclusionPolicyInPodTopologySpread\
                                                  \ feature flag."
                                                type: string
                                              nodeTaintsPolicy:
                                                description: "NodeTaintsPolicy indicates\
                                                  \ how we will treat node taints\
                                                  \ when calculating pod topology\
                                                  \ spread skew. Options are: - Honor:\
                                                  \ nodes without taints, along with\
                                                  \ tainted nodes for which the incoming\
                                                  \ pod has a toleration, are included.\
                                                  \ - Ignore: node taints are ignored.\
                                                  \ All nodes are included. \n If\
                                                  \ this value is nil, the behavior\
                                                  \ is equivalent to the Ignore policy.\
                                                  \ This is a beta-level feature default\
                                                  \ enabled by the NodeInclusionPolicyInPodTopologySpread\
                                                  \ feature flag."
                                                type: string
                                              topologyKey:
                                                description: TopologyKey is the key
                                                  of node labels. Nodes that have
                                                  a label with this key and identical
                                                  values are considered to be in the
                                                  same topology. We consider each
                                                  <key, value> as a "bucket", and
                                                  try to put balanced number of pods
                                                  into each bucket. We define a domain
                                                  as a particular instance of a topology.
                                                  Also, we define an eligible domain
                                                  as a domain whose nodes meet the
                                                  requirements of nodeAffinityPolicy
                                                  and nodeTaintsPolicy. e.g. If TopologyKey
                                                  is "kubernetes.io/hostname", each
                                                  Node is a domain of that topology.
                                                  And, if TopologyKey is "topology.kubernetes.io/zone",
                                                  each zone is a domain of that topology.
                                                  It's a required field.
                                                type: string
                                              whenUnsatisfiable:
                                                description: 'WhenUnsatisfiable indicates
                                                  how to deal with a pod if it doesn''t
                                                  satisfy the spread constraint. -
                                                  DoNotSchedule (default) tells the
                                                  scheduler not to schedule it. -
                                                  ScheduleAnyway tells the scheduler
                                                  to schedule the pod in any location,
                                                  but giving higher precedence to
                                                  topologies that would help reduce
                                                  the skew. A constraint is considered
                                                  "Unsatisfiable" for an incoming
                                                  pod if and only if every possible
                                                  node assignment for that pod would
                                                  violate "MaxSkew" on some topology.
                                                  For example, in a 3-zone cluster,
                                                  MaxSkew is set to 1, and pods with
                                                  the same labelSelector spread as
                                                  3/1/1: | zone1 | zone2 | zone3 |
                                                  | P P P |   P   |   P   | If WhenUnsatisfiable
                                                  is set to DoNotSchedule, incoming
                                                  pod can only be scheduled to zone2(zone3)
                                                  to become 3/2/1(3/1/2) as ActualSkew(2-1)
                                                  on zone2(zone3) satisfies MaxSkew(1).
                                                  In other words, the cluster can
                                                  still be imbalanced, but scheduler
                                                  won''t make it *more* imbalanced.
                                                  It''s a required field.'
                                                type: string
                                          x-kubernetes-list-map-keys:
                                          - topologyKey
                                          - whenUnsatisfiable
                                          x-kubernetes-list-type: map
                                        volumes:
                                          description: 'List of volumes that can be
                                            mounted by containers belonging to the
                                            pod. More info: https://kubernetes.io/docs/concepts/storage/volumes'
                                          type: array
                                          items:
                                            description: Volume represents a named
                                              volume in a pod that may be accessed
                                              by any container in the pod.
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              awsElasticBlockStore:
                                                description: 'awsElasticBlockStore
                                                  represents an AWS Disk resource
                                                  that is attached to a kubelet''s
                                                  host machine and then exposed to
                                                  the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                                type: object
                                                required:
                                                - volumeID
                                                properties:
                                                  fsType:
                                                    description: 'fsType is the filesystem
                                                      type of the volume that you
                                                      want to mount. Tip: Ensure that
                                                      the filesystem type is supported
                                                      by the host operating system.
                                                      Examples: "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                                      TODO: how do we prevent errors
                                                      in the filesystem from compromising
                                                      the machine'
                                                    type: string
                                                  partition:
                                                    description: 'partition is the
                                                      partition in the volume that
                                                      you want to mount. If omitted,
                                                      the default is to mount by volume
                                                      name. Examples: For volume /dev/sda1,
                                                      you specify the partition as
                                                      "1". Similarly, the volume partition
                                                      for /dev/sda is "0" (or you
                                                      can leave the property empty).'
                                                    type: integer
                                                    format: int32
                                                  readOnly:
                                                    description: 'readOnly value true
                                                      will force the readOnly setting
                                                      in VolumeMounts. More info:
                                                      https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                                    type: boolean
                                                  volumeID:
                                                    description: 'volumeID is unique
                                                      ID of the persistent disk resource
                                                      in AWS (Amazon EBS volume).
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                                    type: string
                                              azureDisk:
                                                description: azureDisk represents
                                                  an Azure Data Disk mount on the
                                                  host and bind mount to the pod.
                                                type: object
                                                required:
                                                - diskName
                                                - diskURI
                                                properties:
                                                  cachingMode:
                                                    description: 'cachingMode is the
                                                      Host Caching mode: None, Read
                                                      Only, Read Write.'
                                                    type: string
                                                  diskName:
                                                    description: diskName is the Name
                                                      of the data disk in the blob
                                                      storage
                                                    type: string
                                                  diskURI:
                                                    description: diskURI is the URI
                                                      of data disk in the blob storage
                                                    type: string
                                                  fsType:
                                                    description: fsType is Filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified.
                                                    type: string
                                                  kind:
                                                    description: 'kind expected values
                                                      are Shared: multiple blob disks
                                                      per storage account  Dedicated:
                                                      single blob disk per storage
                                                      account  Managed: azure managed
                                                      data disk (only in managed availability
                                                      set). defaults to shared'
                                                    type: string
                                                  readOnly:
                                                    description: readOnly Defaults
                                                      to false (read/write). ReadOnly
                                                      here will force the ReadOnly
                                                      setting in VolumeMounts.
                                                    type: boolean
                                              azureFile:
                                                description: azureFile represents
                                                  an Azure File Service mount on the
                                                  host and bind mount to the pod.
                                                type: object
                                                required:
                                                - secretName
                                                - shareName
                                                properties:
                                                  readOnly:
                                                    description: readOnly defaults
                                                      to false (read/write). ReadOnly
                                                      here will force the ReadOnly
                                                      setting in VolumeMounts.
                                                    type: boolean
                                                  secretName:
                                                    description: secretName is the  name
                                                      of secret that contains Azure
                                                      Storage Account Name and Key
                                                    type: string
                                                  shareName:
                                                    description: shareName is the
                                                      azure share Name
                                                    type: string
                                              cephfs:
                                                description: cephFS represents a Ceph
                                                  FS mount on the host that shares
                                                  a pod's lifetime
                                                type: object
                                                required:
                                                - monitors
                                                properties:
                                                  monitors:
                                                    description: 'monitors is Required:
                                                      Monitors is a collection of
                                                      Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                    type: array
                                                    items:
                                                      type: string
                                                  path:
                                                    description: 'path is Optional:
                                                      Used as the mounted root, rather
                                                      than the full Ceph tree, default
                                                      is /'
                                                    type: string
                                                  readOnly:
                                                    description: 'readOnly is Optional:
                                                      Defaults to false (read/write).
                                                      ReadOnly here will force the
                                                      ReadOnly setting in VolumeMounts.
                                                      More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                    type: boolean
                                                  secretFile:
                                                    description: 'secretFile is Optional:
                                                      SecretFile is the path to key
                                                      ring for User, default is /etc/ceph/user.secret
                                                      More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                    type: string
                                                  secretRef:
                                                    description: 'secretRef is Optional:
                                                      SecretRef is reference to the
                                                      authentication secret for User,
                                                      default is empty. More info:
                                                      https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  user:
                                                    description: 'user is optional:
                                                      User is the rados user name,
                                                      default is admin More info:
                                                      https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                                    type: string
                                              cinder:
                                                description: 'cinder represents a
                                                  cinder volume attached and mounted
                                                  on kubelets host machine. More info:
                                                  https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                type: object
                                                required:
                                                - volumeID
                                                properties:
                                                  fsType:
                                                    description: 'fsType is the filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Examples: "ext4", "xfs",
                                                      "ntfs". Implicitly inferred
                                                      to be "ext4" if unspecified.
                                                      More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                    type: string
                                                  readOnly:
                                                    description: 'readOnly defaults
                                                      to false (read/write). ReadOnly
                                                      here will force the ReadOnly
                                                      setting in VolumeMounts. More
                                                      info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                    type: boolean
                                                  secretRef:
                                                    description: 'secretRef is optional:
                                                      points to a secret object containing
                                                      parameters used to connect to
                                                      OpenStack.'
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  volumeID:
                                                    description: 'volumeID used to
                                                      identify the volume in cinder.
                                                      More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                                    type: string
                                              configMap:
                                                description: configMap represents
                                                  a configMap that should populate
                                                  this volume
                                                type: object
                                                properties:
                                                  defaultMode:
                                                    description: 'defaultMode is optional:
                                                      mode bits used to set permissions
                                                      on created files by default.
                                                      Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values
                                                      for mode bits. Defaults to 0644.
                                                      Directories within the path
                                                      are not affected by this setting.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and
                                                      the result can be other mode
                                                      bits set.'
                                                    type: integer
                                                    format: int32
                                                  items:
                                                    description: items if unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced ConfigMap
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the ConfigMap, the volume
                                                      setup will error unless it is
                                                      marked optional. Paths must
                                                      be relative and may not contain
                                                      the '..' path or start with
                                                      '..'.
                                                    type: array
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      type: object
                                                      required:
                                                      - key
                                                      - path
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          type: integer
                                                          format: int32
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                  name:
                                                    description: 'Name of the referent.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                      TODO: Add other useful fields.
                                                      apiVersion, kind, uid?'
                                                    type: string
                                                  optional:
                                                    description: optional specify
                                                      whether the ConfigMap or its
                                                      keys must be defined
                                                    type: boolean
                                              csi:
                                                description: csi (Container Storage
                                                  Interface) represents ephemeral
                                                  storage that is handled by certain
                                                  external CSI drivers (Beta feature).
                                                type: object
                                                required:
                                                - driver
                                                properties:
                                                  driver:
                                                    description: driver is the name
                                                      of the CSI driver that handles
                                                      this volume. Consult with your
                                                      admin for the correct name as
                                                      registered in the cluster.
                                                    type: string
                                                  fsType:
                                                    description: fsType to mount.
                                                      Ex. "ext4", "xfs", "ntfs". If
                                                      not provided, the empty value
                                                      is passed to the associated
                                                      CSI driver which will determine
                                                      the default filesystem to apply.
                                                    type: string
                                                  nodePublishSecretRef:
                                                    description: nodePublishSecretRef
                                                      is a reference to the secret
                                                      object containing sensitive
                                                      information to pass to the CSI
                                                      driver to complete the CSI NodePublishVolume
                                                      and NodeUnpublishVolume calls.
                                                      This field is optional, and  may
                                                      be empty if no secret is required.
                                                      If the secret object contains
                                                      more than one secret, all secret
                                                      references are passed.
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  readOnly:
                                                    description: readOnly specifies
                                                      a read-only configuration for
                                                      the volume. Defaults to false
                                                      (read/write).
                                                    type: boolean
                                                  volumeAttributes:
                                                    description: volumeAttributes
                                                      stores driver-specific properties
                                                      that are passed to the CSI driver.
                                                      Consult your driver's documentation
                                                      for supported values.
                                                    type: object
                                                    additionalProperties:
                                                      type: string
                                              downwardAPI:
                                                description: downwardAPI represents
                                                  downward API about the pod that
                                                  should populate this volume
                                                type: object
                                                properties:
                                                  defaultMode:
                                                    description: 'Optional: mode bits
                                                      to use on created files by default.
                                                      Must be a Optional: mode bits
                                                      used to set permissions on created
                                                      files by default. Must be an
                                                      octal value between 0000 and
                                                      0777 or a decimal value between
                                                      0 and 511. YAML accepts both
                                                      octal and decimal values, JSON
                                                      requires decimal values for
                                                      mode bits. Defaults to 0644.
                                                      Directories within the path
                                                      are not affected by this setting.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and
                                                      the result can be other mode
                                                      bits set.'
                                                    type: integer
                                                    format: int32
                                                  items:
                                                    description: Items is a list of
                                                      downward API volume file
                                                    type: array
                                                    items:
                                                      description: DownwardAPIVolumeFile
                                                        represents information to
                                                        create the file containing
                                                        the pod field
                                                      type: object
                                                      required:
                                                      - path
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required:
                                                            Selects a field of the
                                                            pod: only annotations,
                                                            labels, name and namespace
                                                            are supported.'
                                                          type: object
                                                          required:
                                                          - fieldPath
                                                          properties:
                                                            apiVersion:
                                                              description: Version
                                                                of the schema the
                                                                FieldPath is written
                                                                in terms of, defaults
                                                                to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of
                                                                the field to select
                                                                in the specified API
                                                                version.
                                                              type: string
                                                        mode:
                                                          description: 'Optional:
                                                            mode bits used to set
                                                            permissions on this file,
                                                            must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          type: integer
                                                          format: int32
                                                        path:
                                                          description: 'Required:
                                                            Path is  the relative
                                                            path name of the file
                                                            to be created. Must not
                                                            be absolute or contain
                                                            the ''..'' path. Must
                                                            be utf-8 encoded. The
                                                            first item of the relative
                                                            path must not start with
                                                            ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: 'Selects a
                                                            resource of the container:
                                                            only resources limits
                                                            and requests (limits.cpu,
                                                            limits.memory, requests.cpu
                                                            and requests.memory) are
                                                            currently supported.'
                                                          type: object
                                                          required:
                                                          - resource
                                                          properties:
                                                            containerName:
                                                              description: 'Container
                                                                name: required for
                                                                volumes, optional
                                                                for env vars'
                                                              type: string
                                                            divisor:
                                                              description: Specifies
                                                                the output format
                                                                of the exposed resources,
                                                                defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              anyOf:
                                                              - type: integer
                                                              - type: string
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required:
                                                                resource to select'
                                                              type: string
                                              emptyDir:
                                                description: 'emptyDir represents
                                                  a temporary directory that shares
                                                  a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                                type: object
                                                properties:
                                                  medium:
                                                    description: 'medium represents
                                                      what type of storage medium
                                                      should back this directory.
                                                      The default is "" which means
                                                      to use the node''s default medium.
                                                      Must be an empty string (default)
                                                      or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                                    type: string
                                                  sizeLimit:
                                                    description: 'sizeLimit is the
                                                      total amount of local storage
                                                      required for this EmptyDir volume.
                                                      The size limit is also applicable
                                                      for memory medium. The maximum
                                                      usage on memory medium EmptyDir
                                                      would be the minimum value between
                                                      the SizeLimit specified here
                                                      and the sum of memory limits
                                                      of all containers in a pod.
                                                      The default is nil which means
                                                      that the limit is undefined.
                                                      More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    x-kubernetes-int-or-string: true
                                              ephemeral:
                                                description: "ephemeral represents\
                                                  \ a volume that is handled by a\
                                                  \ cluster storage driver. The volume's\
                                                  \ lifecycle is tied to the pod that\
                                                  \ defines it - it will be created\
                                                  \ before the pod starts, and deleted\
                                                  \ when the pod is removed. \n Use\
                                                  \ this if: a) the volume is only\
                                                  \ needed while the pod runs, b)\
                                                  \ features of normal volumes like\
                                                  \ restoring from snapshot or capacity\
                                                  \ tracking are needed, c) the storage\
                                                  \ driver is specified through a\
                                                  \ storage class, and d) the storage\
                                                  \ driver supports dynamic volume\
                                                  \ provisioning through a PersistentVolumeClaim\
                                                  \ (see EphemeralVolumeSource for\
                                                  \ more information on the connection\
                                                  \ between this volume type and PersistentVolumeClaim).\
                                                  \ \n Use PersistentVolumeClaim or\
                                                  \ one of the vendor-specific APIs\
                                                  \ for volumes that persist for longer\
                                                  \ than the lifecycle of an individual\
                                                  \ pod. \n Use CSI for light-weight\
                                                  \ local ephemeral volumes if the\
                                                  \ CSI driver is meant to be used\
                                                  \ that way - see the documentation\
                                                  \ of the driver for more information.\
                                                  \ \n A pod can use both types of\
                                                  \ ephemeral volumes and persistent\
                                                  \ volumes at the same time."
                                                type: object
                                                properties:
                                                  volumeClaimTemplate:
                                                    description: "Will be used to\
                                                      \ create a stand-alone PVC to\
                                                      \ provision the volume. The\
                                                      \ pod in which this EphemeralVolumeSource\
                                                      \ is embedded will be the owner\
                                                      \ of the PVC, i.e. the PVC will\
                                                      \ be deleted together with the\
                                                      \ pod.  The name of the PVC\
                                                      \ will be `<pod name>-<volume\
                                                      \ name>` where `<volume name>`\
                                                      \ is the name from the `PodSpec.Volumes`\
                                                      \ array entry. Pod validation\
                                                      \ will reject the pod if the\
                                                      \ concatenated name is not valid\
                                                      \ for a PVC (for example, too\
                                                      \ long). \n An existing PVC\
                                                      \ with that name that is not\
                                                      \ owned by the pod will *not*\
                                                      \ be used for the pod to avoid\
                                                      \ using an unrelated volume\
                                                      \ by mistake. Starting the pod\
                                                      \ is then blocked until the\
                                                      \ unrelated PVC is removed.\
                                                      \ If such a pre-created PVC\
                                                      \ is meant to be used by the\
                                                      \ pod, the PVC has to updated\
                                                      \ with an owner reference to\
                                                      \ the pod once the pod exists.\
                                                      \ Normally this should not be\
                                                      \ necessary, but it may be useful\
                                                      \ when manually reconstructing\
                                                      \ a broken cluster. \n This\
                                                      \ field is read-only and no\
                                                      \ changes will be made by Kubernetes\
                                                      \ to the PVC after it has been\
                                                      \ created. \n Required, must\
                                                      \ not be nil."
                                                    type: object
                                                    required:
                                                    - spec
                                                    properties:
                                                      metadata:
                                                        description: May contain labels
                                                          and annotations that will
                                                          be copied into the PVC when
                                                          creating it. No other fields
                                                          are allowed and will be
                                                          rejected during validation.
                                                        type: object
                                                      spec:
                                                        description: The specification
                                                          for the PersistentVolumeClaim.
                                                          The entire content is copied
                                                          unchanged into the PVC that
                                                          gets created from this template.
                                                          The same fields as in a
                                                          PersistentVolumeClaim are
                                                          also valid here.
                                                        type: object
                                                        properties:
                                                          accessModes:
                                                            description: 'accessModes
                                                              contains the desired
                                                              access modes the volume
                                                              should have. More info:
                                                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                                            type: array
                                                            items:
                                                              type: string
                                                          dataSource:
                                                            description: 'dataSource
                                                              field can be used to
                                                              specify either: * An
                                                              existing VolumeSnapshot
                                                              object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                              * An existing PVC (PersistentVolumeClaim)
                                                              If the provisioner or
                                                              an external controller
                                                              can support the specified
                                                              data source, it will
                                                              create a new volume
                                                              based on the contents
                                                              of the specified data
                                                              source. When the AnyVolumeDataSource
                                                              feature gate is enabled,
                                                              dataSource contents
                                                              will be copied to dataSourceRef,
                                                              and dataSourceRef contents
                                                              will be copied to dataSource
                                                              when dataSourceRef.namespace
                                                              is not specified. If
                                                              the namespace is specified,
                                                              then dataSourceRef will
                                                              not be copied to dataSource.'
                                                            type: object
                                                            required:
                                                            - kind
                                                            - name
                                                            properties:
                                                              apiGroup:
                                                                description: APIGroup
                                                                  is the group for
                                                                  the resource being
                                                                  referenced. If APIGroup
                                                                  is not specified,
                                                                  the specified Kind
                                                                  must be in the core
                                                                  API group. For any
                                                                  other third-party
                                                                  types, APIGroup
                                                                  is required.
                                                                type: string
                                                              kind:
                                                                description: Kind
                                                                  is the type of resource
                                                                  being referenced
                                                                type: string
                                                              name:
                                                                description: Name
                                                                  is the name of resource
                                                                  being referenced
                                                                type: string
                                                          dataSourceRef:
                                                            description: 'dataSourceRef
                                                              specifies the object
                                                              from which to populate
                                                              the volume with data,
                                                              if a non-empty volume
                                                              is desired. This may
                                                              be any object from a
                                                              non-empty API group
                                                              (non core object) or
                                                              a PersistentVolumeClaim
                                                              object. When this field
                                                              is specified, volume
                                                              binding will only succeed
                                                              if the type of the specified
                                                              object matches some
                                                              installed volume populator
                                                              or dynamic provisioner.
                                                              This field will replace
                                                              the functionality of
                                                              the dataSource field
                                                              and as such if both
                                                              fields are non-empty,
                                                              they must have the same
                                                              value. For backwards
                                                              compatibility, when
                                                              namespace isn''t specified
                                                              in dataSourceRef, both
                                                              fields (dataSource and
                                                              dataSourceRef) will
                                                              be set to the same value
                                                              automatically if one
                                                              of them is empty and
                                                              the other is non-empty.
                                                              When namespace is specified
                                                              in dataSourceRef, dataSource
                                                              isn''t set to the same
                                                              value and must be empty.
                                                              There are three important
                                                              differences between
                                                              dataSource and dataSourceRef:
                                                              * While dataSource only
                                                              allows two specific
                                                              types of objects, dataSourceRef
                                                              allows any non-core
                                                              object, as well as PersistentVolumeClaim
                                                              objects. * While dataSource
                                                              ignores disallowed values
                                                              (dropping them), dataSourceRef
                                                              preserves all values,
                                                              and generates an error
                                                              if a disallowed value
                                                              is specified. * While
                                                              dataSource only allows
                                                              local objects, dataSourceRef
                                                              allows objects in any
                                                              namespaces. (Beta) Using
                                                              this field requires
                                                              the AnyVolumeDataSource
                                                              feature gate to be enabled.
                                                              (Alpha) Using the namespace
                                                              field of dataSourceRef
                                                              requires the CrossNamespaceVolumeDataSource
                                                              feature gate to be enabled.'
                                                            type: object
                                                            required:
                                                            - kind
                                                            - name
                                                            properties:
                                                              apiGroup:
                                                                description: APIGroup
                                                                  is the group for
                                                                  the resource being
                                                                  referenced. If APIGroup
                                                                  is not specified,
                                                                  the specified Kind
                                                                  must be in the core
                                                                  API group. For any
                                                                  other third-party
                                                                  types, APIGroup
                                                                  is required.
                                                                type: string
                                                              kind:
                                                                description: Kind
                                                                  is the type of resource
                                                                  being referenced
                                                                type: string
                                                              name:
                                                                description: Name
                                                                  is the name of resource
                                                                  being referenced
                                                                type: string
                                                              namespace:
                                                                description: Namespace
                                                                  is the namespace
                                                                  of resource being
                                                                  referenced Note
                                                                  that when a namespace
                                                                  is specified, a
                                                                  gateway.networking.k8s.io/ReferenceGrant
                                                                  object is required
                                                                  in the referent
                                                                  namespace to allow
                                                                  that namespace's
                                                                  owner to accept
                                                                  the reference. See
                                                                  the ReferenceGrant
                                                                  documentation for
                                                                  details. (Alpha)
                                                                  This field requires
                                                                  the CrossNamespaceVolumeDataSource
                                                                  feature gate to
                                                                  be enabled.
                                                                type: string
                                                          resources:
                                                            description: 'resources
                                                              represents the minimum
                                                              resources the volume
                                                              should have. If RecoverVolumeExpansionFailure
                                                              feature is enabled users
                                                              are allowed to specify
                                                              resource requirements
                                                              that are lower than
                                                              previous value but must
                                                              still be higher than
                                                              capacity recorded in
                                                              the status field of
                                                              the claim. More info:
                                                              https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                                            type: object
                                                            properties:
                                                              claims:
                                                                description: "Claims\
                                                                  \ lists the names\
                                                                  \ of resources,\
                                                                  \ defined in spec.resourceClaims,\
                                                                  \ that are used\
                                                                  \ by this container.\
                                                                  \ \n This is an\
                                                                  \ alpha field and\
                                                                  \ requires enabling\
                                                                  \ the DynamicResourceAllocation\
                                                                  \ feature gate.\
                                                                  \ \n This field\
                                                                  \ is immutable."
                                                                type: array
                                                                items:
                                                                  description: ResourceClaim
                                                                    references one
                                                                    entry in PodSpec.ResourceClaims.
                                                                  type: object
                                                                  required:
                                                                  - name
                                                                  properties:
                                                                    name:
                                                                      description: Name
                                                                        must match
                                                                        the name of
                                                                        one entry
                                                                        in pod.spec.resourceClaims
                                                                        of the Pod
                                                                        where this
                                                                        field is used.
                                                                        It makes that
                                                                        resource available
                                                                        inside a container.
                                                                      type: string
                                                                x-kubernetes-list-map-keys:
                                                                - name
                                                                x-kubernetes-list-type: map
                                                              limits:
                                                                description: 'Limits
                                                                  describes the maximum
                                                                  amount of compute
                                                                  resources allowed.
                                                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                                type: object
                                                                additionalProperties:
                                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                  anyOf:
                                                                  - type: integer
                                                                  - type: string
                                                                  x-kubernetes-int-or-string: true
                                                              requests:
                                                                description: 'Requests
                                                                  describes the minimum
                                                                  amount of compute
                                                                  resources required.
                                                                  If Requests is omitted
                                                                  for a container,
                                                                  it defaults to Limits
                                                                  if that is explicitly
                                                                  specified, otherwise
                                                                  to an implementation-defined
                                                                  value. More info:
                                                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                                type: object
                                                                additionalProperties:
                                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                  anyOf:
                                                                  - type: integer
                                                                  - type: string
                                                                  x-kubernetes-int-or-string: true
                                                          selector:
                                                            description: selector
                                                              is a label query over
                                                              volumes to consider
                                                              for binding.
                                                            type: object
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions
                                                                  is a list of label
                                                                  selector requirements.
                                                                  The requirements
                                                                  are ANDed.
                                                                type: array
                                                                items:
                                                                  description: A label
                                                                    selector requirement
                                                                    is a selector
                                                                    that contains
                                                                    values, a key,
                                                                    and an operator
                                                                    that relates the
                                                                    key and values.
                                                                  type: object
                                                                  required:
                                                                  - key
                                                                  - operator
                                                                  properties:
                                                                    key:
                                                                      description: key
                                                                        is the label
                                                                        key that the
                                                                        selector applies
                                                                        to.
                                                                      type: string
                                                                    operator:
                                                                      description: operator
                                                                        represents
                                                                        a key's relationship
                                                                        to a set of
                                                                        values. Valid
                                                                        operators
                                                                        are In, NotIn,
                                                                        Exists and
                                                                        DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: values
                                                                        is an array
                                                                        of string
                                                                        values. If
                                                                        the operator
                                                                        is In or NotIn,
                                                                        the values
                                                                        array must
                                                                        be non-empty.
                                                                        If the operator
                                                                        is Exists
                                                                        or DoesNotExist,
                                                                        the values
                                                                        array must
                                                                        be empty.
                                                                        This array
                                                                        is replaced
                                                                        during a strategic
                                                                        merge patch.
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                              matchLabels:
                                                                description: matchLabels
                                                                  is a map of {key,value}
                                                                  pairs. A single
                                                                  {key,value} in the
                                                                  matchLabels map
                                                                  is equivalent to
                                                                  an element of matchExpressions,
                                                                  whose key field
                                                                  is "key", the operator
                                                                  is "In", and the
                                                                  values array contains
                                                                  only "value". The
                                                                  requirements are
                                                                  ANDed.
                                                                type: object
                                                                additionalProperties:
                                                                  type: string
                                                          storageClassName:
                                                            description: 'storageClassName
                                                              is the name of the StorageClass
                                                              required by the claim.
                                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                                            type: string
                                                          volumeMode:
                                                            description: volumeMode
                                                              defines what type of
                                                              volume is required by
                                                              the claim. Value of
                                                              Filesystem is implied
                                                              when not included in
                                                              claim spec.
                                                            type: string
                                                          volumeName:
                                                            description: volumeName
                                                              is the binding reference
                                                              to the PersistentVolume
                                                              backing this claim.
                                                            type: string
                                              fc:
                                                description: fc represents a Fibre
                                                  Channel resource that is attached
                                                  to a kubelet's host machine and
                                                  then exposed to the pod.
                                                type: object
                                                properties:
                                                  fsType:
                                                    description: 'fsType is the filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified. TODO: how do
                                                      we prevent errors in the filesystem
                                                      from compromising the machine'
                                                    type: string
                                                  lun:
                                                    description: 'lun is Optional:
                                                      FC target lun number'
                                                    type: integer
                                                    format: int32
                                                  readOnly:
                                                    description: 'readOnly is Optional:
                                                      Defaults to false (read/write).
                                                      ReadOnly here will force the
                                                      ReadOnly setting in VolumeMounts.'
                                                    type: boolean
                                                  targetWWNs:
                                                    description: 'targetWWNs is Optional:
                                                      FC target worldwide names (WWNs)'
                                                    type: array
                                                    items:
                                                      type: string
                                                  wwids:
                                                    description: 'wwids Optional:
                                                      FC volume world wide identifiers
                                                      (wwids) Either wwids or combination
                                                      of targetWWNs and lun must be
                                                      set, but not both simultaneously.'
                                                    type: array
                                                    items:
                                                      type: string
                                              flexVolume:
                                                description: flexVolume represents
                                                  a generic volume resource that is
                                                  provisioned/attached using an exec
                                                  based plugin.
                                                type: object
                                                required:
                                                - driver
                                                properties:
                                                  driver:
                                                    description: driver is the name
                                                      of the driver to use for this
                                                      volume.
                                                    type: string
                                                  fsType:
                                                    description: fsType is the filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      The default filesystem depends
                                                      on FlexVolume script.
                                                    type: string
                                                  options:
                                                    description: 'options is Optional:
                                                      this field holds extra command
                                                      options if any.'
                                                    type: object
                                                    additionalProperties:
                                                      type: string
                                                  readOnly:
                                                    description: 'readOnly is Optional:
                                                      defaults to false (read/write).
                                                      ReadOnly here will force the
                                                      ReadOnly setting in VolumeMounts.'
                                                    type: boolean
                                                  secretRef:
                                                    description: 'secretRef is Optional:
                                                      secretRef is reference to the
                                                      secret object containing sensitive
                                                      information to pass to the plugin
                                                      scripts. This may be empty if
                                                      no secret object is specified.
                                                      If the secret object contains
                                                      more than one secret, all secrets
                                                      are passed to the plugin scripts.'
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                              flocker:
                                                description: flocker represents a
                                                  Flocker volume attached to a kubelet's
                                                  host machine. This depends on the
                                                  Flocker control service being running
                                                type: object
                                                properties:
                                                  datasetName:
                                                    description: datasetName is Name
                                                      of the dataset stored as metadata
                                                      -> name on the dataset for Flocker
                                                      should be considered as deprecated
                                                    type: string
                                                  datasetUUID:
                                                    description: datasetUUID is the
                                                      UUID of the dataset. This is
                                                      unique identifier of a Flocker
                                                      dataset
                                                    type: string
                                              gcePersistentDisk:
                                                description: 'gcePersistentDisk represents
                                                  a GCE Disk resource that is attached
                                                  to a kubelet''s host machine and
                                                  then exposed to the pod. More info:
                                                  https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                type: object
                                                required:
                                                - pdName
                                                properties:
                                                  fsType:
                                                    description: 'fsType is filesystem
                                                      type of the volume that you
                                                      want to mount. Tip: Ensure that
                                                      the filesystem type is supported
                                                      by the host operating system.
                                                      Examples: "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                                      TODO: how do we prevent errors
                                                      in the filesystem from compromising
                                                      the machine'
                                                    type: string
                                                  partition:
                                                    description: 'partition is the
                                                      partition in the volume that
                                                      you want to mount. If omitted,
                                                      the default is to mount by volume
                                                      name. Examples: For volume /dev/sda1,
                                                      you specify the partition as
                                                      "1". Similarly, the volume partition
                                                      for /dev/sda is "0" (or you
                                                      can leave the property empty).
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                    type: integer
                                                    format: int32
                                                  pdName:
                                                    description: 'pdName is unique
                                                      name of the PD resource in GCE.
                                                      Used to identify the disk in
                                                      GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                    type: string
                                                  readOnly:
                                                    description: 'readOnly here will
                                                      force the ReadOnly setting in
                                                      VolumeMounts. Defaults to false.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                                    type: boolean
                                              gitRepo:
                                                description: 'gitRepo represents a
                                                  git repository at a particular revision.
                                                  DEPRECATED: GitRepo is deprecated.
                                                  To provision a container with a
                                                  git repo, mount an EmptyDir into
                                                  an InitContainer that clones the
                                                  repo using git, then mount the EmptyDir
                                                  into the Pod''s container.'
                                                type: object
                                                required:
                                                - repository
                                                properties:
                                                  directory:
                                                    description: directory is the
                                                      target directory name. Must
                                                      not contain or start with '..'.  If
                                                      '.' is supplied, the volume
                                                      directory will be the git repository.  Otherwise,
                                                      if specified, the volume will
                                                      contain the git repository in
                                                      the subdirectory with the given
                                                      name.
                                                    type: string
                                                  repository:
                                                    description: repository is the
                                                      URL
                                                    type: string
                                                  revision:
                                                    description: revision is the commit
                                                      hash for the specified revision.
                                                    type: string
                                              glusterfs:
                                                description: 'glusterfs represents
                                                  a Glusterfs mount on the host that
                                                  shares a pod''s lifetime. More info:
                                                  https://examples.k8s.io/volumes/glusterfs/README.md'
                                                type: object
                                                required:
                                                - endpoints
                                                - path
                                                properties:
                                                  endpoints:
                                                    description: 'endpoints is the
                                                      endpoint name that details Glusterfs
                                                      topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                                    type: string
                                                  path:
                                                    description: 'path is the Glusterfs
                                                      volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                                    type: string
                                                  readOnly:
                                                    description: 'readOnly here will
                                                      force the Glusterfs volume to
                                                      be mounted with read-only permissions.
                                                      Defaults to false. More info:
                                                      https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                                    type: boolean
                                              hostPath:
                                                description: 'hostPath represents
                                                  a pre-existing file or directory
                                                  on the host machine that is directly
                                                  exposed to the container. This is
                                                  generally used for system agents
                                                  or other privileged things that
                                                  are allowed to see the host machine.
                                                  Most containers will NOT need this.
                                                  More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                                  --- TODO(jonesdl) We need to restrict
                                                  who can use host directory mounts
                                                  and who can/can not mount host directories
                                                  as read/write.'
                                                type: object
                                                required:
                                                - path
                                                properties:
                                                  path:
                                                    description: 'path of the directory
                                                      on the host. If the path is
                                                      a symlink, it will follow the
                                                      link to the real path. More
                                                      info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                                    type: string
                                                  type:
                                                    description: 'type for HostPath
                                                      Volume Defaults to "" More info:
                                                      https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                                    type: string
                                              iscsi:
                                                description: 'iscsi represents an
                                                  ISCSI Disk resource that is attached
                                                  to a kubelet''s host machine and
                                                  then exposed to the pod. More info:
                                                  https://examples.k8s.io/volumes/iscsi/README.md'
                                                type: object
                                                required:
                                                - iqn
                                                - lun
                                                - targetPortal
                                                properties:
                                                  chapAuthDiscovery:
                                                    description: chapAuthDiscovery
                                                      defines whether support iSCSI
                                                      Discovery CHAP authentication
                                                    type: boolean
                                                  chapAuthSession:
                                                    description: chapAuthSession defines
                                                      whether support iSCSI Session
                                                      CHAP authentication
                                                    type: boolean
                                                  fsType:
                                                    description: 'fsType is the filesystem
                                                      type of the volume that you
                                                      want to mount. Tip: Ensure that
                                                      the filesystem type is supported
                                                      by the host operating system.
                                                      Examples: "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                                      TODO: how do we prevent errors
                                                      in the filesystem from compromising
                                                      the machine'
                                                    type: string
                                                  initiatorName:
                                                    description: initiatorName is
                                                      the custom iSCSI Initiator Name.
                                                      If initiatorName is specified
                                                      with iscsiInterface simultaneously,
                                                      new iSCSI interface <target
                                                      portal>:<volume name> will be
                                                      created for the connection.
                                                    type: string
                                                  iqn:
                                                    description: iqn is the target
                                                      iSCSI Qualified Name.
                                                    type: string
                                                  iscsiInterface:
                                                    description: iscsiInterface is
                                                      the interface Name that uses
                                                      an iSCSI transport. Defaults
                                                      to 'default' (tcp).
                                                    type: string
                                                  lun:
                                                    description: lun represents iSCSI
                                                      Target Lun number.
                                                    type: integer
                                                    format: int32
                                                  portals:
                                                    description: portals is the iSCSI
                                                      Target Portal List. The portal
                                                      is either an IP or ip_addr:port
                                                      if the port is other than default
                                                      (typically TCP ports 860 and
                                                      3260).
                                                    type: array
                                                    items:
                                                      type: string
                                                  readOnly:
                                                    description: readOnly here will
                                                      force the ReadOnly setting in
                                                      VolumeMounts. Defaults to false.
                                                    type: boolean
                                                  secretRef:
                                                    description: secretRef is the
                                                      CHAP Secret for iSCSI target
                                                      and initiator authentication
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  targetPortal:
                                                    description: targetPortal is iSCSI
                                                      Target Portal. The Portal is
                                                      either an IP or ip_addr:port
                                                      if the port is other than default
                                                      (typically TCP ports 860 and
                                                      3260).
                                                    type: string
                                              name:
                                                description: 'name of the volume.
                                                  Must be a DNS_LABEL and unique within
                                                  the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                                type: string
                                              nfs:
                                                description: 'nfs represents an NFS
                                                  mount on the host that shares a
                                                  pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                type: object
                                                required:
                                                - path
                                                - server
                                                properties:
                                                  path:
                                                    description: 'path that is exported
                                                      by the NFS server. More info:
                                                      https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                    type: string
                                                  readOnly:
                                                    description: 'readOnly here will
                                                      force the NFS export to be mounted
                                                      with read-only permissions.
                                                      Defaults to false. More info:
                                                      https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                    type: boolean
                                                  server:
                                                    description: 'server is the hostname
                                                      or IP address of the NFS server.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                                    type: string
                                              persistentVolumeClaim:
                                                description: 'persistentVolumeClaimVolumeSource
                                                  represents a reference to a PersistentVolumeClaim
                                                  in the same namespace. More info:
                                                  https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                type: object
                                                required:
                                                - claimName
                                                properties:
                                                  claimName:
                                                    description: 'claimName is the
                                                      name of a PersistentVolumeClaim
                                                      in the same namespace as the
                                                      pod using this volume. More
                                                      info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                                    type: string
                                                  readOnly:
                                                    description: readOnly Will force
                                                      the ReadOnly setting in VolumeMounts.
                                                      Default false.
                                                    type: boolean
                                              photonPersistentDisk:
                                                description: photonPersistentDisk
                                                  represents a PhotonController persistent
                                                  disk attached and mounted on kubelets
                                                  host machine
                                                type: object
                                                required:
                                                - pdID
                                                properties:
                                                  fsType:
                                                    description: fsType is the filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified.
                                                    type: string
                                                  pdID:
                                                    description: pdID is the ID that
                                                      identifies Photon Controller
                                                      persistent disk
                                                    type: string
                                              portworxVolume:
                                                description: portworxVolume represents
                                                  a portworx volume attached and mounted
                                                  on kubelets host machine
                                                type: object
                                                required:
                                                - volumeID
                                                properties:
                                                  fsType:
                                                    description: fSType represents
                                                      the filesystem type to mount
                                                      Must be a filesystem type supported
                                                      by the host operating system.
                                                      Ex. "ext4", "xfs". Implicitly
                                                      inferred to be "ext4" if unspecified.
                                                    type: string
                                                  readOnly:
                                                    description: readOnly defaults
                                                      to false (read/write). ReadOnly
                                                      here will force the ReadOnly
                                                      setting in VolumeMounts.
                                                    type: boolean
                                                  volumeID:
                                                    description: volumeID uniquely
                                                      identifies a Portworx volume
                                                    type: string
                                              projected:
                                                description: projected items for all
                                                  in one resources secrets, configmaps,
                                                  and downward API
                                                type: object
                                                properties:
                                                  defaultMode:
                                                    description: defaultMode are the
                                                      mode bits used to set permissions
                                                      on created files by default.
                                                      Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values
                                                      for mode bits. Directories within
                                                      the path are not affected by
                                                      this setting. This might be
                                                      in conflict with other options
                                                      that affect the file mode, like
                                                      fsGroup, and the result can
                                                      be other mode bits set.
                                                    type: integer
                                                    format: int32
                                                  sources:
                                                    description: sources is the list
                                                      of volume projections
                                                    type: array
                                                    items:
                                                      description: Projection that
                                                        may be projected along with
                                                        other supported volume types
                                                      type: object
                                                      properties:
                                                        configMap:
                                                          description: configMap information
                                                            about the configMap data
                                                            to project
                                                          type: object
                                                          properties:
                                                            items:
                                                              description: items if
                                                                unspecified, each
                                                                key-value pair in
                                                                the Data field of
                                                                the referenced ConfigMap
                                                                will be projected
                                                                into the volume as
                                                                a file whose name
                                                                is the key and content
                                                                is the value. If specified,
                                                                the listed keys will
                                                                be projected into
                                                                the specified paths,
                                                                and unlisted keys
                                                                will not be present.
                                                                If a key is specified
                                                                which is not present
                                                                in the ConfigMap,
                                                                the volume setup will
                                                                error unless it is
                                                                marked optional. Paths
                                                                must be relative and
                                                                may not contain the
                                                                '..' path or start
                                                                with '..'.
                                                              type: array
                                                              items:
                                                                description: Maps
                                                                  a string key to
                                                                  a path within a
                                                                  volume.
                                                                type: object
                                                                required:
                                                                - key
                                                                - path
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the key to
                                                                      project.
                                                                    type: string
                                                                  mode:
                                                                    description: 'mode
                                                                      is Optional:
                                                                      mode bits used
                                                                      to set permissions
                                                                      on this file.
                                                                      Must be an octal
                                                                      value between
                                                                      0000 and 0777
                                                                      or a decimal
                                                                      value between
                                                                      0 and 511. YAML
                                                                      accepts both
                                                                      octal and decimal
                                                                      values, JSON
                                                                      requires decimal
                                                                      values for mode
                                                                      bits. If not
                                                                      specified, the
                                                                      volume defaultMode
                                                                      will be used.
                                                                      This might be
                                                                      in conflict
                                                                      with other options
                                                                      that affect
                                                                      the file mode,
                                                                      like fsGroup,
                                                                      and the result
                                                                      can be other
                                                                      mode bits set.'
                                                                    type: integer
                                                                    format: int32
                                                                  path:
                                                                    description: path
                                                                      is the relative
                                                                      path of the
                                                                      file to map
                                                                      the key to.
                                                                      May not be an
                                                                      absolute path.
                                                                      May not contain
                                                                      the path element
                                                                      '..'. May not
                                                                      start with the
                                                                      string '..'.
                                                                    type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: optional
                                                                specify whether the
                                                                ConfigMap or its keys
                                                                must be defined
                                                              type: boolean
                                                        downwardAPI:
                                                          description: downwardAPI
                                                            information about the
                                                            downwardAPI data to project
                                                          type: object
                                                          properties:
                                                            items:
                                                              description: Items is
                                                                a list of DownwardAPIVolume
                                                                file
                                                              type: array
                                                              items:
                                                                description: DownwardAPIVolumeFile
                                                                  represents information
                                                                  to create the file
                                                                  containing the pod
                                                                  field
                                                                type: object
                                                                required:
                                                                - path
                                                                properties:
                                                                  fieldRef:
                                                                    description: 'Required:
                                                                      Selects a field
                                                                      of the pod:
                                                                      only annotations,
                                                                      labels, name
                                                                      and namespace
                                                                      are supported.'
                                                                    type: object
                                                                    required:
                                                                    - fieldPath
                                                                    properties:
                                                                      apiVersion:
                                                                        description: Version
                                                                          of the schema
                                                                          the FieldPath
                                                                          is written
                                                                          in terms
                                                                          of, defaults
                                                                          to "v1".
                                                                        type: string
                                                                      fieldPath:
                                                                        description: Path
                                                                          of the field
                                                                          to select
                                                                          in the specified
                                                                          API version.
                                                                        type: string
                                                                  mode:
                                                                    description: 'Optional:
                                                                      mode bits used
                                                                      to set permissions
                                                                      on this file,
                                                                      must be an octal
                                                                      value between
                                                                      0000 and 0777
                                                                      or a decimal
                                                                      value between
                                                                      0 and 511. YAML
                                                                      accepts both
                                                                      octal and decimal
                                                                      values, JSON
                                                                      requires decimal
                                                                      values for mode
                                                                      bits. If not
                                                                      specified, the
                                                                      volume defaultMode
                                                                      will be used.
                                                                      This might be
                                                                      in conflict
                                                                      with other options
                                                                      that affect
                                                                      the file mode,
                                                                      like fsGroup,
                                                                      and the result
                                                                      can be other
                                                                      mode bits set.'
                                                                    type: integer
                                                                    format: int32
                                                                  path:
                                                                    description: 'Required:
                                                                      Path is  the
                                                                      relative path
                                                                      name of the
                                                                      file to be created.
                                                                      Must not be
                                                                      absolute or
                                                                      contain the
                                                                      ''..'' path.
                                                                      Must be utf-8
                                                                      encoded. The
                                                                      first item of
                                                                      the relative
                                                                      path must not
                                                                      start with ''..'''
                                                                    type: string
                                                                  resourceFieldRef:
                                                                    description: 'Selects
                                                                      a resource of
                                                                      the container:
                                                                      only resources
                                                                      limits and requests
                                                                      (limits.cpu,
                                                                      limits.memory,
                                                                      requests.cpu
                                                                      and requests.memory)
                                                                      are currently
                                                                      supported.'
                                                                    type: object
                                                                    required:
                                                                    - resource
                                                                    properties:
                                                                      containerName:
                                                                        description: 'Container
                                                                          name: required
                                                                          for volumes,
                                                                          optional
                                                                          for env
                                                                          vars'
                                                                        type: string
                                                                      divisor:
                                                                        description: Specifies
                                                                          the output
                                                                          format of
                                                                          the exposed
                                                                          resources,
                                                                          defaults
                                                                          to "1"
                                                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                                        anyOf:
                                                                        - type: integer
                                                                        - type: string
                                                                        x-kubernetes-int-or-string: true
                                                                      resource:
                                                                        description: 'Required:
                                                                          resource
                                                                          to select'
                                                                        type: string
                                                        secret:
                                                          description: secret information
                                                            about the secret data
                                                            to project
                                                          type: object
                                                          properties:
                                                            items:
                                                              description: items if
                                                                unspecified, each
                                                                key-value pair in
                                                                the Data field of
                                                                the referenced Secret
                                                                will be projected
                                                                into the volume as
                                                                a file whose name
                                                                is the key and content
                                                                is the value. If specified,
                                                                the listed keys will
                                                                be projected into
                                                                the specified paths,
                                                                and unlisted keys
                                                                will not be present.
                                                                If a key is specified
                                                                which is not present
                                                                in the Secret, the
                                                                volume setup will
                                                                error unless it is
                                                                marked optional. Paths
                                                                must be relative and
                                                                may not contain the
                                                                '..' path or start
                                                                with '..'.
                                                              type: array
                                                              items:
                                                                description: Maps
                                                                  a string key to
                                                                  a path within a
                                                                  volume.
                                                                type: object
                                                                required:
                                                                - key
                                                                - path
                                                                properties:
                                                                  key:
                                                                    description: key
                                                                      is the key to
                                                                      project.
                                                                    type: string
                                                                  mode:
                                                                    description: 'mode
                                                                      is Optional:
                                                                      mode bits used
                                                                      to set permissions
                                                                      on this file.
                                                                      Must be an octal
                                                                      value between
                                                                      0000 and 0777
                                                                      or a decimal
                                                                      value between
                                                                      0 and 511. YAML
                                                                      accepts both
                                                                      octal and decimal
                                                                      values, JSON
                                                                      requires decimal
                                                                      values for mode
                                                                      bits. If not
                                                                      specified, the
                                                                      volume defaultMode
                                                                      will be used.
                                                                      This might be
                                                                      in conflict
                                                                      with other options
                                                                      that affect
                                                                      the file mode,
                                                                      like fsGroup,
                                                                      and the result
                                                                      can be other
                                                                      mode bits set.'
                                                                    type: integer
                                                                    format: int32
                                                                  path:
                                                                    description: path
                                                                      is the relative
                                                                      path of the
                                                                      file to map
                                                                      the key to.
                                                                      May not be an
                                                                      absolute path.
                                                                      May not contain
                                                                      the path element
                                                                      '..'. May not
                                                                      start with the
                                                                      string '..'.
                                                                    type: string
                                                            name:
                                                              description: 'Name of
                                                                the referent. More
                                                                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                                TODO: Add other useful
                                                                fields. apiVersion,
                                                                kind, uid?'
                                                              type: string
                                                            optional:
                                                              description: optional
                                                                field specify whether
                                                                the Secret or its
                                                                key must be defined
                                                              type: boolean
                                                        serviceAccountToken:
                                                          description: serviceAccountToken
                                                            is information about the
                                                            serviceAccountToken data
                                                            to project
                                                          type: object
                                                          required:
                                                          - path
                                                          properties:
                                                            audience:
                                                              description: audience
                                                                is the intended audience
                                                                of the token. A recipient
                                                                of a token must identify
                                                                itself with an identifier
                                                                specified in the audience
                                                                of the token, and
                                                                otherwise should reject
                                                                the token. The audience
                                                                defaults to the identifier
                                                                of the apiserver.
                                                              type: string
                                                            expirationSeconds:
                                                              description: expirationSeconds
                                                                is the requested duration
                                                                of validity of the
                                                                service account token.
                                                                As the token approaches
                                                                expiration, the kubelet
                                                                volume plugin will
                                                                proactively rotate
                                                                the service account
                                                                token. The kubelet
                                                                will start trying
                                                                to rotate the token
                                                                if the token is older
                                                                than 80 percent of
                                                                its time to live or
                                                                if the token is older
                                                                than 24 hours.Defaults
                                                                to 1 hour and must
                                                                be at least 10 minutes.
                                                              type: integer
                                                              format: int64
                                                            path:
                                                              description: path is
                                                                the path relative
                                                                to the mount point
                                                                of the file to project
                                                                the token into.
                                                              type: string
                                              quobyte:
                                                description: quobyte represents a
                                                  Quobyte mount on the host that shares
                                                  a pod's lifetime
                                                type: object
                                                required:
                                                - registry
                                                - volume
                                                properties:
                                                  group:
                                                    description: group to map volume
                                                      access to Default is no group
                                                    type: string
                                                  readOnly:
                                                    description: readOnly here will
                                                      force the Quobyte volume to
                                                      be mounted with read-only permissions.
                                                      Defaults to false.
                                                    type: boolean
                                                  registry:
                                                    description: registry represents
                                                      a single or multiple Quobyte
                                                      Registry services specified
                                                      as a string as host:port pair
                                                      (multiple entries are separated
                                                      with commas) which acts as the
                                                      central registry for volumes
                                                    type: string
                                                  tenant:
                                                    description: tenant owning the
                                                      given Quobyte volume in the
                                                      Backend Used with dynamically
                                                      provisioned Quobyte volumes,
                                                      value is set by the plugin
                                                    type: string
                                                  user:
                                                    description: user to map volume
                                                      access to Defaults to serivceaccount
                                                      user
                                                    type: string
                                                  volume:
                                                    description: volume is a string
                                                      that references an already created
                                                      Quobyte volume by name.
                                                    type: string
                                              rbd:
                                                description: 'rbd represents a Rados
                                                  Block Device mount on the host that
                                                  shares a pod''s lifetime. More info:
                                                  https://examples.k8s.io/volumes/rbd/README.md'
                                                type: object
                                                required:
                                                - image
                                                - monitors
                                                properties:
                                                  fsType:
                                                    description: 'fsType is the filesystem
                                                      type of the volume that you
                                                      want to mount. Tip: Ensure that
                                                      the filesystem type is supported
                                                      by the host operating system.
                                                      Examples: "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                                      TODO: how do we prevent errors
                                                      in the filesystem from compromising
                                                      the machine'
                                                    type: string
                                                  image:
                                                    description: 'image is the rados
                                                      image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: string
                                                  keyring:
                                                    description: 'keyring is the path
                                                      to key ring for RBDUser. Default
                                                      is /etc/ceph/keyring. More info:
                                                      https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: string
                                                  monitors:
                                                    description: 'monitors is a collection
                                                      of Ceph monitors. More info:
                                                      https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: array
                                                    items:
                                                      type: string
                                                  pool:
                                                    description: 'pool is the rados
                                                      pool name. Default is rbd. More
                                                      info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: string
                                                  readOnly:
                                                    description: 'readOnly here will
                                                      force the ReadOnly setting in
                                                      VolumeMounts. Defaults to false.
                                                      More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: boolean
                                                  secretRef:
                                                    description: 'secretRef is name
                                                      of the authentication secret
                                                      for RBDUser. If provided overrides
                                                      keyring. Default is nil. More
                                                      info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  user:
                                                    description: 'user is the rados
                                                      user name. Default is admin.
                                                      More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                                    type: string
                                              scaleIO:
                                                description: scaleIO represents a
                                                  ScaleIO persistent volume attached
                                                  and mounted on Kubernetes nodes.
                                                type: object
                                                required:
                                                - gateway
                                                - secretRef
                                                - system
                                                properties:
                                                  fsType:
                                                    description: fsType is the filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      Default is "xfs".
                                                    type: string
                                                  gateway:
                                                    description: gateway is the host
                                                      address of the ScaleIO API Gateway.
                                                    type: string
                                                  protectionDomain:
                                                    description: protectionDomain
                                                      is the name of the ScaleIO Protection
                                                      Domain for the configured storage.
                                                    type: string
                                                  readOnly:
                                                    description: readOnly Defaults
                                                      to false (read/write). ReadOnly
                                                      here will force the ReadOnly
                                                      setting in VolumeMounts.
                                                    type: boolean
                                                  secretRef:
                                                    description: secretRef references
                                                      to the secret for ScaleIO user
                                                      and other sensitive information.
                                                      If this is not provided, Login
                                                      operation will fail.
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  sslEnabled:
                                                    description: sslEnabled Flag enable/disable
                                                      SSL communication with Gateway,
                                                      default false
                                                    type: boolean
                                                  storageMode:
                                                    description: storageMode indicates
                                                      whether the storage for a volume
                                                      should be ThickProvisioned or
                                                      ThinProvisioned. Default is
                                                      ThinProvisioned.
                                                    type: string
                                                  storagePool:
                                                    description: storagePool is the
                                                      ScaleIO Storage Pool associated
                                                      with the protection domain.
                                                    type: string
                                                  system:
                                                    description: system is the name
                                                      of the storage system as configured
                                                      in ScaleIO.
                                                    type: string
                                                  volumeName:
                                                    description: volumeName is the
                                                      name of a volume already created
                                                      in the ScaleIO system that is
                                                      associated with this volume
                                                      source.
                                                    type: string
                                              secret:
                                                description: 'secret represents a
                                                  secret that should populate this
                                                  volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                type: object
                                                properties:
                                                  defaultMode:
                                                    description: 'defaultMode is Optional:
                                                      mode bits used to set permissions
                                                      on created files by default.
                                                      Must be an octal value between
                                                      0000 and 0777 or a decimal value
                                                      between 0 and 511. YAML accepts
                                                      both octal and decimal values,
                                                      JSON requires decimal values
                                                      for mode bits. Defaults to 0644.
                                                      Directories within the path
                                                      are not affected by this setting.
                                                      This might be in conflict with
                                                      other options that affect the
                                                      file mode, like fsGroup, and
                                                      the result can be other mode
                                                      bits set.'
                                                    type: integer
                                                    format: int32
                                                  items:
                                                    description: items If unspecified,
                                                      each key-value pair in the Data
                                                      field of the referenced Secret
                                                      will be projected into the volume
                                                      as a file whose name is the
                                                      key and content is the value.
                                                      If specified, the listed keys
                                                      will be projected into the specified
                                                      paths, and unlisted keys will
                                                      not be present. If a key is
                                                      specified which is not present
                                                      in the Secret, the volume setup
                                                      will error unless it is marked
                                                      optional. Paths must be relative
                                                      and may not contain the '..'
                                                      path or start with '..'.
                                                    type: array
                                                    items:
                                                      description: Maps a string key
                                                        to a path within a volume.
                                                      type: object
                                                      required:
                                                      - key
                                                      - path
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            key to project.
                                                          type: string
                                                        mode:
                                                          description: 'mode is Optional:
                                                            mode bits used to set
                                                            permissions on this file.
                                                            Must be an octal value
                                                            between 0000 and 0777
                                                            or a decimal value between
                                                            0 and 511. YAML accepts
                                                            both octal and decimal
                                                            values, JSON requires
                                                            decimal values for mode
                                                            bits. If not specified,
                                                            the volume defaultMode
                                                            will be used. This might
                                                            be in conflict with other
                                                            options that affect the
                                                            file mode, like fsGroup,
                                                            and the result can be
                                                            other mode bits set.'
                                                          type: integer
                                                          format: int32
                                                        path:
                                                          description: path is the
                                                            relative path of the file
                                                            to map the key to. May
                                                            not be an absolute path.
                                                            May not contain the path
                                                            element '..'. May not
                                                            start with the string
                                                            '..'.
                                                          type: string
                                                  optional:
                                                    description: optional field specify
                                                      whether the Secret or its keys
                                                      must be defined
                                                    type: boolean
                                                  secretName:
                                                    description: 'secretName is the
                                                      name of the secret in the pod''s
                                                      namespace to use. More info:
                                                      https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                                    type: string
                                              storageos:
                                                description: storageOS represents
                                                  a StorageOS volume attached and
                                                  mounted on Kubernetes nodes.
                                                type: object
                                                properties:
                                                  fsType:
                                                    description: fsType is the filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified.
                                                    type: string
                                                  readOnly:
                                                    description: readOnly defaults
                                                      to false (read/write). ReadOnly
                                                      here will force the ReadOnly
                                                      setting in VolumeMounts.
                                                    type: boolean
                                                  secretRef:
                                                    description: secretRef specifies
                                                      the secret to use for obtaining
                                                      the StorageOS API credentials.  If
                                                      not specified, default values
                                                      will be attempted.
                                                    type: object
                                                    properties:
                                                      name:
                                                        description: 'Name of the
                                                          referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                          TODO: Add other useful fields.
                                                          apiVersion, kind, uid?'
                                                        type: string
                                                  volumeName:
                                                    description: volumeName is the
                                                      human-readable name of the StorageOS
                                                      volume.  Volume names are only
                                                      unique within a namespace.
                                                    type: string
                                                  volumeNamespace:
                                                    description: volumeNamespace specifies
                                                      the scope of the volume within
                                                      StorageOS.  If no namespace
                                                      is specified then the Pod's
                                                      namespace will be used.  This
                                                      allows the Kubernetes name scoping
                                                      to be mirrored within StorageOS
                                                      for tighter integration. Set
                                                      VolumeName to any name to override
                                                      the default behaviour. Set to
                                                      "default" if you are not using
                                                      namespaces within StorageOS.
                                                      Namespaces that do not pre-exist
                                                      within StorageOS will be created.
                                                    type: string
                                              vsphereVolume:
                                                description: vsphereVolume represents
                                                  a vSphere volume attached and mounted
                                                  on kubelets host machine
                                                type: object
                                                required:
                                                - volumePath
                                                properties:
                                                  fsType:
                                                    description: fsType is filesystem
                                                      type to mount. Must be a filesystem
                                                      type supported by the host operating
                                                      system. Ex. "ext4", "xfs", "ntfs".
                                                      Implicitly inferred to be "ext4"
                                                      if unspecified.
                                                    type: string
                                                  storagePolicyID:
                                                    description: storagePolicyID is
                                                      the storage Policy Based Management
                                                      (SPBM) profile ID associated
                                                      with the StoragePolicyName.
                                                    type: string
                                                  storagePolicyName:
                                                    description: storagePolicyName
                                                      is the storage Policy Based
                                                      Management (SPBM) profile name.
                                                    type: string
                                                  volumePath:
                                                    description: volumePath is the
                                                      path that identifies vSphere
                                                      volume vmdk
                                                    type: string
                      permissions:
                        type: array
                        items:
                          description: StrategyDeploymentPermissions describe the
                            rbac rules and service account needed by the install strategy
                          type: object
                          required:
                          - rules
                          - serviceAccountName
                          properties:
                            rules:
                              type: array
                              items:
                                description: PolicyRule holds information that describes
                                  a policy rule, but does not contain information
                                  about who the rule applies to or which namespace
                                  the rule applies to.
                                type: object
                                required:
                                - verbs
                                properties:
                                  apiGroups:
                                    description: APIGroups is the name of the APIGroup
                                      that contains the resources.  If multiple API
                                      groups are specified, any action requested against
                                      one of the enumerated resources in any API group
                                      will be allowed. "" represents the core API
                                      group and "*" represents all API groups.
                                    type: array
                                    items:
                                      type: string
                                  nonResourceURLs:
                                    description: NonResourceURLs is a set of partial
                                      urls that a user should have access to.  *s
                                      are allowed, but only as the full, final step
                                      in the path Since non-resource URLs are not
                                      namespaced, this field is only applicable for
                                      ClusterRoles referenced from a ClusterRoleBinding.
                                      Rules can either apply to API resources (such
                                      as "pods" or "secrets") or non-resource URL
                                      paths (such as "/api"),  but not both.
                                    type: array
                                    items:
                                      type: string
                                  resourceNames:
                                    description: ResourceNames is an optional white
                                      list of names that the rule applies to.  An
                                      empty set means that everything is allowed.
                                    type: array
                                    items:
                                      type: string
                                  resources:
                                    description: Resources is a list of resources
                                      this rule applies to. '*' represents all resources.
                                    type: array
                                    items:
                                      type: string
                                  verbs:
                                    description: Verbs is a list of Verbs that apply
                                      to ALL the ResourceKinds contained in this rule.
                                      '*' represents all verbs.
                                    type: array
                                    items:
                                      type: string
                            serviceAccountName:
                              type: string
                  strategy:
                    type: string
              installModes:
                description: InstallModes specify supported installation types
                type: array
                items:
                  description: InstallMode associates an InstallModeType with a flag
                    representing if the CSV supports it
                  type: object
                  required:
                  - supported
                  - type
                  properties:
                    supported:
                      type: boolean
                    type:
                      description: InstallModeType is a supported type of install
                        mode for CSV installation
                      type: string
              keywords:
                description: A list of keywords describing the operator.
                type: array
                items:
                  type: string
              labels:
                description: Map of string keys and values that can be used to organize
                  and categorize (scope and select) objects.
                type: object
                additionalProperties:
                  type: string
              links:
                description: A list of links related to the operator.
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    url:
                      type: string
              maintainers:
                description: A list of organizational entities maintaining the operator.
                type: array
                items:
                  type: object
                  properties:
                    email:
                      type: string
                    name:
                      type: string
              maturity:
                type: string
              minKubeVersion:
                type: string
              nativeAPIs:
                type: array
                items:
                  description: GroupVersionKind unambiguously identifies a kind.  It
                    doesn't anonymously include GroupVersion to avoid automatic coercion.  It
                    doesn't use a GroupVersion to avoid custom marshalling
                  type: object
                  required:
                  - group
                  - kind
                  - version
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    version:
                      type: string
              provider:
                description: The publishing entity behind the operator.
                type: object
                properties:
                  name:
                    type: string
                  url:
                    type: string
              relatedImages:
                description: List any related images, or other container images that
                  your Operator might require to perform their functions. This list
                  should also include operand images as well. All image references
                  should be specified by digest (SHA) and not by tag. This field is
                  only used during catalog creation and plays no part in cluster runtime.
                type: array
                items:
                  type: object
                  required:
                  - image
                  - name
                  properties:
                    image:
                      type: string
                    name:
                      type: string
              replaces:
                description: The name of a CSV this one replaces. Should match the
                  `metadata.Name` field of the old CSV.
                type: string
              selector:
                description: Label selector for related resources.
                type: object
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    type: array
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      type: object
                      required:
                      - key
                      - operator
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          type: array
                          items:
                            type: string
                  matchLabels:
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                    additionalProperties:
                      type: string
              skips:
                description: The name(s) of one or more CSV(s) that should be skipped
                  in the upgrade graph. Should match the `metadata.Name` field of
                  the CSV that should be skipped. This field is only used during catalog
                  creation and plays no part in cluster runtime.
                type: array
                items:
                  type: string
              version:
                type: string
              webhookdefinitions:
                type: array
                items:
                  description: WebhookDescription provides details to OLM about required
                    webhooks
                  type: object
                  required:
                  - admissionReviewVersions
                  - generateName
                  - sideEffects
                  - type
                  properties:
                    admissionReviewVersions:
                      type: array
                      items:
                        type: string
                    containerPort:
                      type: integer
                      format: int32
                      default: 443
                      maximum: 65535
                      minimum: 1
                    conversionCRDs:
                      type: array
                      items:
                        type: string
                    deploymentName:
                      type: string
                    failurePolicy:
                      description: FailurePolicyType specifies a failure policy that
                        defines how unrecognized errors from the admission endpoint
                        are handled.
                      type: string
                    generateName:
                      type: string
                    matchPolicy:
                      description: MatchPolicyType specifies the type of match policy.
                      type: string
                    objectSelector:
                      description: A label selector is a label query over a set of
                        resources. The result of matchLabels and matchExpressions
                        are ANDed. An empty label selector matches all objects. A
                        null label selector matches no objects.
                      type: object
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          type: array
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            type: object
                            required:
                            - key
                            - operator
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values.
                                  If the operator is In or NotIn, the values array
                                  must be non-empty. If the operator is Exists or
                                  DoesNotExist, the values array must be empty. This
                                  array is replaced during a strategic merge patch.
                                type: array
                                items:
                                  type: string
                        matchLabels:
                          description: matchLabels is a map of {key,value} pairs.
                            A single {key,value} in the matchLabels map is equivalent
                            to an element of matchExpressions, whose key field is
                            "key", the operator is "In", and the values array contains
                            only "value". The requirements are ANDed.
                          type: object
                          additionalProperties:
                            type: string
                    reinvocationPolicy:
                      description: ReinvocationPolicyType specifies what type of policy
                        the admission hook uses.
                      type: string
                    rules:
                      type: array
                      items:
                        description: RuleWithOperations is a tuple of Operations and
                          Resources. It is recommended to make sure that all the tuple
                          expansions are valid.
                        type: object
                        properties:
                          apiGroups:
                            description: APIGroups is the API groups the resources
                              belong to. '*' is all groups. If '*' is present, the
                              length of the slice must be one. Required.
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          apiVersions:
                            description: APIVersions is the API versions the resources
                              belong to. '*' is all versions. If '*' is present, the
                              length of the slice must be one. Required.
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          operations:
                            description: Operations is the operations the admission
                              hook cares about - CREATE, UPDATE, DELETE, CONNECT or
                              * for all of those operations and any future admission
                              operations that are added. If '*' is present, the length
                              of the slice must be one. Required.
                            type: array
                            items:
                              description: OperationType specifies an operation for
                                a request.
                              type: string
                            x-kubernetes-list-type: atomic
                          resources:
                            description: "Resources is a list of resources this rule\
                              \ applies to. \n For example: 'pods' means pods. 'pods/log'\
                              \ means the log subresource of pods. '*' means all resources,\
                              \ but not subresources. 'pods/*' means all subresources\
                              \ of pods. '*/scale' means all scale subresources. '*/*'\
                              \ means all resources and their subresources. \n If\
                              \ wildcard is present, the validation rule will ensure\
                              \ resources do not overlap with each other. \n Depending\
                              \ on the enclosing object, subresources might not be\
                              \ allowed. Required."
                            type: array
                            items:
                              type: string
                            x-kubernetes-list-type: atomic
                          scope:
                            description: scope specifies the scope of this rule. Valid
                              values are "Cluster", "Namespaced", and "*" "Cluster"
                              means that only cluster-scoped resources will match
                              this rule. Namespace API objects are cluster-scoped.
                              "Namespaced" means that only namespaced resources will
                              match this rule. "*" means that there are no scope restrictions.
                              Subresources match the scope of their parent resource.
                              Default is "*".
                            type: string
                    sideEffects:
                      description: SideEffectClass specifies the types of side effects
                        a webhook may have.
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      x-kubernetes-int-or-string: true
                    timeoutSeconds:
                      type: integer
                      format: int32
                    type:
                      description: WebhookAdmissionType is the type of admission webhooks
                        supported by OLM
                      type: string
                      enum:
                      - ValidatingAdmissionWebhook
                      - MutatingAdmissionWebhook
                      - ConversionWebhook
                    webhookPath:
                      type: string
          status:
            description: ClusterServiceVersionStatus represents information about
              the status of a CSV. Status may trail the actual state of a system.
            type: object
            properties:
              certsLastUpdated:
                description: Last time the owned APIService certs were updated
                type: string
                format: date-time
              certsRotateAt:
                description: Time the owned APIService certs will rotate next
                type: string
                format: date-time
              cleanup:
                description: CleanupStatus represents information about the status
                  of cleanup while a CSV is pending deletion
                type: object
                properties:
                  pendingDeletion:
                    description: PendingDeletion is the list of custom resource objects
                      that are pending deletion and blocked on finalizers. This indicates
                      the progress of cleanup that is blocking CSV deletion or operator
                      uninstall.
                    type: array
                    items:
                      description: ResourceList represents a list of resources which
                        are of the same Group/Kind
                      type: object
                      required:
                      - group
                      - instances
                      - kind
                      properties:
                        group:
                          type: string
                        instances:
                          type: array
                          items:
                            type: object
                            required:
                            - name
                            properties:
                              name:
                                type: string
                              namespace:
                                description: Namespace can be empty for cluster-scoped
                                  resources
                                type: string
                        kind:
                          type: string
              conditions:
                description: List of conditions, a history of state transitions
                type: array
                items:
                  description: Conditions appear in the status as a record of state
                    transitions on the ClusterServiceVersion
                  type: object
                  properties:
                    lastTransitionTime:
                      description: Last time the status transitioned from one status
                        to another.
                      type: string
                      format: date-time
                    lastUpdateTime:
                      description: Last time we updated the status
                      type: string
                      format: date-time
                    message:
                      description: A human readable message indicating details about
                        why the ClusterServiceVersion is in this condition.
                      type: string
                    phase:
                      description: Condition of the ClusterServiceVersion
                      type: string
                    reason:
                      description: A brief CamelCase message indicating details about
                        why the ClusterServiceVersion is in this state. e.g. 'RequirementsNotMet'
                      type: string
              lastTransitionTime:
                description: Last time the status transitioned from one status to
                  another.
                type: string
                format: date-time
              lastUpdateTime:
                description: Last time we updated the status
                type: string
                format: date-time
              message:
                description: A human readable message indicating details about why
                  the ClusterServiceVersion is in this condition.
                type: string
              phase:
                description: Current condition of the ClusterServiceVersion
                type: string
              reason:
                description: A brief CamelCase message indicating details about why
                  the ClusterServiceVersion is in this state. e.g. 'RequirementsNotMet'
                type: string
              requirementStatus:
                description: The status of each requirement for this CSV
                type: array
                items:
                  type: object
                  required:
                  - group
                  - kind
                  - message
                  - name
                  - status
                  - version
                  properties:
                    dependents:
                      type: array
                      items:
                        description: DependentStatus is the status for a dependent
                          requirement (to prevent infinite nesting)
                        type: object
                        required:
                        - group
                        - kind
                        - status
                        - version
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          message:
                            type: string
                          status:
                            description: StatusReason is a camelcased reason for the
                              status of a RequirementStatus or DependentStatus
                            type: string
                          uuid:
                            type: string
                          version:
                            type: string
                    group:
                      type: string
                    kind:
                      type: string
                    message:
                      type: string
                    name:
                      type: string
                    status:
                      description: StatusReason is a camelcased reason for the status
                        of a RequirementStatus or DependentStatus
                      type: string
                    uuid:
                      type: string
                    version:
                      type: string
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/installplans.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: installplans.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: InstallPlan
    listKind: InstallPlanList
    plural: installplans
    shortNames:
    - ip
    singular: installplan
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The first CSV in the list of clusterServiceVersionNames
      jsonPath: .spec.clusterServiceVersionNames[0]
      name: CSV
      type: string
    - description: The approval mode
      jsonPath: .spec.approval
      name: Approval
      type: string
    - jsonPath: .spec.approved
      name: Approved
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: InstallPlan defines the installation of a set of operators.
        type: object
        required:
        - metadata
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: InstallPlanSpec defines a set of Application resources to
              be installed
            type: object
            required:
            - approval
            - approved
            - clusterServiceVersionNames
            properties:
              approval:
                description: Approval is the user approval policy for an InstallPlan.
                  It must be one of "Automatic" or "Manual".
                type: string
              approved:
                type: boolean
              clusterServiceVersionNames:
                type: array
                items:
                  type: string
              generation:
                type: integer
              source:
                type: string
              sourceNamespace:
                type: string
          status:
            description: "InstallPlanStatus represents the information about the status\
              \ of steps required to complete installation. \n Status may trail the\
              \ actual state of a system."
            type: object
            required:
            - catalogSources
            - phase
            properties:
              attenuatedServiceAccountRef:
                description: AttenuatedServiceAccountRef references the service account
                  that is used to do scoped operator install.
                type: object
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
              bundleLookups:
                description: BundleLookups is the set of in-progress requests to pull
                  and unpackage bundle content to the cluster.
                type: array
                items:
                  description: BundleLookup is a request to pull and unpackage the
                    content of a bundle to the cluster.
                  type: object
                  required:
                  - catalogSourceRef
                  - identifier
                  - path
                  - replaces
                  properties:
                    catalogSourceRef:
                      description: CatalogSourceRef is a reference to the CatalogSource
                        the bundle path was resolved from.
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                    conditions:
                      description: Conditions represents the overall state of a BundleLookup.
                      type: array
                      items:
                        type: object
                        required:
                        - status
                        - type
                        properties:
                          lastTransitionTime:
                            description: Last time the condition transitioned from
                              one status to another.
                            type: string
                            format: date-time
                          lastUpdateTime:
                            description: Last time the condition was probed.
                            type: string
                            format: date-time
                          message:
                            description: A human readable message indicating details
                              about the transition.
                            type: string
                          reason:
                            description: The reason for the condition's last transition.
                            type: string
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of condition.
                            type: string
                    identifier:
                      description: Identifier is the catalog-unique name of the operator
                        (the name of the CSV for bundles that contain CSVs)
                      type: string
                    path:
                      description: Path refers to the location of a bundle to pull.
                        It's typically an image reference.
                      type: string
                    properties:
                      description: The effective properties of the unpacked bundle.
                      type: string
                    replaces:
                      description: Replaces is the name of the bundle to replace with
                        the one found at Path.
                      type: string
              catalogSources:
                type: array
                items:
                  type: string
              conditions:
                type: array
                items:
                  description: InstallPlanCondition represents the overall status
                    of the execution of an InstallPlan.
                  type: object
                  properties:
                    lastTransitionTime:
                      type: string
                      format: date-time
                    lastUpdateTime:
                      type: string
                      format: date-time
                    message:
                      type: string
                    reason:
                      description: ConditionReason is a camelcased reason for the
                        state transition.
                      type: string
                    status:
                      type: string
                    type:
                      description: InstallPlanConditionType describes the state of
                        an InstallPlan at a certain point as a whole.
                      type: string
              message:
                description: Message is a human-readable message containing detailed
                  information that may be important to understanding why the plan
                  has its current status.
                type: string
              phase:
                description: InstallPlanPhase is the current status of a InstallPlan
                  as a whole.
                type: string
              plan:
                type: array
                items:
                  description: Step represents the status of an individual step in
                    an InstallPlan.
                  type: object
                  required:
                  - resolving
                  - resource
                  - status
                  properties:
                    optional:
                      type: boolean
                    resolving:
                      type: string
                    resource:
                      description: StepResource represents the status of a resource
                        to be tracked by an InstallPlan.
                      type: object
                      required:
                      - group
                      - kind
                      - name
                      - sourceName
                      - sourceNamespace
                      - version
                      properties:
                        group:
                          type: string
                        kind:
                          type: string
                        manifest:
                          type: string
                        name:
                          type: string
                        sourceName:
                          type: string
                        sourceNamespace:
                          type: string
                        version:
                          type: string
                    status:
                      description: StepStatus is the current status of a particular
                        resource an in InstallPlan
                      type: string
              startTime:
                description: StartTime is the time when the controller began applying
                  the resources listed in the plan to the cluster.
                type: string
                format: date-time
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/olmconfigs.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: olmconfigs.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: OLMConfig
    listKind: OLMConfigList
    plural: olmconfigs
    singular: olmconfig
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: OLMConfig is a resource responsible for configuring OLM.
        type: object
        required:
        - metadata
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OLMConfigSpec is the spec for an OLMConfig resource.
            type: object
            properties:
              features:
                description: Features contains the list of configurable OLM features.
                type: object
                properties:
                  disableCopiedCSVs:
                    description: DisableCopiedCSVs is used to disable OLM's "Copied
                      CSV" feature for operators installed at the cluster scope, where
                      a cluster scoped operator is one that has been installed in
                      an OperatorGroup that targets all namespaces. When reenabled,
                      OLM will recreate the "Copied CSVs" for each cluster scoped
                      operator.
                    type: boolean
          status:
            description: OLMConfigStatus is the status for an OLMConfig resource.
            type: object
            properties:
              conditions:
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/operatorconditions.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: operatorconditions.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: OperatorCondition
    listKind: OperatorConditionList
    plural: operatorconditions
    shortNames:
    - condition
    singular: operatorcondition
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: OperatorCondition is a Custom Resource of type `OperatorCondition`
          which is used to convey information to OLM about the state of an operator.
        type: object
        required:
        - metadata
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorConditionSpec allows a cluster admin to convey information
              about the state of an operator to OLM, potentially overriding state
              reported by the operator.
            type: object
            properties:
              deployments:
                type: array
                items:
                  type: string
              overrides:
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              serviceAccounts:
                type: array
                items:
                  type: string
          status:
            description: OperatorConditionStatus allows an operator to convey information
              its state to OLM. The status may trail the actual state of a system.
            type: object
            properties:
              conditions:
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
    served: true
    storage: false
    subresources:
      status: {}
  - name: v2
    schema:
      openAPIV3Schema:
        description: OperatorCondition is a Custom Resource of type `OperatorCondition`
          which is used to convey information to OLM about the state of an operator.
        type: object
        required:
        - metadata
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorConditionSpec allows an operator to report state
              to OLM and provides cluster admin with the ability to manually override
              state reported by the operator.
            type: object
            properties:
              conditions:
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              deployments:
                type: array
                items:
                  type: string
              overrides:
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              serviceAccounts:
                type: array
                items:
                  type: string
          status:
            description: OperatorConditionStatus allows OLM to convey which conditions
              have been observed.
            type: object
            properties:
              conditions:
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/operatorgroups.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: operatorgroups.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: OperatorGroup
    listKind: OperatorGroupList
    plural: operatorgroups
    shortNames:
    - og
    singular: operatorgroup
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: OperatorGroup is the unit of multitenancy for OLM managed operators.
          It constrains the installation of operators in its namespace to a specified
          set of target namespaces.
        type: object
        required:
        - metadata
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorGroupSpec is the spec for an OperatorGroup resource.
            type: object
            default:
              upgradeStrategy: Default
            properties:
              selector:
                description: Selector selects the OperatorGroup's target namespaces.
                type: object
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    type: array
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      type: object
                      required:
                      - key
                      - operator
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          type: array
                          items:
                            type: string
                  matchLabels:
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                    additionalProperties:
                      type: string
              serviceAccountName:
                description: ServiceAccountName is the admin specified service account
                  which will be used to deploy operator(s) in this operator group.
                type: string
              staticProvidedAPIs:
                description: Static tells OLM not to update the OperatorGroup's providedAPIs
                  annotation
                type: boolean
              targetNamespaces:
                description: TargetNamespaces is an explicit set of namespaces to
                  target. If it is set, Selector is ignored.
                type: array
                items:
                  type: string
                x-kubernetes-list-type: set
              upgradeStrategy:
                description: "UpgradeStrategy defines the upgrade strategy for operators\
                  \ in the namespace. There are currently two supported upgrade strategies:\
                  \ \n Default: OLM will only allow clusterServiceVersions to move\
                  \ to the replacing phase from the succeeded phase. This effectively\
                  \ means that OLM will not allow operators to move to the next version\
                  \ if an installation or upgrade has failed. \n TechPreviewUnsafeFailForward:\
                  \ OLM will allow clusterServiceVersions to move to the replacing\
                  \ phase from the succeeded phase or from the failed phase. Additionally,\
                  \ OLM will generate new installPlans when a subscription references\
                  \ a failed installPlan and the catalog has been updated with a new\
                  \ upgrade for the existing set of operators. \n WARNING: The TechPreviewUnsafeFailForward\
                  \ upgrade strategy is unsafe and may result in unexpected behavior\
                  \ or unrecoverable data loss unless you have deep understanding\
                  \ of the set of operators being managed in the namespace."
                type: string
                default: Default
                enum:
                - Default
                - TechPreviewUnsafeFailForward
          status:
            description: OperatorGroupStatus is the status for an OperatorGroupResource.
            type: object
            required:
            - lastUpdated
            properties:
              conditions:
                description: Conditions is an array of the OperatorGroup's conditions.
                type: array
                items:
                  description: "Condition contains details for one aspect of the current\
                    \ state of this API Resource. --- This struct is intended for\
                    \ direct use as an array at the field path .status.conditions.\
                    \  For example, \n type FooStatus struct{ // Represents the observations\
                    \ of a foo's current state. // Known .status.conditions.type are:\
                    \ \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type\
                    \ // +patchStrategy=merge // +listType=map // +listMapKey=type\
                    \ Conditions []metav1.Condition `json:\"conditions,omitempty\"\
                    \ patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"\
                    ` \n // other fields }"
                  type: object
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      type: string
                      format: date-time
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      type: string
                      maxLength: 32768
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      type: integer
                      format: int64
                      minimum: 0
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      type: string
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                      enum:
                      - 'True'
                      - 'False'
                      - Unknown
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      type: string
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
              lastUpdated:
                description: LastUpdated is a timestamp of the last time the OperatorGroup's
                  status was Updated.
                type: string
                format: date-time
              namespaces:
                description: Namespaces is the set of target namespaces for the OperatorGroup.
                type: array
                items:
                  type: string
                x-kubernetes-list-type: set
              serviceAccountRef:
                description: ServiceAccountRef references the service account object
                  specified.
                type: object
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
    served: true
    storage: true
    subresources:
      status: {}
  - name: v1alpha2
    schema:
      openAPIV3Schema:
        description: OperatorGroup is the unit of multitenancy for OLM managed operators.
          It constrains the installation of operators in its namespace to a specified
          set of target namespaces.
        type: object
        required:
        - metadata
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorGroupSpec is the spec for an OperatorGroup resource.
            type: object
            properties:
              selector:
                description: Selector selects the OperatorGroup's target namespaces.
                type: object
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    type: array
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      type: object
                      required:
                      - key
                      - operator
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          type: array
                          items:
                            type: string
                  matchLabels:
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                    additionalProperties:
                      type: string
              serviceAccountName:
                description: ServiceAccountName is the admin specified service account
                  which will be used to deploy operator(s) in this operator group.
                type: string
              staticProvidedAPIs:
                description: Static tells OLM not to update the OperatorGroup's providedAPIs
                  annotation
                type: boolean
              targetNamespaces:
                description: TargetNamespaces is an explicit set of namespaces to
                  target. If it is set, Selector is ignored.
                type: array
                items:
                  type: string
          status:
            description: OperatorGroupStatus is the status for an OperatorGroupResource.
            type: object
            required:
            - lastUpdated
            properties:
              lastUpdated:
                description: LastUpdated is a timestamp of the last time the OperatorGroup's
                  status was Updated.
                type: string
                format: date-time
              namespaces:
                description: Namespaces is the set of target namespaces for the OperatorGroup.
                type: array
                items:
                  type: string
              serviceAccountRef:
                description: ServiceAccountRef references the service account object
                  specified.
                type: object
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
    served: true
    storage: false
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/operators.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: operators.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: Operator
    listKind: OperatorList
    plural: operators
    singular: operator
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Operator represents a cluster operator.
        type: object
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperatorSpec defines the desired state of Operator
            type: object
          status:
            description: OperatorStatus defines the observed state of an Operator
              and its components
            type: object
            properties:
              components:
                description: Components describes resources that compose the operator.
                type: object
                required:
                - labelSelector
                properties:
                  labelSelector:
                    description: LabelSelector is a label query over a set of resources
                      used to select the operator's components
                    type: object
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                          - key
                          - operator
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                  refs:
                    description: Refs are a set of references to the operator's component
                      resources, selected with LabelSelector.
                    type: array
                    items:
                      description: RichReference is a reference to a resource, enriched
                        with its status conditions.
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        conditions:
                          description: Conditions represents the latest state of the
                            component.
                          type: array
                          items:
                            description: Condition represent the latest available
                              observations of an component's state.
                            type: object
                            required:
                            - status
                            - type
                            properties:
                              lastTransitionTime:
                                description: Last time the condition transitioned
                                  from one status to another.
                                type: string
                                format: date-time
                              lastUpdateTime:
                                description: Last time the condition was probed
                                type: string
                                format: date-time
                              message:
                                description: A human readable message indicating details
                                  about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of condition.
                                type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/olm/crds/subscriptions.operators.coreos.com.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  name: subscriptions.operators.coreos.com
spec:
  group: operators.coreos.com
  names:
    categories:
    - olm
    kind: Subscription
    listKind: SubscriptionList
    plural: subscriptions
    shortNames:
    - sub
    - subs
    singular: subscription
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The package subscribed to
      jsonPath: .spec.name
      name: Package
      type: string
    - description: The catalog source for the specified package
      jsonPath: .spec.source
      name: Source
      type: string
    - description: The channel of updates to subscribe to
      jsonPath: .spec.channel
      name: Channel
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Subscription keeps operators up to date by tracking changes to
          Catalogs.
        type: object
        required:
        - metadata
        - spec
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SubscriptionSpec defines an Application that can be installed
            type: object
            required:
            - name
            - source
            - sourceNamespace
            properties:
              channel:
                type: string
              config:
                description: SubscriptionConfig contains configuration specified for
                  a subscription.
                type: object
                properties:
                  affinity:
                    description: If specified, overrides the pod's scheduling constraints.
                      nil sub-attributes will *not* override the original values in
                      the pod.spec for those sub-attributes. Use empty object ({})
                      to erase original sub-attribute values.
                    type: object
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node matches the corresponding matchExpressions;
                              the node(s) with the highest sum are the most preferred.
                            type: array
                            items:
                              description: An empty preferred scheduling term matches
                                all objects with implicit weight 0 (i.e. it's a no-op).
                                A null preferred scheduling term matches no objects
                                (i.e. is also a no-op).
                              type: object
                              required:
                              - preference
                              - weight
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      type: array
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            type: array
                                            items:
                                              type: string
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      type: array
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            type: array
                                            items:
                                              type: string
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  type: integer
                                  format: int32
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from
                              its node.
                            type: object
                            required:
                            - nodeSelectorTerms
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                type: array
                                items:
                                  description: A null or empty node selector term
                                    matches no objects. The requirements of them are
                                    ANDed. The TopologySelectorTerm type implements
                                    a subset of the NodeSelectorTerm.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      type: array
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            type: array
                                            items:
                                              type: string
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      type: array
                                      items:
                                        description: A node selector requirement is
                                          a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators
                                              are In, NotIn, Exists, DoesNotExist.
                                              Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values.
                                              If the operator is In or NotIn, the
                                              values array must be non-empty. If the
                                              operator is Exists or DoesNotExist,
                                              the values array must be empty. If the
                                              operator is Gt or Lt, the values array
                                              must have a single element, which will
                                              be interpreted as an integer. This array
                                              is replaced during a strategic merge
                                              patch.
                                            type: array
                                            items:
                                              type: string
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the affinity expressions specified
                              by this field, but it may choose a node that violates
                              one or more of the expressions. The node that is most
                              preferred is the one with the greatest sum of weights,
                              i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            type: array
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              type: object
                              required:
                              - podAffinityTerm
                              - weight
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  type: object
                                  required:
                                  - topologyKey
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          type: array
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            type: object
                                            required:
                                            - key
                                            - operator
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          type: array
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            type: object
                                            required:
                                            - key
                                            - operator
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  type: integer
                                  format: int32
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by
                              this field are not met at scheduling time, the pod will
                              not be scheduled onto the node. If the affinity requirements
                              specified by this field cease to be met at some point
                              during pod execution (e.g. due to a pod label update),
                              the system may or may not try to eventually evict the
                              pod from its node. When there are multiple elements,
                              the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            type: array
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              type: object
                              required:
                              - topologyKey
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      type: array
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      type: array
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  type: array
                                  items:
                                    type: string
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods
                              to nodes that satisfy the anti-affinity expressions
                              specified by this field, but it may choose a node that
                              violates one or more of the expressions. The node that
                              is most preferred is the one with the greatest sum of
                              weights, i.e. for each node that meets all of the scheduling
                              requirements (resource request, requiredDuringScheduling
                              anti-affinity expressions, etc.), compute a sum by iterating
                              through the elements of this field and adding "weight"
                              to the sum if the node has pods which matches the corresponding
                              podAffinityTerm; the node(s) with the highest sum are
                              the most preferred.
                            type: array
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              type: object
                              required:
                              - podAffinityTerm
                              - weight
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  type: object
                                  required:
                                  - topologyKey
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          type: array
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            type: object
                                            required:
                                            - key
                                            - operator
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    namespaceSelector:
                                      description: A label query over the set of namespaces
                                        that the term applies to. The term is applied
                                        to the union of the namespaces selected by
                                        this field and the ones listed in the namespaces
                                        field. null selector and null or empty namespaces
                                        list means "this pod's namespace". An empty
                                        selector ({}) matches all namespaces.
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          type: array
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            type: object
                                            required:
                                            - key
                                            - operator
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    namespaces:
                                      description: namespaces specifies a static list
                                        of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces
                                        listed in this field and the ones selected
                                        by namespaceSelector. null or empty namespaces
                                        list and null namespaceSelector means "this
                                        pod's namespace".
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the
                                        pods matching the labelSelector in the specified
                                        namespaces, where co-located is defined as
                                        running on a node whose value of the label
                                        with key topologyKey matches that of any node
                                        on which any of the selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                weight:
                                  description: weight associated with matching the
                                    corresponding podAffinityTerm, in the range 1-100.
                                  type: integer
                                  format: int32
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified
                              by this field are not met at scheduling time, the pod
                              will not be scheduled onto the node. If the anti-affinity
                              requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod
                              label update), the system may or may not try to eventually
                              evict the pod from its node. When there are multiple
                              elements, the lists of nodes corresponding to each podAffinityTerm
                              are intersected, i.e. all terms must be satisfied.
                            type: array
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s))
                                that this pod should be co-located (affinity) or not
                                co-located (anti-affinity) with, where co-located
                                is defined as running on a node whose value of the
                                label with key <topologyKey> matches that of any node
                                on which a pod of the set of pods is running
                              type: object
                              required:
                              - topologyKey
                              properties:
                                labelSelector:
                                  description: A label query over a set of resources,
                                    in this case pods.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      type: array
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                namespaceSelector:
                                  description: A label query over the set of namespaces
                                    that the term applies to. The term is applied
                                    to the union of the namespaces selected by this
                                    field and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list
                                    means "this pod's namespace". An empty selector
                                    ({}) matches all namespaces.
                                  type: object
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      type: array
                                      items:
                                        description: A label selector requirement
                                          is a selector that contains values, a key,
                                          and an operator that relates the key and
                                          values.
                                        type: object
                                        required:
                                        - key
                                        - operator
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's
                                              relationship to a set of values. Valid
                                              operators are In, NotIn, Exists and
                                              DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string
                                              values. If the operator is In or NotIn,
                                              the values array must be non-empty.
                                              If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This
                                              array is replaced during a strategic
                                              merge patch.
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      description: matchLabels is a map of {key,value}
                                        pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions,
                                        whose key field is "key", the operator is
                                        "In", and the values array contains only "value".
                                        The requirements are ANDed.
                                      type: object
                                      additionalProperties:
                                        type: string
                                namespaces:
                                  description: namespaces specifies a static list
                                    of namespace names that the term applies to. The
                                    term is applied to the union of the namespaces
                                    listed in this field and the ones selected by
                                    namespaceSelector. null or empty namespaces list
                                    and null namespaceSelector means "this pod's namespace".
                                  type: array
                                  items:
                                    type: string
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods
                                    matching the labelSelector in the specified namespaces,
                                    where co-located is defined as running on a node
                                    whose value of the label with key topologyKey
                                    matches that of any node on which any of the selected
                                    pods is running. Empty topologyKey is not allowed.
                                  type: string
                  env:
                    description: Env is a list of environment variables to set in
                      the container. Cannot be updated.
                    type: array
                    items:
                      description: EnvVar represents an environment variable present
                        in a Container.
                      type: object
                      required:
                      - name
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: 'Variable references $(VAR_NAME) are expanded
                            using the previously defined environment variables in
                            the container and any service environment variables. If
                            a variable cannot be resolved, the reference in the input
                            string will be unchanged. Double $$ are reduced to a single
                            $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                            Escaped references will never be expanded, regardless
                            of whether the variable exists or not. Defaults to "".'
                          type: string
                        valueFrom:
                          description: Source for the environment variable's value.
                            Cannot be used if value is not empty.
                          type: object
                          properties:
                            configMapKeyRef:
                              description: Selects a key of a ConfigMap.
                              type: object
                              required:
                              - key
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                            fieldRef:
                              description: 'Selects a field of the pod: supports metadata.name,
                                metadata.namespace, `metadata.labels[''<KEY>'']`,
                                `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                spec.serviceAccountName, status.hostIP, status.podIP,
                                status.podIPs.'
                              type: object
                              required:
                              - fieldPath
                              properties:
                                apiVersion:
                                  description: Version of the schema the FieldPath
                                    is written in terms of, defaults to "v1".
                                  type: string
                                fieldPath:
                                  description: Path of the field to select in the
                                    specified API version.
                                  type: string
                            resourceFieldRef:
                              description: 'Selects a resource of the container: only
                                resources limits and requests (limits.cpu, limits.memory,
                                limits.ephemeral-storage, requests.cpu, requests.memory
                                and requests.ephemeral-storage) are currently supported.'
                              type: object
                              required:
                              - resource
                              properties:
                                containerName:
                                  description: 'Container name: required for volumes,
                                    optional for env vars'
                                  type: string
                                divisor:
                                  description: Specifies the output format of the
                                    exposed resources, defaults to "1"
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  x-kubernetes-int-or-string: true
                                resource:
                                  description: 'Required: resource to select'
                                  type: string
                            secretKeyRef:
                              description: Selects a key of a secret in the pod's
                                namespace
                              type: object
                              required:
                              - key
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                  envFrom:
                    description: EnvFrom is a list of sources to populate environment
                      variables in the container. The keys defined within a source
                      must be a C_IDENTIFIER. All invalid keys will be reported as
                      an event when the container is starting. When a key exists in
                      multiple sources, the value associated with the last source
                      will take precedence. Values defined by an Env with a duplicate
                      key will take precedence. Immutable.
                    type: array
                    items:
                      description: EnvFromSource represents the source of a set of
                        ConfigMaps
                      type: object
                      properties:
                        configMapRef:
                          description: The ConfigMap to select from
                          type: object
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap must be defined
                              type: boolean
                        prefix:
                          description: An optional identifier to prepend to each key
                            in the ConfigMap. Must be a C_IDENTIFIER.
                          type: string
                        secretRef:
                          description: The Secret to select from
                          type: object
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret must be defined
                              type: boolean
                  nodeSelector:
                    description: 'NodeSelector is a selector which must be true for
                      the pod to fit on a node. Selector which must match a node''s
                      labels for the pod to be scheduled on that node. More info:
                      https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                    type: object
                    additionalProperties:
                      type: string
                  resources:
                    description: 'Resources represents compute resources required
                      by this container. Immutable. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                    properties:
                      claims:
                        description: "Claims lists the names of resources, defined\
                          \ in spec.resourceClaims, that are used by this container.\
                          \ \n This is an alpha field and requires enabling the DynamicResourceAllocation\
                          \ feature gate. \n This field is immutable."
                        type: array
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          type: object
                          required:
                          - name
                          properties:
                            name:
                              description: Name must match the name of one entry in
                                pod.spec.resourceClaims of the Pod where this field
                                is used. It makes that resource available inside a
                                container.
                              type: string
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                        additionalProperties:
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                      requests:
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                        type: object
                        additionalProperties:
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          anyOf:
                          - type: integer
                          - type: string
                          x-kubernetes-int-or-string: true
                  selector:
                    description: Selector is the label selector for pods to be configured.
                      Existing ReplicaSets whose pods are selected by this will be
                      the ones affected by this deployment. It must match the pod
                      template's labels.
                    type: object
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        type: array
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          type: object
                          required:
                          - key
                          - operator
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              type: array
                              items:
                                type: string
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                        additionalProperties:
                          type: string
                  tolerations:
                    description: Tolerations are the pod's tolerations.
                    type: array
                    items:
                      description: The pod this Toleration is attached to tolerates
                        any taint that matches the triple <key,value,effect> using
                        the matching operator <operator>.
                      type: object
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match.
                            Empty means match all taint effects. When specified, allowed
                            values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty,
                            operator must be Exists; this combination means to match
                            all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to
                            the value. Valid operators are Exists and Equal. Defaults
                            to Equal. Exists is equivalent to wildcard for value,
                            so that a pod can tolerate all taints of a particular
                            category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of
                            time the toleration (which must be of effect NoExecute,
                            otherwise this field is ignored) tolerates the taint.
                            By default, it is not set, which means tolerate the taint
                            forever (do not evict). Zero and negative values will
                            be treated as 0 (evict immediately) by the system.
                          type: integer
                          format: int64
                        value:
                          description: Value is the taint value the toleration matches
                            to. If the operator is Exists, the value should be empty,
                            otherwise just a regular string.
                          type: string
                  volumeMounts:
                    description: List of VolumeMounts to set in the container.
                    type: array
                    items:
                      description: VolumeMount describes a mounting of a Volume within
                        a container.
                      type: object
                      required:
                      - mountPath
                      - name
                      properties:
                        mountPath:
                          description: Path within the container at which the volume
                            should be mounted.  Must not contain ':'.
                          type: string
                        mountPropagation:
                          description: mountPropagation determines how mounts are
                            propagated from the host to container and the other way
                            around. When not set, MountPropagationNone is used. This
                            field is beta in 1.10.
                          type: string
                        name:
                          description: This must match the Name of a Volume.
                          type: string
                        readOnly:
                          description: Mounted read-only if true, read-write otherwise
                            (false or unspecified). Defaults to false.
                          type: boolean
                        subPath:
                          description: Path within the volume from which the container's
                            volume should be mounted. Defaults to "" (volume's root).
                          type: string
                        subPathExpr:
                          description: Expanded path within the volume from which
                            the container's volume should be mounted. Behaves similarly
                            to SubPath but environment variable references $(VAR_NAME)
                            are expanded using the container's environment. Defaults
                            to "" (volume's root). SubPathExpr and SubPath are mutually
                            exclusive.
                          type: string
                  volumes:
                    description: List of Volumes to set in the podSpec.
                    type: array
                    items:
                      description: Volume represents a named volume in a pod that
                        may be accessed by any container in the pod.
                      type: object
                      required:
                      - name
                      properties:
                        awsElasticBlockStore:
                          description: 'awsElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                          type: object
                          required:
                          - volumeID
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty).'
                              type: integer
                              format: int32
                            readOnly:
                              description: 'readOnly value true will force the readOnly
                                setting in VolumeMounts. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: boolean
                            volumeID:
                              description: 'volumeID is unique ID of the persistent
                                disk resource in AWS (Amazon EBS volume). More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                              type: string
                        azureDisk:
                          description: azureDisk represents an Azure Data Disk mount
                            on the host and bind mount to the pod.
                          type: object
                          required:
                          - diskName
                          - diskURI
                          properties:
                            cachingMode:
                              description: 'cachingMode is the Host Caching mode:
                                None, Read Only, Read Write.'
                              type: string
                            diskName:
                              description: diskName is the Name of the data disk in
                                the blob storage
                              type: string
                            diskURI:
                              description: diskURI is the URI of data disk in the
                                blob storage
                              type: string
                            fsType:
                              description: fsType is Filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            kind:
                              description: 'kind expected values are Shared: multiple
                                blob disks per storage account  Dedicated: single
                                blob disk per storage account  Managed: azure managed
                                data disk (only in managed availability set). defaults
                                to shared'
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                        azureFile:
                          description: azureFile represents an Azure File Service
                            mount on the host and bind mount to the pod.
                          type: object
                          required:
                          - secretName
                          - shareName
                          properties:
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretName:
                              description: secretName is the  name of secret that
                                contains Azure Storage Account Name and Key
                              type: string
                            shareName:
                              description: shareName is the azure share Name
                              type: string
                        cephfs:
                          description: cephFS represents a Ceph FS mount on the host
                            that shares a pod's lifetime
                          type: object
                          required:
                          - monitors
                          properties:
                            monitors:
                              description: 'monitors is Required: Monitors is a collection
                                of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: array
                              items:
                                type: string
                            path:
                              description: 'path is Optional: Used as the mounted
                                root, rather than the full Ceph tree, default is /'
                              type: string
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: boolean
                            secretFile:
                              description: 'secretFile is Optional: SecretFile is
                                the path to key ring for User, default is /etc/ceph/user.secret
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                            secretRef:
                              description: 'secretRef is Optional: SecretRef is reference
                                to the authentication secret for User, default is
                                empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            user:
                              description: 'user is optional: User is the rados user
                                name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                              type: string
                        cinder:
                          description: 'cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                          type: object
                          required:
                          - volumeID
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Examples: "ext4", "xfs", "ntfs". Implicitly
                                inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                            readOnly:
                              description: 'readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: boolean
                            secretRef:
                              description: 'secretRef is optional: points to a secret
                                object containing parameters used to connect to OpenStack.'
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            volumeID:
                              description: 'volumeID used to identify the volume in
                                cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                              type: string
                        configMap:
                          description: configMap represents a configMap that should
                            populate this volume
                          type: object
                          properties:
                            defaultMode:
                              description: 'defaultMode is optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              type: integer
                              format: int32
                            items:
                              description: items if unspecified, each key-value pair
                                in the Data field of the referenced ConfigMap will
                                be projected into the volume as a file whose name
                                is the key and content is the value. If specified,
                                the listed keys will be projected into the specified
                                paths, and unlisted keys will not be present. If a
                                key is specified which is not present in the ConfigMap,
                                the volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              type: array
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                type: object
                                required:
                                - key
                                - path
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    type: integer
                                    format: int32
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: optional specify whether the ConfigMap
                                or its keys must be defined
                              type: boolean
                        csi:
                          description: csi (Container Storage Interface) represents
                            ephemeral storage that is handled by certain external
                            CSI drivers (Beta feature).
                          type: object
                          required:
                          - driver
                          properties:
                            driver:
                              description: driver is the name of the CSI driver that
                                handles this volume. Consult with your admin for the
                                correct name as registered in the cluster.
                              type: string
                            fsType:
                              description: fsType to mount. Ex. "ext4", "xfs", "ntfs".
                                If not provided, the empty value is passed to the
                                associated CSI driver which will determine the default
                                filesystem to apply.
                              type: string
                            nodePublishSecretRef:
                              description: nodePublishSecretRef is a reference to
                                the secret object containing sensitive information
                                to pass to the CSI driver to complete the CSI NodePublishVolume
                                and NodeUnpublishVolume calls. This field is optional,
                                and  may be empty if no secret is required. If the
                                secret object contains more than one secret, all secret
                                references are passed.
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            readOnly:
                              description: readOnly specifies a read-only configuration
                                for the volume. Defaults to false (read/write).
                              type: boolean
                            volumeAttributes:
                              description: volumeAttributes stores driver-specific
                                properties that are passed to the CSI driver. Consult
                                your driver's documentation for supported values.
                              type: object
                              additionalProperties:
                                type: string
                        downwardAPI:
                          description: downwardAPI represents downward API about the
                            pod that should populate this volume
                          type: object
                          properties:
                            defaultMode:
                              description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              type: integer
                              format: int32
                            items:
                              description: Items is a list of downward API volume
                                file
                              type: array
                              items:
                                description: DownwardAPIVolumeFile represents information
                                  to create the file containing the pod field
                                type: object
                                required:
                                - path
                                properties:
                                  fieldRef:
                                    description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                    type: object
                                    required:
                                    - fieldPath
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                  mode:
                                    description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                    type: integer
                                    format: int32
                                  path:
                                    description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                    type: string
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                    type: object
                                    required:
                                    - resource
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                        emptyDir:
                          description: 'emptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                          type: object
                          properties:
                            medium:
                              description: 'medium represents what type of storage
                                medium should back this directory. The default is
                                "" which means to use the node''s default medium.
                                Must be an empty string (default) or Memory. More
                                info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                              type: string
                            sizeLimit:
                              description: 'sizeLimit is the total amount of local
                                storage required for this EmptyDir volume. The size
                                limit is also applicable for memory medium. The maximum
                                usage on memory medium EmptyDir would be the minimum
                                value between the SizeLimit specified here and the
                                sum of memory limits of all containers in a pod. The
                                default is nil which means that the limit is undefined.
                                More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              anyOf:
                              - type: integer
                              - type: string
                              x-kubernetes-int-or-string: true
                        ephemeral:
                          description: "ephemeral represents a volume that is handled\
                            \ by a cluster storage driver. The volume's lifecycle\
                            \ is tied to the pod that defines it - it will be created\
                            \ before the pod starts, and deleted when the pod is removed.\
                            \ \n Use this if: a) the volume is only needed while the\
                            \ pod runs, b) features of normal volumes like restoring\
                            \ from snapshot or capacity tracking are needed, c) the\
                            \ storage driver is specified through a storage class,\
                            \ and d) the storage driver supports dynamic volume provisioning\
                            \ through a PersistentVolumeClaim (see EphemeralVolumeSource\
                            \ for more information on the connection between this\
                            \ volume type and PersistentVolumeClaim). \n Use PersistentVolumeClaim\
                            \ or one of the vendor-specific APIs for volumes that\
                            \ persist for longer than the lifecycle of an individual\
                            \ pod. \n Use CSI for light-weight local ephemeral volumes\
                            \ if the CSI driver is meant to be used that way - see\
                            \ the documentation of the driver for more information.\
                            \ \n A pod can use both types of ephemeral volumes and\
                            \ persistent volumes at the same time."
                          type: object
                          properties:
                            volumeClaimTemplate:
                              description: "Will be used to create a stand-alone PVC\
                                \ to provision the volume. The pod in which this EphemeralVolumeSource\
                                \ is embedded will be the owner of the PVC, i.e. the\
                                \ PVC will be deleted together with the pod.  The\
                                \ name of the PVC will be `<pod name>-<volume name>`\
                                \ where `<volume name>` is the name from the `PodSpec.Volumes`\
                                \ array entry. Pod validation will reject the pod\
                                \ if the concatenated name is not valid for a PVC\
                                \ (for example, too long). \n An existing PVC with\
                                \ that name that is not owned by the pod will *not*\
                                \ be used for the pod to avoid using an unrelated\
                                \ volume by mistake. Starting the pod is then blocked\
                                \ until the unrelated PVC is removed. If such a pre-created\
                                \ PVC is meant to be used by the pod, the PVC has\
                                \ to updated with an owner reference to the pod once\
                                \ the pod exists. Normally this should not be necessary,\
                                \ but it may be useful when manually reconstructing\
                                \ a broken cluster. \n This field is read-only and\
                                \ no changes will be made by Kubernetes to the PVC\
                                \ after it has been created. \n Required, must not\
                                \ be nil."
                              type: object
                              required:
                              - spec
                              properties:
                                metadata:
                                  description: May contain labels and annotations
                                    that will be copied into the PVC when creating
                                    it. No other fields are allowed and will be rejected
                                    during validation.
                                  type: object
                                spec:
                                  description: The specification for the PersistentVolumeClaim.
                                    The entire content is copied unchanged into the
                                    PVC that gets created from this template. The
                                    same fields as in a PersistentVolumeClaim are
                                    also valid here.
                                  type: object
                                  properties:
                                    accessModes:
                                      description: 'accessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                      type: array
                                      items:
                                        type: string
                                    dataSource:
                                      description: 'dataSource field can be used to
                                        specify either: * An existing VolumeSnapshot
                                        object (snapshot.storage.k8s.io/VolumeSnapshot)
                                        * An existing PVC (PersistentVolumeClaim)
                                        If the provisioner or an external controller
                                        can support the specified data source, it
                                        will create a new volume based on the contents
                                        of the specified data source. When the AnyVolumeDataSource
                                        feature gate is enabled, dataSource contents
                                        will be copied to dataSourceRef, and dataSourceRef
                                        contents will be copied to dataSource when
                                        dataSourceRef.namespace is not specified.
                                        If the namespace is specified, then dataSourceRef
                                        will not be copied to dataSource.'
                                      type: object
                                      required:
                                      - kind
                                      - name
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                    dataSourceRef:
                                      description: 'dataSourceRef specifies the object
                                        from which to populate the volume with data,
                                        if a non-empty volume is desired. This may
                                        be any object from a non-empty API group (non
                                        core object) or a PersistentVolumeClaim object.
                                        When this field is specified, volume binding
                                        will only succeed if the type of the specified
                                        object matches some installed volume populator
                                        or dynamic provisioner. This field will replace
                                        the functionality of the dataSource field
                                        and as such if both fields are non-empty,
                                        they must have the same value. For backwards
                                        compatibility, when namespace isn''t specified
                                        in dataSourceRef, both fields (dataSource
                                        and dataSourceRef) will be set to the same
                                        value automatically if one of them is empty
                                        and the other is non-empty. When namespace
                                        is specified in dataSourceRef, dataSource
                                        isn''t set to the same value and must be empty.
                                        There are three important differences between
                                        dataSource and dataSourceRef: * While dataSource
                                        only allows two specific types of objects,
                                        dataSourceRef allows any non-core object,
                                        as well as PersistentVolumeClaim objects.
                                        * While dataSource ignores disallowed values
                                        (dropping them), dataSourceRef preserves all
                                        values, and generates an error if a disallowed
                                        value is specified. * While dataSource only
                                        allows local objects, dataSourceRef allows
                                        objects in any namespaces. (Beta) Using this
                                        field requires the AnyVolumeDataSource feature
                                        gate to be enabled. (Alpha) Using the namespace
                                        field of dataSourceRef requires the CrossNamespaceVolumeDataSource
                                        feature gate to be enabled.'
                                      type: object
                                      required:
                                      - kind
                                      - name
                                      properties:
                                        apiGroup:
                                          description: APIGroup is the group for the
                                            resource being referenced. If APIGroup
                                            is not specified, the specified Kind must
                                            be in the core API group. For any other
                                            third-party types, APIGroup is required.
                                          type: string
                                        kind:
                                          description: Kind is the type of resource
                                            being referenced
                                          type: string
                                        name:
                                          description: Name is the name of resource
                                            being referenced
                                          type: string
                                        namespace:
                                          description: Namespace is the namespace
                                            of resource being referenced Note that
                                            when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant
                                            object is required in the referent namespace
                                            to allow that namespace's owner to accept
                                            the reference. See the ReferenceGrant
                                            documentation for details. (Alpha) This
                                            field requires the CrossNamespaceVolumeDataSource
                                            feature gate to be enabled.
                                          type: string
                                    resources:
                                      description: 'resources represents the minimum
                                        resources the volume should have. If RecoverVolumeExpansionFailure
                                        feature is enabled users are allowed to specify
                                        resource requirements that are lower than
                                        previous value but must still be higher than
                                        capacity recorded in the status field of the
                                        claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                      type: object
                                      properties:
                                        claims:
                                          description: "Claims lists the names of\
                                            \ resources, defined in spec.resourceClaims,\
                                            \ that are used by this container. \n\
                                            \ This is an alpha field and requires\
                                            \ enabling the DynamicResourceAllocation\
                                            \ feature gate. \n This field is immutable."
                                          type: array
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            type: object
                                            required:
                                            - name
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                          additionalProperties:
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            x-kubernetes-int-or-string: true
                                        requests:
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                          additionalProperties:
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            x-kubernetes-int-or-string: true
                                    selector:
                                      description: selector is a label query over
                                        volumes to consider for binding.
                                      type: object
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          type: array
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values,
                                              a key, and an operator that relates
                                              the key and values.
                                            type: object
                                            required:
                                            - key
                                            - operator
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a
                                                  key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists
                                                  and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of
                                                  string values. If the operator is
                                                  In or NotIn, the values array must
                                                  be non-empty. If the operator is
                                                  Exists or DoesNotExist, the values
                                                  array must be empty. This array
                                                  is replaced during a strategic merge
                                                  patch.
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator
                                            is "In", and the values array contains
                                            only "value". The requirements are ANDed.
                                          type: object
                                          additionalProperties:
                                            type: string
                                    storageClassName:
                                      description: 'storageClassName is the name of
                                        the StorageClass required by the claim. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                      type: string
                                    volumeMode:
                                      description: volumeMode defines what type of
                                        volume is required by the claim. Value of
                                        Filesystem is implied when not included in
                                        claim spec.
                                      type: string
                                    volumeName:
                                      description: volumeName is the binding reference
                                        to the PersistentVolume backing this claim.
                                      type: string
                        fc:
                          description: fc represents a Fibre Channel resource that
                            is attached to a kubelet's host machine and then exposed
                            to the pod.
                          type: object
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified. TODO: how do we prevent
                                errors in the filesystem from compromising the machine'
                              type: string
                            lun:
                              description: 'lun is Optional: FC target lun number'
                              type: integer
                              format: int32
                            readOnly:
                              description: 'readOnly is Optional: Defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            targetWWNs:
                              description: 'targetWWNs is Optional: FC target worldwide
                                names (WWNs)'
                              type: array
                              items:
                                type: string
                            wwids:
                              description: 'wwids Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                              type: array
                              items:
                                type: string
                        flexVolume:
                          description: flexVolume represents a generic volume resource
                            that is provisioned/attached using an exec based plugin.
                          type: object
                          required:
                          - driver
                          properties:
                            driver:
                              description: driver is the name of the driver to use
                                for this volume.
                              type: string
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". The default filesystem
                                depends on FlexVolume script.
                              type: string
                            options:
                              description: 'options is Optional: this field holds
                                extra command options if any.'
                              type: object
                              additionalProperties:
                                type: string
                            readOnly:
                              description: 'readOnly is Optional: defaults to false
                                (read/write). ReadOnly here will force the ReadOnly
                                setting in VolumeMounts.'
                              type: boolean
                            secretRef:
                              description: 'secretRef is Optional: secretRef is reference
                                to the secret object containing sensitive information
                                to pass to the plugin scripts. This may be empty if
                                no secret object is specified. If the secret object
                                contains more than one secret, all secrets are passed
                                to the plugin scripts.'
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                        flocker:
                          description: flocker represents a Flocker volume attached
                            to a kubelet's host machine. This depends on the Flocker
                            control service being running
                          type: object
                          properties:
                            datasetName:
                              description: datasetName is Name of the dataset stored
                                as metadata -> name on the dataset for Flocker should
                                be considered as deprecated
                              type: string
                            datasetUUID:
                              description: datasetUUID is the UUID of the dataset.
                                This is unique identifier of a Flocker dataset
                              type: string
                        gcePersistentDisk:
                          description: 'gcePersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                          type: object
                          required:
                          - pdName
                          properties:
                            fsType:
                              description: 'fsType is filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            partition:
                              description: 'partition is the partition in the volume
                                that you want to mount. If omitted, the default is
                                to mount by volume name. Examples: For volume /dev/sda1,
                                you specify the partition as "1". Similarly, the volume
                                partition for /dev/sda is "0" (or you can leave the
                                property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: integer
                              format: int32
                            pdName:
                              description: 'pdName is unique name of the PD resource
                                in GCE. Used to identify the disk in GCE. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                              type: boolean
                        gitRepo:
                          description: 'gitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                          type: object
                          required:
                          - repository
                          properties:
                            directory:
                              description: directory is the target directory name.
                                Must not contain or start with '..'.  If '.' is supplied,
                                the volume directory will be the git repository.  Otherwise,
                                if specified, the volume will contain the git repository
                                in the subdirectory with the given name.
                              type: string
                            repository:
                              description: repository is the URL
                              type: string
                            revision:
                              description: revision is the commit hash for the specified
                                revision.
                              type: string
                        glusterfs:
                          description: 'glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                          type: object
                          required:
                          - endpoints
                          - path
                          properties:
                            endpoints:
                              description: 'endpoints is the endpoint name that details
                                Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            path:
                              description: 'path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                              type: boolean
                        hostPath:
                          description: 'hostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                          type: object
                          required:
                          - path
                          properties:
                            path:
                              description: 'path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                            type:
                              description: 'type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                              type: string
                        iscsi:
                          description: 'iscsi represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                          type: object
                          required:
                          - iqn
                          - lun
                          - targetPortal
                          properties:
                            chapAuthDiscovery:
                              description: chapAuthDiscovery defines whether support
                                iSCSI Discovery CHAP authentication
                              type: boolean
                            chapAuthSession:
                              description: chapAuthSession defines whether support
                                iSCSI Session CHAP authentication
                              type: boolean
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            initiatorName:
                              description: initiatorName is the custom iSCSI Initiator
                                Name. If initiatorName is specified with iscsiInterface
                                simultaneously, new iSCSI interface <target portal>:<volume
                                name> will be created for the connection.
                              type: string
                            iqn:
                              description: iqn is the target iSCSI Qualified Name.
                              type: string
                            iscsiInterface:
                              description: iscsiInterface is the interface Name that
                                uses an iSCSI transport. Defaults to 'default' (tcp).
                              type: string
                            lun:
                              description: lun represents iSCSI Target Lun number.
                              type: integer
                              format: int32
                            portals:
                              description: portals is the iSCSI Target Portal List.
                                The portal is either an IP or ip_addr:port if the
                                port is other than default (typically TCP ports 860
                                and 3260).
                              type: array
                              items:
                                type: string
                            readOnly:
                              description: readOnly here will force the ReadOnly setting
                                in VolumeMounts. Defaults to false.
                              type: boolean
                            secretRef:
                              description: secretRef is the CHAP Secret for iSCSI
                                target and initiator authentication
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            targetPortal:
                              description: targetPortal is iSCSI Target Portal. The
                                Portal is either an IP or ip_addr:port if the port
                                is other than default (typically TCP ports 860 and
                                3260).
                              type: string
                        name:
                          description: 'name of the volume. Must be a DNS_LABEL and
                            unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        nfs:
                          description: 'nfs represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                          type: object
                          required:
                          - path
                          - server
                          properties:
                            path:
                              description: 'path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: boolean
                            server:
                              description: 'server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                              type: string
                        persistentVolumeClaim:
                          description: 'persistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                          type: object
                          required:
                          - claimName
                          properties:
                            claimName:
                              description: 'claimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                              type: string
                            readOnly:
                              description: readOnly Will force the ReadOnly setting
                                in VolumeMounts. Default false.
                              type: boolean
                        photonPersistentDisk:
                          description: photonPersistentDisk represents a PhotonController
                            persistent disk attached and mounted on kubelets host
                            machine
                          type: object
                          required:
                          - pdID
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            pdID:
                              description: pdID is the ID that identifies Photon Controller
                                persistent disk
                              type: string
                        portworxVolume:
                          description: portworxVolume represents a portworx volume
                            attached and mounted on kubelets host machine
                          type: object
                          required:
                          - volumeID
                          properties:
                            fsType:
                              description: fSType represents the filesystem type to
                                mount Must be a filesystem type supported by the host
                                operating system. Ex. "ext4", "xfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            volumeID:
                              description: volumeID uniquely identifies a Portworx
                                volume
                              type: string
                        projected:
                          description: projected items for all in one resources secrets,
                            configmaps, and downward API
                          type: object
                          properties:
                            defaultMode:
                              description: defaultMode are the mode bits used to set
                                permissions on created files by default. Must be an
                                octal value between 0000 and 0777 or a decimal value
                                between 0 and 511. YAML accepts both octal and decimal
                                values, JSON requires decimal values for mode bits.
                                Directories within the path are not affected by this
                                setting. This might be in conflict with other options
                                that affect the file mode, like fsGroup, and the result
                                can be other mode bits set.
                              type: integer
                              format: int32
                            sources:
                              description: sources is the list of volume projections
                              type: array
                              items:
                                description: Projection that may be projected along
                                  with other supported volume types
                                type: object
                                properties:
                                  configMap:
                                    description: configMap information about the configMap
                                      data to project
                                    type: object
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          ConfigMap will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the ConfigMap, the volume setup will
                                          error unless it is marked optional. Paths
                                          must be relative and may not contain the
                                          '..' path or start with '..'.
                                        type: array
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          type: object
                                          required:
                                          - key
                                          - path
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              type: integer
                                              format: int32
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional specify whether the
                                          ConfigMap or its keys must be defined
                                        type: boolean
                                  downwardAPI:
                                    description: downwardAPI information about the
                                      downwardAPI data to project
                                    type: object
                                    properties:
                                      items:
                                        description: Items is a list of DownwardAPIVolume
                                          file
                                        type: array
                                        items:
                                          description: DownwardAPIVolumeFile represents
                                            information to create the file containing
                                            the pod field
                                          type: object
                                          required:
                                          - path
                                          properties:
                                            fieldRef:
                                              description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                              type: object
                                              required:
                                              - fieldPath
                                              properties:
                                                apiVersion:
                                                  description: Version of the schema
                                                    the FieldPath is written in terms
                                                    of, defaults to "v1".
                                                  type: string
                                                fieldPath:
                                                  description: Path of the field to
                                                    select in the specified API version.
                                                  type: string
                                            mode:
                                              description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                              type: integer
                                              format: int32
                                            path:
                                              description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                              type: string
                                            resourceFieldRef:
                                              description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                              type: object
                                              required:
                                              - resource
                                              properties:
                                                containerName:
                                                  description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                  type: string
                                                divisor:
                                                  description: Specifies the output
                                                    format of the exposed resources,
                                                    defaults to "1"
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  anyOf:
                                                  - type: integer
                                                  - type: string
                                                  x-kubernetes-int-or-string: true
                                                resource:
                                                  description: 'Required: resource
                                                    to select'
                                                  type: string
                                  secret:
                                    description: secret information about the secret
                                      data to project
                                    type: object
                                    properties:
                                      items:
                                        description: items if unspecified, each key-value
                                          pair in the Data field of the referenced
                                          Secret will be projected into the volume
                                          as a file whose name is the key and content
                                          is the value. If specified, the listed keys
                                          will be projected into the specified paths,
                                          and unlisted keys will not be present. If
                                          a key is specified which is not present
                                          in the Secret, the volume setup will error
                                          unless it is marked optional. Paths must
                                          be relative and may not contain the '..'
                                          path or start with '..'.
                                        type: array
                                        items:
                                          description: Maps a string key to a path
                                            within a volume.
                                          type: object
                                          required:
                                          - key
                                          - path
                                          properties:
                                            key:
                                              description: key is the key to project.
                                              type: string
                                            mode:
                                              description: 'mode is Optional: mode
                                                bits used to set permissions on this
                                                file. Must be an octal value between
                                                0000 and 0777 or a decimal value between
                                                0 and 511. YAML accepts both octal
                                                and decimal values, JSON requires
                                                decimal values for mode bits. If not
                                                specified, the volume defaultMode
                                                will be used. This might be in conflict
                                                with other options that affect the
                                                file mode, like fsGroup, and the result
                                                can be other mode bits set.'
                                              type: integer
                                              format: int32
                                            path:
                                              description: path is the relative path
                                                of the file to map the key to. May
                                                not be an absolute path. May not contain
                                                the path element '..'. May not start
                                                with the string '..'.
                                              type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: optional field specify whether
                                          the Secret or its key must be defined
                                        type: boolean
                                  serviceAccountToken:
                                    description: serviceAccountToken is information
                                      about the serviceAccountToken data to project
                                    type: object
                                    required:
                                    - path
                                    properties:
                                      audience:
                                        description: audience is the intended audience
                                          of the token. A recipient of a token must
                                          identify itself with an identifier specified
                                          in the audience of the token, and otherwise
                                          should reject the token. The audience defaults
                                          to the identifier of the apiserver.
                                        type: string
                                      expirationSeconds:
                                        description: expirationSeconds is the requested
                                          duration of validity of the service account
                                          token. As the token approaches expiration,
                                          the kubelet volume plugin will proactively
                                          rotate the service account token. The kubelet
                                          will start trying to rotate the token if
                                          the token is older than 80 percent of its
                                          time to live or if the token is older than
                                          24 hours.Defaults to 1 hour and must be
                                          at least 10 minutes.
                                        type: integer
                                        format: int64
                                      path:
                                        description: path is the path relative to
                                          the mount point of the file to project the
                                          token into.
                                        type: string
                        quobyte:
                          description: quobyte represents a Quobyte mount on the host
                            that shares a pod's lifetime
                          type: object
                          required:
                          - registry
                          - volume
                          properties:
                            group:
                              description: group to map volume access to Default is
                                no group
                              type: string
                            readOnly:
                              description: readOnly here will force the Quobyte volume
                                to be mounted with read-only permissions. Defaults
                                to false.
                              type: boolean
                            registry:
                              description: registry represents a single or multiple
                                Quobyte Registry services specified as a string as
                                host:port pair (multiple entries are separated with
                                commas) which acts as the central registry for volumes
                              type: string
                            tenant:
                              description: tenant owning the given Quobyte volume
                                in the Backend Used with dynamically provisioned Quobyte
                                volumes, value is set by the plugin
                              type: string
                            user:
                              description: user to map volume access to Defaults to
                                serivceaccount user
                              type: string
                            volume:
                              description: volume is a string that references an already
                                created Quobyte volume by name.
                              type: string
                        rbd:
                          description: 'rbd represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                          type: object
                          required:
                          - image
                          - monitors
                          properties:
                            fsType:
                              description: 'fsType is the filesystem type of the volume
                                that you want to mount. Tip: Ensure that the filesystem
                                type is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                              type: string
                            image:
                              description: 'image is the rados image name. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            keyring:
                              description: 'keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            monitors:
                              description: 'monitors is a collection of Ceph monitors.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: array
                              items:
                                type: string
                            pool:
                              description: 'pool is the rados pool name. Default is
                                rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                            readOnly:
                              description: 'readOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: boolean
                            secretRef:
                              description: 'secretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            user:
                              description: 'user is the rados user name. Default is
                                admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                              type: string
                        scaleIO:
                          description: scaleIO represents a ScaleIO persistent volume
                            attached and mounted on Kubernetes nodes.
                          type: object
                          required:
                          - gateway
                          - secretRef
                          - system
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
                              type: string
                            gateway:
                              description: gateway is the host address of the ScaleIO
                                API Gateway.
                              type: string
                            protectionDomain:
                              description: protectionDomain is the name of the ScaleIO
                                Protection Domain for the configured storage.
                              type: string
                            readOnly:
                              description: readOnly Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef references to the secret for
                                ScaleIO user and other sensitive information. If this
                                is not provided, Login operation will fail.
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            sslEnabled:
                              description: sslEnabled Flag enable/disable SSL communication
                                with Gateway, default false
                              type: boolean
                            storageMode:
                              description: storageMode indicates whether the storage
                                for a volume should be ThickProvisioned or ThinProvisioned.
                                Default is ThinProvisioned.
                              type: string
                            storagePool:
                              description: storagePool is the ScaleIO Storage Pool
                                associated with the protection domain.
                              type: string
                            system:
                              description: system is the name of the storage system
                                as configured in ScaleIO.
                              type: string
                            volumeName:
                              description: volumeName is the name of a volume already
                                created in the ScaleIO system that is associated with
                                this volume source.
                              type: string
                        secret:
                          description: 'secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                          type: object
                          properties:
                            defaultMode:
                              description: 'defaultMode is Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                              type: integer
                              format: int32
                            items:
                              description: items If unspecified, each key-value pair
                                in the Data field of the referenced Secret will be
                                projected into the volume as a file whose name is
                                the key and content is the value. If specified, the
                                listed keys will be projected into the specified paths,
                                and unlisted keys will not be present. If a key is
                                specified which is not present in the Secret, the
                                volume setup will error unless it is marked optional.
                                Paths must be relative and may not contain the '..'
                                path or start with '..'.
                              type: array
                              items:
                                description: Maps a string key to a path within a
                                  volume.
                                type: object
                                required:
                                - key
                                - path
                                properties:
                                  key:
                                    description: key is the key to project.
                                    type: string
                                  mode:
                                    description: 'mode is Optional: mode bits used
                                      to set permissions on this file. Must be an
                                      octal value between 0000 and 0777 or a decimal
                                      value between 0 and 511. YAML accepts both octal
                                      and decimal values, JSON requires decimal values
                                      for mode bits. If not specified, the volume
                                      defaultMode will be used. This might be in conflict
                                      with other options that affect the file mode,
                                      like fsGroup, and the result can be other mode
                                      bits set.'
                                    type: integer
                                    format: int32
                                  path:
                                    description: path is the relative path of the
                                      file to map the key to. May not be an absolute
                                      path. May not contain the path element '..'.
                                      May not start with the string '..'.
                                    type: string
                            optional:
                              description: optional field specify whether the Secret
                                or its keys must be defined
                              type: boolean
                            secretName:
                              description: 'secretName is the name of the secret in
                                the pod''s namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                              type: string
                        storageos:
                          description: storageOS represents a StorageOS volume attached
                            and mounted on Kubernetes nodes.
                          type: object
                          properties:
                            fsType:
                              description: fsType is the filesystem type to mount.
                                Must be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            readOnly:
                              description: readOnly defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                              type: boolean
                            secretRef:
                              description: secretRef specifies the secret to use for
                                obtaining the StorageOS API credentials.  If not specified,
                                default values will be attempted.
                              type: object
                              properties:
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                            volumeName:
                              description: volumeName is the human-readable name of
                                the StorageOS volume.  Volume names are only unique
                                within a namespace.
                              type: string
                            volumeNamespace:
                              description: volumeNamespace specifies the scope of
                                the volume within StorageOS.  If no namespace is specified
                                then the Pod's namespace will be used.  This allows
                                the Kubernetes name scoping to be mirrored within
                                StorageOS for tighter integration. Set VolumeName
                                to any name to override the default behaviour. Set
                                to "default" if you are not using namespaces within
                                StorageOS. Namespaces that do not pre-exist within
                                StorageOS will be created.
                              type: string
                        vsphereVolume:
                          description: vsphereVolume represents a vSphere volume attached
                            and mounted on kubelets host machine
                          type: object
                          required:
                          - volumePath
                          properties:
                            fsType:
                              description: fsType is filesystem type to mount. Must
                                be a filesystem type supported by the host operating
                                system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred
                                to be "ext4" if unspecified.
                              type: string
                            storagePolicyID:
                              description: storagePolicyID is the storage Policy Based
                                Management (SPBM) profile ID associated with the StoragePolicyName.
                              type: string
                            storagePolicyName:
                              description: storagePolicyName is the storage Policy
                                Based Management (SPBM) profile name.
                              type: string
                            volumePath:
                              description: volumePath is the path that identifies
                                vSphere volume vmdk
                              type: string
              installPlanApproval:
                description: Approval is the user approval policy for an InstallPlan.
                  It must be one of "Automatic" or "Manual".
                type: string
              name:
                type: string
              source:
                type: string
              sourceNamespace:
                type: string
              startingCSV:
                type: string
          status:
            type: object
            required:
            - lastUpdated
            properties:
              catalogHealth:
                description: CatalogHealth contains the Subscription's view of its
                  relevant CatalogSources' status. It is used to determine SubscriptionStatusConditions
                  related to CatalogSources.
                type: array
                items:
                  description: SubscriptionCatalogHealth describes the health of a
                    CatalogSource the Subscription knows about.
                  type: object
                  required:
                  - catalogSourceRef
                  - healthy
                  - lastUpdated
                  properties:
                    catalogSourceRef:
                      description: CatalogSourceRef is a reference to a CatalogSource.
                      type: object
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead
                            of an entire object, this string should contain a valid
                            JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container
                            within a pod, this would take on a value like: "spec.containers{name}"
                            (where "name" refers to the name of the container that
                            triggered the event) or if no container name is specified
                            "spec.containers[2]" (container with index 2 in this pod).
                            This syntax is chosen only to have some well-defined way
                            of referencing a part of an object. TODO: this design
                            is not final and this field is subject to change in the
                            future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference
                            is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                    healthy:
                      description: Healthy is true if the CatalogSource is healthy;
                        false otherwise.
                      type: boolean
                    lastUpdated:
                      description: LastUpdated represents the last time that the CatalogSourceHealth
                        changed
                      type: string
                      format: date-time
              conditions:
                description: Conditions is a list of the latest available observations
                  about a Subscription's current state.
                type: array
                items:
                  description: SubscriptionCondition represents the latest available
                    observations of a Subscription's state.
                  type: object
                  required:
                  - status
                  - type
                  properties:
                    lastHeartbeatTime:
                      description: LastHeartbeatTime is the last time we got an update
                        on a given condition
                      type: string
                      format: date-time
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transit from one status to another
                      type: string
                      format: date-time
                    message:
                      description: Message is a human-readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is a one-word CamelCase reason for the condition's
                        last transition.
                      type: string
                    status:
                      description: Status is the status of the condition, one of True,
                        False, Unknown.
                      type: string
                    type:
                      description: Type is the type of Subscription condition.
                      type: string
              currentCSV:
                description: CurrentCSV is the CSV the Subscription is progressing
                  to.
                type: string
              installPlanGeneration:
                description: InstallPlanGeneration is the current generation of the
                  installplan
                type: integer
              installPlanRef:
                description: InstallPlanRef is a reference to the latest InstallPlan
                  that contains the Subscription's current CSV.
                type: object
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
              installedCSV:
                description: InstalledCSV is the CSV currently installed by the Subscription.
                type: string
              installplan:
                description: 'Install is a reference to the latest InstallPlan generated
                  for the Subscription. DEPRECATED: InstallPlanRef'
                type: object
                required:
                - apiVersion
                - kind
                - name
                - uuid
                properties:
                  apiVersion:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  uuid:
                    description: UID is a type that holds unique ID values, including
                      UUIDs.  Because we don't ONLY use UUIDs, this is an alias to
                      string.  Being a type captures intent and helps make sure that
                      UIDs and names do not get conflated.
                    type: string
              lastUpdated:
                description: LastUpdated represents the last time that the Subscription
                  status was updated.
                type: string
                format: date-time
              reason:
                description: Reason is the reason the Subscription was transitioned
                  to its current state.
                type: string
              state:
                description: State represents the current state of the Subscription
                type: string
    served: true
    storage: true
    subresources:
      status: {}

---
# Source: everest/charts/dbNamespace/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: everest
  labels:
    app.kubernetes.io/managed-by: everest
---
# Source: everest/charts/olm/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: everest-olm
---
# Source: everest/templates/monitoring-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: everest-monitoring
---
# Source: everest/charts/kube-state-metrics/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
automountServiceAccountToken: true
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.27.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: "2.14.0"
    everest.percona.com/type: monitoring
  name: kube-state-metrics
  namespace: everest-monitoring
---
# Source: everest/charts/monitoring/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vm-operator
  namespace: everest-monitoring
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
automountServiceAccountToken: true
---
# Source: everest/charts/olm/templates/serviceaccount.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: olm-operator-serviceaccount
  namespace: everest-olm
---
# Source: everest/templates/everest-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-operator-controller-manager
  namespace: everest-system
---
# Source: everest/templates/everest-server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-admin
  namespace: everest-system
---
# Source: everest/charts/olm/templates/packageserver.apiservice.yaml
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lRTGNMTG1sbTJ4REFsR05haStzS1NEREFOQmdrcWhraUc5dzBCQVFzRkFEQWcKTVI0d0hBWURWUVFERXhWd1lXTnJZV2RsYzJWeWRtVnlMWE5sY25acFkyVXdIaGNOTWpVd05URTFNRFkwTmpBMQpXaGNOTXpVd05URXpNRFkwTmpBMVdqQXdNUzR3TEFZRFZRUURFeVZ3WVdOcllXZGxjMlZ5ZG1WeUxYTmxjblpwClkyVXVaWFpsY21WemRDMXZiRzB1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXdTcXlyZE1zbW1YVG9RN21rUTk5Q1dhMVA5cVh2MGFiSlQ1bEFSOGNPSFVGZUtWdW91Nmpub2loczVGSgp4Yk5YeklkOHhxcStFYTV2Rk5IcWF5c2ZZS1p6WnhFbWRCVWt0ZEpNZ1hsWktiWExnNFRJczlZdjFka1pvYkhzCnZuK0pSdHVzT25PcUhNSzFCRDRmanYzb3M3enVsT3A2RW9tS0s2SXFJTC93VWhhK0JDQkh6NUNOa1UvRThsTDQKTU5FTjNwWjl1cU9wZUt1TXBjdS8rTDErOENhdUxOMWEwMWV6N2s0enAySHd6cGJ1YlRYc1BSOTkzMFVYc1d5NApJWXpVcVBHNVNJSVcxVzdoZE8vVFFnZjVmeU9rYXhxMHV1MWF3VW1jaUhraklSTThla0hTd3ZubElVdjI0d0xGClB2VExwUkxTVmtsSGZjUDF1dzdQclhpMkF3SURBUUFCbzRITk1JSEtNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCVHloWS95YUs2dzgzRWxGQmZSOWJrRGl1Q3N4ekJxQmdOVkhSRUVZekJoZ2hWd1lXTnJZV2RsCmMyVnlkbVZ5TFhObGNuWnBZMldDSVhCaFkydGhaMlZ6WlhKMlpYSXRjMlZ5ZG1salpTNWxkbVZ5WlhOMExXOXMKYllJbGNHRmphMkZuWlhObGNuWmxjaTF6WlhKMmFXTmxMbVYyWlhKbGMzUXRiMnh0TG5OMll6QU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBazdvbmJ3Y0VTaWFFdER6TEpiM1ptaTFtdU9JdERzVVg2Zi83bm96bEV6RHJnUW9wCnA2Z1dpSzYzSHIrMFA3RmNrbFB3RmJRSExoNGg4Nzd2WTJVTWV3U2VCcFYvMjhhK1NDMFgvd2FoODBBRXJNN00KWHBHUmNGM2Z5aUtZT1lJU1JHb2xmT0lMRnZrOTVockdzOFhLTDVSdVpJeko5Y1BreVhINGxIUjdQTWl1ZUZtQwpyZVhkeXlzOFpGTmdlMDJKamh1dnJhRWZabUtqYlo0WmF3akxYQndTT2lQc1dpNVpTTjNCUHM3UHZ4OUJHSUZGCnNvYVpXdmFjano3WGtkMzc5enJaeko4ZGhmSHhUVEszazVjSG9TOGlVUUlSRmh3TjZQOS90UTA4ZXYxTWV1TUkKOFF2U2cxU3VXbGpweVVObElMVThYWlAzZ1FhR1ZZQmJkMGprdUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBd1NxeXJkTXNtbVhUb1E3bWtROTlDV2ExUDlxWHYwYWJKVDVsQVI4Y09IVUZlS1Z1Cm91Nmpub2loczVGSnhiTlh6SWQ4eHFxK0VhNXZGTkhxYXlzZllLWnpaeEVtZEJVa3RkSk1nWGxaS2JYTGc0VEkKczlZdjFka1pvYkhzdm4rSlJ0dXNPbk9xSE1LMUJENGZqdjNvczd6dWxPcDZFb21LSzZJcUlML3dVaGErQkNCSAp6NUNOa1UvRThsTDRNTkVOM3BaOXVxT3BlS3VNcGN1LytMMSs4Q2F1TE4xYTAxZXo3azR6cDJId3pwYnViVFhzClBSOTkzMFVYc1d5NElZelVxUEc1U0lJVzFXN2hkTy9UUWdmNWZ5T2theHEwdXUxYXdVbWNpSGtqSVJNOGVrSFMKd3ZubElVdjI0d0xGUHZUTHBSTFNWa2xIZmNQMXV3N1ByWGkyQXdJREFRQUJBb0lCQVFDc1JQY0svS3pubVc1TwpVYXFncmU1MkJ1b1g0MHUzNHpFVDJ2eGJMcktOU3hleEMrQ0tZRWI5YUo3Rk5RcFV6V2U4MlF3WFpVaVRIanlrCmxiejVESUUwUWQzamlqRUFENmNvbkQ5c3JKc3ZEcGxNVm94ampkNGxXak40dCtRSjFGWEtJcmtMZkFHM0dwSXoKRVhBMXB3M3oxY2YwZU5TYldad200NzJzYldEVzR6RWQ0andyQWpNL3VHbGNpSTdZVkE4TUpvVWxERXJEenR3NApJN2kxV2tNcGExMDRvakhmVzlKWThMYnpIN0xaNUdXMTh4QVQ0Mi9pck13ZmUzOUVvR3VERERoUzFVZll3bHRJCmZES1phVmJmZ3BYZFVrOUtqbStZWHdISFg4dlpxQUNCZGFGcGk3c0pjNWVpb0FKaHRKdjdrUXRBa3BQdnk1NEwKQWpGOXpMRVpBb0dCQVBOTk5SKzlOc0loM1dYOEdxYXRlbGROZVVzak16UGEzb3p6dGJsU1E2Nnp3RjRwVEhiYQpSQXBnemRZSlNBWGdhMmg0UWdHemxBakxCVHpXei9tUEpFWDk5S2F0cnd4SjNraWlhR3Evd2Z6S1Z5a09Vb0RNClpSelkxMjlrU2QwbUFrZmpKNVpJeWlzMGVnUWZzUTRBS3dTNjlMRG1yLzE4WG85OVVseWhla1F2QW9HQkFNcy8Kb1pFN0hUalYrd084RVF5NnZPT1ZmZG5BejZ0TEZ2MmJPelJUTXNWM2dZWGQwa1lEWmNOVWptbTNTSnJJSjVMLwp3NE1qVWpxUTBhNHE1NGFnQ2x3UU5UL1lrQThHbVdNejRjU2RMMElFUUNneDJBSDZZSU9rdGVIZFJ6STJMZ3JrCk1NYkdzMTYrdkNoQVF1VExaV3NwSnBOOEtWWm1PZnNVc0pUcHo3SnRBb0dCQUk5SjZFQ1NDaDdaSFBBRVFwbnAKVDBUOVRyTU92d2dLSGNtN2VrbnpoZ0xzd0IxMGl5RHdPT1EzME9IK1ExbWFxd2N5MUFUMmd2ZU93YjNyOFQ1VApyQlJBbFlaWWdlQmwzTERBWFdpSkdMRk5aWG03Z3FGeVB4WjNLcUhpMlpHUjRnUCtad0VlUzFxWXBFZXJkblg5CmFWaDIxc2NjaFlkdmFLMXZMRU43b210bkFvR0JBTGdwQWNaTUgrQTkwdUhCYUZsMllteDhLYnBDZ0dpZTgwZjcKZlp1ZHZ5VTVjWHpRVHhUdFF5bkgxZnBuL2p0eEhKcVBjS0hFUVYrYmxNSVJVaE9qczM5VG1Fd3ZkK2lGZkRwcwo2aVp5bmoxZENKemkvT3hkNTFHZ3pzVEc4Um5JQ2RRSWkwR3hEUm5PRFVNVFp3bFVXcUxNZUkydU5PNTZWaEx3CjNrY3Z5K2ZKQW9HQkFJWGNkL0RIVVpwYTluSjhsWWE0dDlwV1lJR3lmRlNaSUtTL29NM0grejJ1bDU1bSs1TWYKak9BUE5SVC91TzdyVnVqbWdjNU5hbWNLcE94ZHN5T3ZCV05NOS9tbVFFVjIrNUU2aEVWUXFGdS9rZnBtWEQ4agprcXUwRmpweDExVCtNekVpT1NWUjRQWDl4YStTMXl6UHNrNC9tUG82ZmNzdmlzWFdsSXZvMzVydwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: packageserver-service-cert
  namespace: everest-olm
type: kubernetes.io/tls
---
# Source: everest/templates/everest-server/accounts.secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: everest-accounts
  namespace: everest-system
  annotations:
    insecure-password/admin: "true"
    helm.sh/resource-policy: keep
data:
  users.yaml: YWRtaW46CiAgcGFzc3dvcmRIYXNoOiBsM0hrNTVIM2FSUTcwUjBNMXpsUTNXUEQ4aWZIYXMyWXZ1OHlTWWZ4MGRvMVpXOWZOVUlVdVRVaHZVWDdFcEUyCiAgZW5hYmxlZDogdHJ1ZQogIGNhcGFiaWxpdGllczoKICAgIC0gbG9naW4K
---
# Source: everest/templates/everest-server/jwt.secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: "everest-jwt"
  namespace: everest-system
  annotations:
    helm.sh/resource-policy: keep
data:
  id_rsa: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKSndJQkFBS0NBZ0VBdm9hNklJUjFPa3pib09XZmYzUXpVZlhuSjN3NktzMk1xalEwMzN2V0lDUC9ncmhmCkEwMGhEVWJJbVZ5c29LSHBrN3RndDQzUElya3hjaURtcUdJdmtKQnRxR1owSTQ0K09YZTZhOU9YWWRIQyttMUsKNTJaYm5iSmJyMDlOM2hwRFdBUzBlNVhabTdObmI3b2E1TlFhdTJrbUNKVmNCMjZMQlNZbnJpUGtXbGlOT1kyaQpNUCszYVVIYkp1QlV2NkZsYkZtTHVCVktUN1l2RVVaYnR0QUlib04xdWdGcDVibSthS0dSa1RxNTdIMXp0SlRTCnh5NTBocEE2QkJXS09DMXZ0bGJlWFV3MGl1bjBEN1ZRR2ZnZ0I4Zm5UU0d0WWRNOW5GTWN5VWt3TFd0WVd3UkYKZy80cXNYVVZpYWw4NkRtS1FWQVRJbnlUcEJnMElScHZaQ2IveFZhS0pLR0xDVVVTVkg3d0UrUFg1c294M1MrMQpuUnpvbE9CSGxaUC9ZbkY5S293VVFvNzNMWUZzaWtiQzVMdG5hNU9aTExma3R2UWRoYnFuVExiVjlEY2xBNE1wCnZYQ3ljaW8rU2xJUG1jRVFadDJMcGtlQlExa0QwNjkwVGVwSVRmVUs5Nm42MFdUc1c0Nld5ZmZrcUtGUkV2czUKTUp2UitqaU1ENHFqUHVOSXh2MC9DNW1UTkZSa1oxdEdEck5nL2VmY1U5NGZISkFSVE1TMFE1N1NsOEswRlBDbgpPSVN6K0l5ZkdDa3hia0ZhZ0gyL0Y3RDZiTTRDRjcrc0lrblVUZzdDejNURkYvOXd3S25nZXViMGVTNUI4bWU5ClY1bHRjOUFQbWxPYzBPUndreDBIeFo5YzQxbzJ1eVNmZzlZb2xSVm9lVUlyRjJsMlRaYXgvaXNuMmpVQ0F3RUEKQVFLQ0FnQWwrR205czBnOW56V2lJa0VnUUlNOTBWa0pDSHY3TGMzYjJkMnpzRlZqUUdsYW51M29sWVdCeE5xVApuZUdWZmM4MEx3SytjaGVXM3Z1WXVDL2YzUG1Id1JEcG44bURrSVNjSlYxVXdlMkloQ3BzaUQyR1VtTHQwYTd1CkNFc0hlWXAwVHpPODhZZFZ2WEplMU9NcE9aQStTMTFXRnBZcHNRRXB2SW5wN2FORDBpUUxGVXYrb2VmbXBVWk0Kd0NhRHJtR3RMMGRtSDNBWTVNRUttMUFKNWZuWU5JRFEyaGxGdkRmVFdHZlBYcm5SQk10N2NMRjFHckFFWlZmNgptbVJhZjh1a3RqbEl0TGcvK3hJMTB6ZXNoVU8wNlVVU25TU1Z1MmlxNy9GcnVCZE81ZmJNNU5RSjB5eWxBeVdRCnN1TiswSURhTldBcTNsTDZRQXlia0U0azBwVGtZWlhqd2gwSkc1Tm5XZm9wcjF6R3lORjZnc1VweEpFMDl4bjcKWFlvNWpZVHhRaHZKNTdNUno2UlFkZFQ0azdoOGZuSDlzdkNLL2NsZXFqSkhUYzdlWC9qT2RyVjNWbjViNWV2NQpwcStYZ3dYSVREc0pueENwZ0h6c1JRaUNDOVdiaDNaVkVGVkNmQVROT2F1OVFuUmdPT0NLeG80SnNqSFV5bmpuCis2b0g4RWx0RjJ6c1BBUHFlMkhNUXkrQkZjZFN3cmxJWTFlR3dqOC91b0NCM0VsSmZvQk5aOU5qYkxYVGdNRkgKcE9MS0RlK1d1Z29GNjdSejcweUZLVlJ6T1Z6SEhJUW4vTWNnbmYzVWloQmxaVENhRmRFdUlTVjJRc081RDMrRApEY1hpSERiV0EyeFNmZHZGcnI5Q1pRcEtFcytFZTlDTmRyNzdQeXdhMFRWV1hOSjl2UUtDQVFFQTkrYno1NHB6Ckc3emppTjZodVVqcEpEM0FHZ2lsN2V3NkNNLzllYVdKbEliNStFVE9NZXZmV3JTRENWRlY1SEZYVkxpYVNGSWcKMUJwYzk2ZlFjdkJ6eWMrVUtRY3hiNC9Wa1ovT0lWRDJqNnBEWER5UFlNcFNZY0dHWUZDVEZEMmxZR2E2MENmbQpBLy96UHVLOGltVmtuUElCQ1ViVmtwUERaRzBVMTlsMnVXVHFnVnBLODg0RGZqalpwY2Z3cHZQVC9yQVl4M1FvClRXbm9tS0lrdDMvckZEN01wcFNpTG15QzRXNGw4K2V4T1JxWHk0ejI2WkJjMWRPcjV6L3QxVjNXV3lXTlBnTzcKZ2ZzUThocmRzT3dlbTlkTHF0ZXkwdllxVW91c1g4cXpQMjdzT0xQWHBzazFlUzUwbnRBdmdSRzNqckhIUVQvYQpacmwzVzM4TXZhV0pWd0tDQVFFQXhMLzUrNWJNbVdZQlJXRnhDZW82UGFldmVZYXg5ZDd4by85cVUyOW4ya1JJCko5VEpHeEhtaksxbkpEK3F4cllaY09oS3JpdmN4eDRqMmJ4SklGR0kvdHpZWEUvY3FSMjBOWVd5OWR4SjljN2wKYmpzeXNVZE9aZER3T2w0WkcyVDRRUytmL3ZYUHhwKys2bnptQWZVTTZtTE5ERXNQMHpiVE83djlHUm9Ja0dtTQpPVGFESDVCV3FNODVMRXQ4QWN1SFhVUEV4TWQ5Z2FFdHNDY2dDMko2Q2RHOUx1a2JxQllGL29RNFdzRmhTZGJnCm04SWg2ODRIK2pYNlhNV1NVeHBiTjNEZnBTUms0RzdCejZCMlpCTHB1WDZWL2llU09wa283Z2VYLzlaRit1cHcKenpzM0dLaE95YUZ6QjNqb3lJc1c3ZG1VRm01c2E3L1YvV3Byb2Z0bFV3S0NBUUFqNm9NVjNibzFuNVU3cEQyOApFWE10dkFDVUJRSzlTTWRUdFlhYzFEM3RsZXlyYXBTUktRSlFLdXo5TVpxSElXQ3N0cDRyc2pKdGFIQmx0UnQvCk81VWEvUWNUTnFhVDZqdmdBRTRtQjR2aFhxS3B2MkJxZm9XWEFpbk0xSCtxcEEvTXVyV0FLUGVyUnE3Z1FvdGMKWmJwQS90TGxuQ3lmTXVkUktuaWxtUzBaU1NTc252OVMrVnNLTTRSYy8yMi9VbjQ1WFJ3SjhhdFJJL0grQXlmYwpxaHpON3hkSlh5bHNIbTZMNktCNUNPMWxQNVFVZXBUZlcvb0hSTWFZRjJ3R3lMU2d1ZjBQcWd6RmxURnNVallpClJ1TmNZc0hrdTZGOTdRcE9zVXZGQ1NJVkk2WDN4UjZPWElKeHp5ZzRSaU5MeU54V1FTMkVKNU1sNU9NRkQ1QXgKL2NTN0FvSUJBRmlKMjhEd0Y1cGdZT29MODRaMnRVYlJreEdwSDZSNWMxeE5zRmRqcHVSK0hjcHU0eUVmYVJTZApZL0RZQmMzdVhIeUd6RFNjNEhscWdzK1UvNE5mcmJxalAyb3JOaTJVaEdnaGhtdEZlckwzTEIveTI5a1RNYUIzCjZlTWFQVW9xb2QwVHhYaEN2Z0d3R1lZRU5xMWl6VEVjelJGZkpmdnlqQlF4Z0xBdkd2T0J5K3hqTDVhZ3FaN0YKd2dEQTUwa1hnZzdpVkVZSlQ5MXAzdG1LZ2MwZHY3VnpnU0wvRzhjRVFpWks4ZUZGYkxhQjBBbkh6dVFDajJ4MQpwZmpobi90dHZPYXlFTEtNTWlrZExuSjB6MUl4Z0tSTTVzcThtLzFxdHhTR3Jrd2U3TmNCY1VxUVp6YmRacmN0CnhFbjBpeXpVQ3JsMlZFSFQ1MDZGd1pLTXRXcnJhcWtDZ2dFQUNTVUQxQVF0WHlVc1c3dUVuTTQ1T282TzRyYkwKaERDYWVEVTRCK3ZPS05XR1dFSkJuQmpYUWQ2ZVI1UmhhaUg2b2FoTCtXaXVPWEZERDN4UjdwZm5KSVlLQVZGVQphc0hRbzE2UzBFbHYyak4rdS9UVHV4Ui9TVmJ0TlA3WVJDMExLeXFHSi8rbmw4RWpBeGE4aXBCTisvT1B3VHA2CmdjM2tGdUZ4dzduM3FVS3Z1bS9BZFZXWkNnTVRmOEl3SHJoaHZlU1lCWUtlOWZneGJFQVdETllDZ2thRTRVZ2MKdXRubkVRMDFjN0VHSFA1WXZ1ZkVvRmpHZGF1Y2xiYktiakZkSlVEMXRBN3BCUnpTWVI5VnhkMGZUdmsxRFR4UQpCdlQ4TlNyQ2c3LzNEMUNheFJLMWdpL1B5dThNYy83UFA0dWt3OW1Ia3Zha1JvcGpWb1ZGd29oL2FRPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
---
# Source: everest/templates/everest-server/rbac.configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "everest-rbac"
  namespace: everest-system
  annotations:
    helm.sh/resource-policy: keep
data:
  enabled: "false"
  policy.csv: |
    g, admin, role:admin
---
# Source: everest/templates/everest-server/settings.configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: "everest-settings"
  namespace: everest-system
  annotations:
    helm.sh/resource-policy: keep
data:
---
# Source: everest/templates/ksm-customresourcestate-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: customresource-config-ksm
  namespace: everest-monitoring
data:
  config: |
    kind: CustomResourceStateMetrics
    spec:
      resources:
        - groupVersionKind:
            group: pxc.percona.com
            version: v1
            kind: PerconaXtraDBCluster
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_pxc
          metrics:
            - name: info
              help: "Information of PXC cluster on k8s"
              each:
                type: Info
                info:
                  labelsFromPath:
                    version:
                    - spec
                    - crVersion
            - name: pitr_enabled
              help: "PITR enabled"
              each:
                type: Gauge
                gauge:
                  path:
                  - spec
                  - backup
                  - pitr
                  - enabled
            - name: status_state
              help: "PXC state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - unknown
                  - ready
                  - initializing
                  - error
                  - paused
            - name: status_pxc_replicas
              help: "PXC Replica Status"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - pxc
                  - size
            - name: status_pxc_replicas_ready
              help: "Number of ready PXC replicas"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - pxc
                  - ready
            - name: status_haproxy_replicas
              help: "HAProxy Replica Status"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - haproxy
                  - size
            - name: status_haproxy_replicas_ready
              help: "Number of ready HAProxy replicas"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - haproxy
                  - ready
            - name: status_proxysql_replicas
              help: "ProxySQL Replica Status"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - proxysql
                  - size
            - name: status_proxysql_replicas_ready
              help: "Number of ready ProxySQL replicas"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - proxysql
                  - ready

        - groupVersionKind:
            group: pxc.percona.com
            version: v1
            kind: PerconaXtraDBClusterBackup
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_pxc_backup
          metrics:
            - name: info
              help: "Information of PXC cluster on k8s"
              each:
                type: Info
                info:
                  labelsFromPath:
                    cluster:
                    - spec
                    - pxcCluster
                    storage:
                    - spec
                    - storageName
            - name: status_state
              help: "PXC Backup state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - Starting
                  - Running
                  - Failed
                  - Succeeded
            - name: status_completed
              help: "Time when PXC Backup was completed"
              each:
                type: Gauge
                gauge:
                  path:
                  - status
                  - completed

        - groupVersionKind:
            group: pxc.percona.com
            version: v1
            kind: PerconaXtraDBClusterRestore
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_pxc_restore
          metrics:
            - name: info
              help: "Information of PXC cluster on k8s"
              each:
                type: Info
                info:
                  labelsFromPath:
                    cluster:
                    - spec
                    - pxcCluster
                    backup:
                    - spec
                    - backupName
            - name: status_state
              help: "PXC Restore state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - Starting
                  - "Stopping Cluster"
                  - Restoring
                  - "Starting Cluster"
                  - "Point-in-time recovering"
                  - Failed
                  - Succeeded
            - name: status_completed
              help: "Time when PXC Restore was completed"
              each:
                type: Gauge
                gauge:
                  path:
                  - status
                  - completed
        - groupVersionKind:         
            group: psmdb.percona.com
            version: v1
            kind: PerconaServerMongoDB 
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_psmdb
          metrics:
            - name: info
              help: "Information of PSMDB cluster"
              each:
                type: Info
                info:
                  labelsFromPath:
                    version:
                    - spec
                    - crVersion
            - name: pitr_enabled
              help: "PITR enabled"
              each:
                type: Gauge
                gauge:
                  path:
                  - spec
                  - backup
                  - pitr
                  - enabled
            - name: sharding_enabled
              help: "Sharding enabled"
              each:
                type: Gauge
                gauge:
                  path:
                  - spec
                  - sharding
                  - enabled
            - name: status_state
              help: "PSMDB state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - stopping
                  - ready
                  - initializing
                  - error
                  - paused
            - name: status_mongos
              help: "Mongos state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - mongos
                  - status
                  list:
                  - stopping
                  - ready
                  - initializing
                  - error
                  - paused
            - name: status_mongos_replicas
              help: "Mongos Replica Status"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - mongos
                  - size
            - name: status_mongos_replicas_ready
              help: "Mongos Replica Ready"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - mongos
                  - ready
        - groupVersionKind:
            group: psmdb.percona.com
            version: v1
            kind: PerconaServerMongoDBBackup
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_psmdb_backup
          metrics:
            - name: info
              help: "Information of PSMDB Backup"
              each:
                type: Info
                info:
                  labelsFromPath:
                    cluster:
                    - spec
                    - clusterName
                    storage:
                    - spec
                    - storageName
            - name: status_state
              help: "PSMDB Backup state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - waiting
                  - requested
                  - rejected
                  - running
                  - error
                  - ready
            - name: type
              help: "PSMDB Backup Type Physical/Logical/Incremental"
              each:
                type: StateSet
                stateSet:
                  labelName: type
                  path:
                  - status
                  - type
                  list:
                  - physical
                  - incremental
                  - logical
            - name: status_start
              help: "PSMDB Backup Start Time"
              each:
                type: Gauge
                gauge:
                  path:
                  - status
                  - start
            - name: status_completed
              help: "PSMDB Backup Completed Time"
              each:
                type: Gauge
                gauge:
                  path:
                  - status
                  - completed
        - groupVersionKind:
            group: psmdb.percona.com
            version: v1
            kind: PerconaServerMongoDBRestore
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_psmdb_restore
          metrics:
            - name: info
              help: "Information of PSMDB Restore"
              each:
                type: Info
                info:
                  labelsFromPath:
                    cluster:
                    - spec
                    - clusterName
                    storage:
                    - spec
                    - backupName
            - name: status_state
              help: "PSMDB Restore state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - waiting
                  - requested
                  - rejected
                  - running
                  - error
                  - ready
            - name: status_completed
              help: "PSMDB Restore Completed Time"
              each:
                type: Gauge
                gauge:
                  path:
                  - status
                  - completed
        - groupVersionKind:
            group: pgv2.percona.com
            version: v2
            kind: PerconaPGCluster
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_pg
          metrics:
            - name: info
              help: "Information of PG cluster"
              each:
                type: Info
                info:
                  labelsFromPath:
                    version:
                    - spec
                    - crVersion
                    postgresVersion:
                    - spec
                    - postgresVersion
            - name: status_state
              help: "PG state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - stopping
                  - ready
                  - initializing
                  - error
                  - paused
            - name: status_pgbouncer_replicas
              help: "PG Bouncer Replica Status"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - pgbouncer
                  - size
            - name: status_pgbouncer_replicas_ready
              help: "PG Bouncer Replica in Ready State"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - pgbouncer
                  - ready
            - name: status_postgres_replicas
              help: "Postgres Replica Status"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - postgres
                  - size
            - name: status_postgres_replicas_ready
              help: "Postgres Replica in Ready State"
              each:
                type: Gauge
                gauge:
                  nilIsZero: true
                  path:
                  - status
                  - postgres
                  - ready
        - groupVersionKind:
            group: pgv2.percona.com
            version: v2
            kind: PerconaPGBackup
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_pg_backup
          metrics:
            - name: info
              help: "Information of PG backup "
              each:
                type: Info
                info:
                  labelsFromPath:
                    cluster:
                    - spec
                    - pgCluster
                    repo:
                    - spec
                    - repoName
            - name: status_state
              help: "PG Backup state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - Starting
                  - Running
                  - Failed
                  - Succeeded
        - groupVersionKind:
            group: pgv2.percona.com
            version: v2
            kind: PerconaPGRestore
          labelsFromPath:
            name:
            - metadata
            - name
            namespace:
            - metadata
            - namespace
          metricNamePrefix: kube_pg_restore
          metrics:
            - name: info
              help: "Information of PG restore"
              each:
                type: Info
                info:
                  labelsFromPath:
                    cluster:
                    - spec
                    - pgCluster
                    repo:
                    - spec
                    - repoName
            - name: status_state
              help: "PG Restore state"
              each:
                type: StateSet
                stateSet:
                  labelName: state
                  path:
                  - status
                  - state
                  list:
                  - Starting
                  - Running
                  - Failed
                  - Succeeded
---
# Source: everest/charts/kube-state-metrics/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.27.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: "2.14.0"
    everest.percona.com/type: monitoring
  name: kube-state-metrics
rules:

- apiGroups: ["certificates.k8s.io"]
  resources:
  - certificatesigningrequests
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - configmaps
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - cronjobs
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - daemonsets
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - deployments
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - endpoints
  verbs: ["list", "watch"]

- apiGroups: ["autoscaling"]
  resources:
  - horizontalpodautoscalers
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["list", "watch"]

- apiGroups: ["batch"]
  resources:
  - jobs
  verbs: ["list", "watch"]

- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - limitranges
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - mutatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["list", "watch"]

- apiGroups: ["networking.k8s.io"]
  resources:
  - networkpolicies
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumeclaims
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - persistentvolumes
  verbs: ["list", "watch"]

- apiGroups: ["policy"]
  resources:
    - poddisruptionbudgets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - pods
  verbs: ["list", "watch"]

- apiGroups: ["extensions", "apps"]
  resources:
  - replicasets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - replicationcontrollers
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - resourcequotas
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - secrets
  verbs: ["list", "watch"]

- apiGroups: [""]
  resources:
  - services
  verbs: ["list", "watch"]

- apiGroups: ["apps"]
  resources:
  - statefulsets
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - storageclasses
  verbs: ["list", "watch"]

- apiGroups: ["admissionregistration.k8s.io"]
  resources:
    - validatingwebhookconfigurations
  verbs: ["list", "watch"]

- apiGroups: ["storage.k8s.io"]
  resources:
    - volumeattachments
  verbs: ["list", "watch"]
---
# Source: everest/charts/monitoring/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vm-operator
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
rules:
- nonResourceURLs: 
  - /metrics
  - /metrics/resources
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - configmaps
  - configmaps/finalizers
  - endpoints
  - events
  - persistentvolumeclaims
  - persistentvolumeclaims/finalizers
  - pods
  - secrets
  - secrets/finalizers
  - services
  - services/finalizers
  - serviceaccounts
  - serviceaccounts/finalizers
  verbs:
  - "*"
- apiGroups:
  - ""
  resources:
  - configmaps/status
  - nodes
  - nodes/proxy
  - nodes/metrics
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  - replicasets
  - statefulsets
  - statefulsets/finalizers
  - statefulsets/status
  verbs:
  - "*"
- apiGroups:
  - monitoring.coreos.com
  resources:
  - "*"
  verbs:
  - "*"
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterrolebindings/finalizers
  - clusterroles
  - clusterroles/finalizers
  - roles
  - rolebindings
  verbs:
  - "*"
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  - poddisruptionbudgets/finalizers
  verbs:
  - "*"
- apiGroups:
  - route.openshift.io
  - image.openshift.io
  resources:
  - routers/metrics
  - registry/metrics
  verbs:
  - get
- apiGroups:
  - autoscaling
  verbs:
  - "*"
  resources:
  - horizontalpodautoscalers
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingresses/finalizers
  verbs:
  - "*"
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - operator.victoriametrics.com
  resources:
  - vlogs
  - vlogs/finalizers
  - vlogs/status
  - vmagents
  - vmagents/finalizers
  - vmagents/status
  - vmalertmanagerconfigs
  - vmalertmanagerconfigs/finalizers
  - vmalertmanagerconfigs/status
  - vmalertmanagers
  - vmalertmanagers/finalizers
  - vmalertmanagers/status
  - vmalerts
  - vmalerts/finalizers
  - vmalerts/status
  - vmauths
  - vmauths/finalizers
  - vmauths/status
  - vmclusters
  - vmclusters/finalizers
  - vmclusters/status
  - vmnodescrapes
  - vmnodescrapes/finalizers
  - vmnodescrapes/status
  - vmpodscrapes
  - vmpodscrapes/finalizers
  - vmpodscrapes/status
  - vmprobes
  - vmprobes/finalizers
  - vmprobes/status
  - vmrules
  - vmrules/finalizers
  - vmrules/status
  - vmscrapeconfigs
  - vmscrapeconfigs/finalizers
  - vmscrapeconfigs/status
  - vmservicescrapes
  - vmservicescrapes/finalizers
  - vmservicescrapes/status
  - vmsingles
  - vmsingles/finalizers
  - vmsingles/status
  - vmstaticscrapes
  - vmstaticscrapes/finalizers
  - vmstaticscrapes/status
  - vmusers
  - vmusers/finalizers
  - vmusers/status
  verbs:
  - '*'
---
# Source: everest/charts/monitoring/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vm-operator-victoriametrics-admin
  labels:
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
rules: 
  - apiGroups:
    - operator.victoriametrics.com
    resources:
    - vlogs
    - vlogs/finalizers
    - vlogs/status
    - vmagents
    - vmagents/finalizers
    - vmagents/status
    - vmalertmanagerconfigs
    - vmalertmanagerconfigs/finalizers
    - vmalertmanagerconfigs/status
    - vmalertmanagers
    - vmalertmanagers/finalizers
    - vmalertmanagers/status
    - vmalerts
    - vmalerts/finalizers
    - vmalerts/status
    - vmauths
    - vmauths/finalizers
    - vmauths/status
    - vmclusters
    - vmclusters/finalizers
    - vmclusters/status
    - vmnodescrapes
    - vmnodescrapes/finalizers
    - vmnodescrapes/status
    - vmpodscrapes
    - vmpodscrapes/finalizers
    - vmpodscrapes/status
    - vmprobes
    - vmprobes/finalizers
    - vmprobes/status
    - vmrules
    - vmrules/finalizers
    - vmrules/status
    - vmscrapeconfigs
    - vmscrapeconfigs/finalizers
    - vmscrapeconfigs/status
    - vmservicescrapes
    - vmservicescrapes/finalizers
    - vmservicescrapes/status
    - vmsingles
    - vmsingles/finalizers
    - vmsingles/status
    - vmstaticscrapes
    - vmstaticscrapes/finalizers
    - vmstaticscrapes/status
    - vmusers
    - vmusers/finalizers
    - vmusers/status
    verbs:
    - '*'
---
# Source: everest/charts/monitoring/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vm-operator-victoriametrics-view
  labels:
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules: 
  - apiGroups:
    - operator.victoriametrics.com
    resources:
    - vlogs
    - vlogs/finalizers
    - vlogs/status
    - vmagents
    - vmagents/finalizers
    - vmagents/status
    - vmalertmanagerconfigs
    - vmalertmanagerconfigs/finalizers
    - vmalertmanagerconfigs/status
    - vmalertmanagers
    - vmalertmanagers/finalizers
    - vmalertmanagers/status
    - vmalerts
    - vmalerts/finalizers
    - vmalerts/status
    - vmauths
    - vmauths/finalizers
    - vmauths/status
    - vmclusters
    - vmclusters/finalizers
    - vmclusters/status
    - vmnodescrapes
    - vmnodescrapes/finalizers
    - vmnodescrapes/status
    - vmpodscrapes
    - vmpodscrapes/finalizers
    - vmpodscrapes/status
    - vmprobes
    - vmprobes/finalizers
    - vmprobes/status
    - vmrules
    - vmrules/finalizers
    - vmrules/status
    - vmscrapeconfigs
    - vmscrapeconfigs/finalizers
    - vmscrapeconfigs/status
    - vmservicescrapes
    - vmservicescrapes/finalizers
    - vmservicescrapes/status
    - vmsingles
    - vmsingles/finalizers
    - vmsingles/status
    - vmstaticscrapes
    - vmstaticscrapes/finalizers
    - vmstaticscrapes/status
    - vmusers
    - vmusers/finalizers
    - vmusers/status
    verbs:
    - get
    - list
    - watch
---
# Source: everest/charts/olm/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:controller:operator-lifecycle-manager
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ["*"]
  verbs: ["*"]
---
# Source: everest/charts/olm/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-olm-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
rules:
- apiGroups: ["operators.coreos.com"]
  resources: ["subscriptions"]
  verbs: ["create", "update", "patch", "delete"]
- apiGroups: ["operators.coreos.com"]
  resources: ["clusterserviceversions", "catalogsources", "installplans", "subscriptions"]
  verbs: ["delete"]
---
# Source: everest/charts/olm/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: aggregate-olm-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
rules:
- apiGroups: ["operators.coreos.com"]
  resources: ["clusterserviceversions", "catalogsources", "installplans", "subscriptions", "operatorgroups"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["packages.operators.coreos.com"]
  resources: ["packagemanifests", "packagemanifests/icon"]
  verbs: ["get", "list", "watch"]
---
# Source: everest/charts/olm/templates/packageserver.rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: packageserver-clusterrole
rules:
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
  - get
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - catalogsources
  verbs:
  - list
  - get
  - watch
- apiGroups:
  - packages.operators.coreos.com
  resources:
  - packagemanifests
  verbs: ["*"]
---
# Source: everest/templates/everest-operator/backupstorage-editor.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-backupstorage-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/backupstorage-viewer.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-backupstorage-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databasecluster-editor.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databasecluster-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databasecluster-viewer.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databasecluster-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusters/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databaseclusterbackup-editor.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databaseclusterbackup-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databaseclusterbackup-viewer.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databaseclusterbackup-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterbackups/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databaseclusterrestore-editor.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databaseclusterrestore-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databaseclusterrestore-viewer.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databaseclusterrestore-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseclusterrestores/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databaseengine-editor.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databaseengine-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/databaseengine-viewer.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-databaseengine-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - databaseengines/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/manager.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - delete
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages
  - databaseclusterbackups
  - databaseclusterrestores
  - databaseclusters
  - databaseengines
  - monitoringconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/finalizers
  - databaseclusterbackups/finalizers
  - databaseclusterrestores/finalizers
  - databaseclusters/finalizers
  - databaseengines/finalizers
  - monitoringconfigs/finalizers
  verbs:
  - update
- apiGroups:
  - everest.percona.com
  resources:
  - backupstorages/status
  - databaseclusterbackups/status
  - databaseclusterrestores/status
  - databaseclusters/status
  - databaseengines/status
  - monitoringconfigs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - operator.victoriametrics.com
  resources:
  - vmagents
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - clusterserviceversions
  - installplans
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - subscriptions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - pgv2.percona.com
  resources:
  - perconapgbackups
  - perconapgclusters
  - perconapgrestores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - postgres-operator.crunchydata.com
  resources:
  - postgresclusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - psmdb.percona.com
  resources:
  - perconaservermongodbbackups
  - perconaservermongodbrestores
  - perconaservermongodbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - pxc.percona.com
  resources:
  - perconaxtradbclusterbackups
  - perconaxtradbclusterrestores
  - perconaxtradbclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
---
# Source: everest/templates/everest-operator/metrics-auth.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-metrics-auth-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
# Source: everest/templates/everest-operator/metricsreader.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
  name: everest-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
# Source: everest/templates/everest-operator/monitoringconfig-editor.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-monitoringconfig-editor-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs/status
  verbs:
  - get
---
# Source: everest/templates/everest-operator/monitoringconfig-viewer.clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-operator-monitoringconfig-viewer-role
rules:
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - everest.percona.com
  resources:
  - monitoringconfigs/status
  verbs:
  - get
---
# Source: everest/templates/everest-server/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-admin-cluster-role
rules:
  - apiGroups: ["everest.percona.com"]
    resources: ["databaseengines"]
    verbs: ["get", "list", "update"]
  - apiGroups: ["everest.percona.com"]
    resources: ["databaseclusters", "databaseclusterbackups", "databaseclusterrestores", "backupstorages", "monitoringconfigs"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["secrets", "configmaps", "namespaces"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["nodes", "pods", "persistentvolumes"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["list"]
  - apiGroups: ["everest.percona.com"]
    resources: ["*"]
    verbs: ["*"]
  - apiGroups: ["operators.coreos.com"]
    resources: ["installplans"]
    verbs: ["get", "list", "update"]
---
# Source: everest/charts/kube-state-metrics/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:    
    helm.sh/chart: kube-state-metrics-5.27.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: "2.14.0"
    everest.percona.com/type: monitoring
  name: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
- kind: ServiceAccount
  name: kube-state-metrics
  namespace: everest-monitoring
---
# Source: everest/charts/monitoring/templates/crb.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vm-operator
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
subjects:
- kind: ServiceAccount
  name: vm-operator
  namespace: everest-monitoring
roleRef:
  kind: ClusterRole
  name: vm-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: everest/charts/olm/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: olm-operator-binding-olm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:operator-lifecycle-manager
subjects:
- kind: ServiceAccount
  namespace: everest-olm
  name: olm-operator-serviceaccount
---
# Source: everest/charts/olm/templates/packageserver.rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: packageserver-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: packageserver-clusterrole
subjects:
- kind: ServiceAccount
  name: olm-operator-serviceaccount
  namespace: everest-olm
---
# Source: everest/templates/everest-operator/manager.clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everest-operator-manager-rolebinding
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-system
roleRef:
  kind: ClusterRole
  name: everest-operator-manager-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: everest/templates/everest-operator/metrics-auth.clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everest-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everest-operator-metrics-auth-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-system
---
# Source: everest/templates/everest-server/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everest-admin-cluster-role-binding
roleRef:
  kind: "ClusterRole"
  apiGroup: "rbac.authorization.k8s.io"
  name: everest-admin-cluster-role
subjects:
  - kind: "ServiceAccount"
    name: everest-admin
    namespace: everest-system
---
# Source: everest/charts/monitoring/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vm-operator
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
  namespace: everest-monitoring
rules:
- apiGroups:
  - coordination.k8s.io
  verbs:
  - create
  - get
  - update
  resources:
  - leases
---
# Source: everest/templates/everest-operator/leaderelection.role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-operator-leader-election-role
  namespace: everest-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: everest/templates/everest-server/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-admin-role
  namespace: everest-system
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["get"]
---
# Source: everest/charts/monitoring/templates/rb.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vm-operator
  namespace: everest-monitoring
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
subjects:
- kind: ServiceAccount
  name: vm-operator
  namespace: everest-monitoring
roleRef:
  kind: Role
  name: vm-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: everest/templates/everest-operator/leaderelection.rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-operator-leader-election-rolebinding
  namespace: everest-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: everest-operator-controller-manager
  namespace: everest-system
---
# Source: everest/templates/everest-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-operator-local
  namespace: everest-system
subjects:
- kind: ServiceAccount
  name: everest-operator
  namespace: everest-system
roleRef:
  kind: Role
  name: everest-operator
  apiGroup: rbac.authorization.k8s.io
---
# Source: everest/templates/everest-server/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-admin-role-binding
  namespace: everest-system
roleRef:
  kind: "Role"
  apiGroup: "rbac.authorization.k8s.io"
  name: everest-admin-role
subjects:
  - kind: "ServiceAccount"
    name: everest-admin
---
# Source: everest/charts/kube-state-metrics/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kube-state-metrics
  namespace: everest-monitoring
  labels:    
    helm.sh/chart: kube-state-metrics-5.27.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: "2.14.0"
    everest.percona.com/type: monitoring
  annotations:
    prometheus.io/scrape: 'true'
spec:
  type: "ClusterIP"
  ports:
  - name: "http"
    protocol: TCP
    port: 8080
    targetPort: 8080
  
  selector:    
    app.kubernetes.io/name: kube-state-metrics
---
# Source: everest/charts/monitoring/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: everest-monitoring
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
  name: vm-operator
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
    - name: webhook
      port: 9443
      targetPort: webhook
  selector: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/name: monitoring
---
# Source: everest/charts/olm/templates/packageserver.service.yaml
apiVersion: v1
kind: Service
metadata:
  name: packageserver-service
  namespace: everest-olm
spec:
  internalTrafficPolicy: Cluster
  ports:
  - name: "5443"
    port: 5443
    protocol: TCP
    targetPort: 5443
  selector:
    app: packageserver
  type: ClusterIP
---
# Source: everest/templates/everest-operator/metrics.service.yaml
apiVersion: v1
kind: Service
metadata:
  name: everest-operator-metrics-service
  namespace: everest-system
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: 8443
  selector:
    app: everest-operator
  sessionAffinity: None
  type: ClusterIP
---
# Source: everest/templates/everest-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: everest
  namespace: everest-system
  labels:
    app.kubernetes.io/name: everest
    app.kubernetes.io/component: everest
spec:
  selector:
    app.kubernetes.io/name: everest-server
    app.kubernetes.io/component: everest-server
  type: ClusterIP
  ports:
    - protocol: TCP
      name: http
      port: 8080
      targetPort: 8080
---
# Source: everest/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics
  namespace: everest-monitoring
  labels:    
    helm.sh/chart: kube-state-metrics-5.27.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: metrics
    app.kubernetes.io/part-of: kube-state-metrics
    app.kubernetes.io/name: kube-state-metrics
    app.kubernetes.io/version: "2.14.0"
    everest.percona.com/type: monitoring
spec:
  selector:
    matchLabels:      
      app.kubernetes.io/name: kube-state-metrics
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:        
        helm.sh/chart: kube-state-metrics-5.27.0
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: metrics
        app.kubernetes.io/part-of: kube-state-metrics
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/version: "2.14.0"
        everest.percona.com/type: monitoring
    spec:
      automountServiceAccountToken: true
      hostNetwork: false
      serviceAccountName: kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kube-state-metrics
        args:
        - --custom-resource-state-config-file=/etc/customresourcestate/config
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        - --metric-labels-allowlist=pods=[app.kubernetes.io/component,app.kubernetes.io/instance,app.kubernetes.io/managed-by,app.kubernetes.io/name,app.kubernetes.io/part-of],persistentvolumeclaims=[app.kubernetes.io/component,app.kubernetes.io/instance,app.kubernetes.io/managed-by,app.kubernetes.io/name,app.kubernetes.io/part-of],jobs=[app.kubernetes.io/component,app.kubernetes.io/instance,app.kubernetes.io/managed-by,app.kubernetes.io/name,app.kubernetes.io/part-of]
        volumeMounts:
        - mountPath: /etc/customresourcestate
          name: customresourcestate-config
          readOnly: true
        imagePullPolicy: IfNotPresent
        image: registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.14.0
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            path: /livez
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
      volumes:
        - configMap:
            name: customresource-config-ksm
          name: customresourcestate-config
---
# Source: everest/charts/monitoring/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vm-operator
  namespace: everest-monitoring
  labels: 
    app.kubernetes.io/instance: everest-core
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: monitoring
    app.kubernetes.io/version: v0.54.1
    helm.sh/chart: monitoring-0.43.0
spec:
  replicas: 1
  selector:
    matchLabels: 
      app.kubernetes.io/instance: everest-core
      app.kubernetes.io/name: monitoring
  template:
    metadata:
      labels: 
        app.kubernetes.io/instance: everest-core
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: monitoring
    spec:
      automountServiceAccountToken: true
      securityContext: 
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: vm-operator
      containers:
        - name: operator
          image: victoriametrics/operator:v0.54.1
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: monitoring
            - name: VM_ENABLEDPROMETHEUSCONVERTEROWNERREFERENCES
              value: "false"
          args:
            - --zap-log-level=info
            - --leader-elect
            - --health-probe-bind-address=:8081
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: probe
              containerPort: 8081
              protocol: TCP
            - name: webhook
              containerPort: 9443
              protocol: TCP
          readinessProbe: 
            failureThreshold: 3
            httpGet:
              path: /health
              port: probe
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            timeoutSeconds: 5
          livenessProbe: 
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 15
            tcpSocket:
              port: probe
            timeoutSeconds: 5
          volumeMounts:
          resources: 
            {}
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
      terminationGracePeriodSeconds: 30
      volumes:
---
# Source: everest/charts/olm/templates/catalog-operator.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalog-operator
  namespace: everest-olm
  labels:
    app: catalog-operator
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: catalog-operator
  template:
    metadata:
      labels:
        app: catalog-operator
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: olm-operator-serviceaccount
      containers:
        - name: catalog-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
          command:
          - /bin/catalog
          args:
          - '--namespace'
          - everest-olm
          - --configmapServerImage=quay.io/operator-framework/configmap-operator-registry:latest
          - --util-image
          - quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
          - --set-workload-user-id=true
          image: quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6 
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: metrics
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            requests:
              cpu: 10m
              memory: 80Mi
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: everest/charts/olm/templates/olm-operator.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: olm-operator
  namespace: everest-olm
  labels:
    app: olm-operator
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: olm-operator
  template:
    metadata:
      labels:
        app: olm-operator
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: olm-operator-serviceaccount
      containers:
        - name: olm-operator
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ "ALL" ]
          command:
          - /bin/olm
          args:
          - --namespace
          - $(OPERATOR_NAMESPACE)
          - --writeStatusName
          - ""
          image: quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: metrics
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
          terminationMessagePolicy: FallbackToLogsOnError
          env:
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OPERATOR_NAME
            value: olm-operator
          resources:
            requests:
              cpu: 10m
              memory: 160Mi
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: everest/charts/olm/templates/packageserver.deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: packageserver
  namespace: everest-olm
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: packageserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: packageserver
    spec:
      containers:
      - command:
        - /bin/package-server
        - -v=4
        - --secure-port
        - "5443"
        - --global-namespace
        - everest-olm
        env:
        - name: OPERATOR_CONDITION_NAME
          value: packageserver
        image: quay.io/operator-framework/olm@sha256:1b6002156f568d722c29138575733591037c24b4bfabc67946f268ce4752c3e6
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 5443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: packageserver
        ports:
        - containerPort: 5443
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 5443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmpfs
        - mountPath: /apiserver.local.config/certificates
          name: apiservice-cert
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: olm-operator-serviceaccount
      serviceAccountName: olm-operator-serviceaccount
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmpfs
      - name: apiservice-cert
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: apiserver.crt
          - key: tls.key
            path: apiserver.key
          secretName: packageserver-service-cert
      - name: webhook-cert
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          secretName: packageserver-service-cert
---
# Source: everest/templates/everest-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: everest-operator
  namespace: everest-system
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: everest-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: everest-operator
    spec:
      containers:
      - args:
        - --leader-elect
        - --metrics-bind-address=:8443
        - --health-probe-bind-address=:8081
        - --monitoring-namespace=everest-monitoring
        - --system-namespace=everest-system
        command:
        - /manager
        image: perconalab/everest-operator:0.0.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: 
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PERCONA_VERSION_SERVICE_URL
          value: https://check.percona.com/versions/v1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: everest-operator-controller-manager
      serviceAccountName: everest-operator-controller-manager
      terminationGracePeriodSeconds: 10
---
# Source: everest/templates/everest-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: everest-server
  namespace: everest-system
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: everest-server
      app.kubernetes.io/component: everest-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: everest-server
        app.kubernetes.io/component: everest-server
    spec:
      serviceAccountName: everest-admin
      automountServiceAccountToken: true
      volumes:
      - name: jwt-secret
        secret:
          secretName: everest-jwt
      containers:
      - name: everest
        image: perconalab/everest:0.0.0
        ports:
          - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 15
        resources: 
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 20Mi
        volumeMounts:
        - name: jwt-secret
          mountPath: /etc/jwt
        env:
        - name: DISABLE_TELEMETRY
          value: "true"
        - name: API_REQUESTS_RATE_LIMIT
          value: "100"
        - name: VERSION_SERVICE_URL
          value: https://check.percona.com
        - name: PORT
          value: "8080"
---
# Source: everest/charts/olm/templates/packageserver.apiservice.yaml
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1.packages.operators.coreos.com
  annotations:
spec:
  caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLekNDQWhPZ0F3SUJBZ0lRS3cvNmI5dGY4NDlnczVTbDNpWmJmekFOQmdrcWhraUc5dzBCQVFzRkFEQWcKTVI0d0hBWURWUVFERXhWd1lXTnJZV2RsYzJWeWRtVnlMWE5sY25acFkyVXdIaGNOTWpVd05URTFNRFkwTmpBMQpXaGNOTXpVd05URXpNRFkwTmpBMVdqQWdNUjR3SEFZRFZRUURFeFZ3WVdOcllXZGxjMlZ5ZG1WeUxYTmxjblpwClkyVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDb3ZCYkVTbFJyQTJRbE04ZTUKUVZ3aVlsQUg4OUUyMDJJSng0T2NQTjNaZUdkMUVIczY3cUpjN3RZZGY2SmEyMWpPcDhEcWZSZURjQjA5eTdHWQo2dU0vVy8vUFdpSTdQZGh1M2psbHdKTXNHN1VBMGcvQWJsSVgxOUpjdzdhSk12dStFbm56Q2hBd09wUVNKUy8zCnI2SldxbUxaa0xPdE0rb1c4TUNoNXFET2xLQXEzdHVNRGcwanpOaVNlVmdsR3Z5cTNiUzc0N3A1U3VxeDBrTXgKdSs4MmFOM1h4L3FzNnZXSXRGN1VQQTB5VGdCV3A1R2xwakx1UEdCWkhMVW43RGJDdnBac3NiY1F2RFByWlRmVgp2SDJ5VXkxaVJ6QldFWmJqNDFwZ3NkeUV4L3FQMkk2eTFXWHVIdVQ2WkRncmZMM0tQWENmNTlGbHRTOWdGc2hNCmE2YlhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVThvV1A4bWl1c1BOeApKUlFYMGZXNUE0cmdyTWN3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQURqaXFHbndYWEZqbVZySnJnczA3dFBRCll0cjNTajJUcFc5WC81dVhLYXNoWmxsb2Rjd0pNTWZZRnRGdGhWUEk0MUJhSmpYelhKL2I2TWxQRlYvM0FIeTgKVWJjMkQxd1pLYTJVdWJxVVZDeDYyYk11WWZLbVJHd3ZmWWJRaTZta216cTZId3VBMWNDYVZibGRGNkRYMVk3bgo3T3Z6akg3TkY3d3NCUnM1QlFPWUl0VHkxRm1nYlNlTlhkcEFuZnZ1NTFXL0dkWDc3TWVyZU96L09BQ28yR001CjM1YnNEdk12LzduaUN6cFExNTZ2R2JIb1hnaHN6eVBNUDBCUTBkbkgxYnovNFBWa2lPSHpTNGlzYW1vVFh4dGoKazFodThmL1MwZHpjRzk5SWdlWWJ3dVlCbk1kZ1FOL2hyZEEyTW5KejNCcG0yVUx6WFZOSlJwVDJKY2ZaWVlFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  group: packages.operators.coreos.com
  groupPriorityMinimum: 2000
  version: v1
  versionPriority: 800
  service:
    name: packageserver-service
    namespace: everest-olm
    port: 5443
---
# Source: everest/templates/ksm-openshift-clusterrolebinding.yaml
# We need a separate ClusterRoleBinding for OpenShift, as the one that comes pre-installed cannot be bound to the ServiceAccount used
# for Everest's kube-state-metrics installation.
---
# Source: everest/templates/everest-catalogsource.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: CatalogSource
metadata:
  name: everest-catalog
  namespace: everest-olm
spec:
  displayName: Everest Catalog
  grpcPodConfig:
    securityContextConfig: restricted
  image: perconalab/everest-catalog:0.0.0
  publisher: Percona
  sourceType: grpc
  updateStrategy:
    registryPoll:
      interval: 45m
---
# Source: everest/charts/olm/templates/olmconfig.yaml
apiVersion: operators.coreos.com/v1
kind: OLMConfig
metadata:
  name: cluster
---
# Source: everest/charts/dbNamespace/templates/operatorgroup.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: everest-databases
  namespace: everest
spec:
  targetNamespaces:
  - everest 
  upgradeStrategy: Default
---
# Source: everest/charts/dbNamespace/templates/pg.subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: percona-postgresql-operator
  namespace: everest
  annotations:
    # This annotation ensures that the Subscription is not removed
    # during upgrade, which could otherwise result in a broken installation.
    # The uninstallation of operators is handled gracefully in the pre-delete hook.
    helm.sh/resource-policy: keep
spec:
  channel: stable-v2
  installPlanApproval: Manual
  name: percona-postgresql-operator
  source: everest-catalog
  sourceNamespace: everest-olm
  config:
    env:
    - name: DISABLE_TELEMETRY
      value: "false"
---
# Source: everest/charts/dbNamespace/templates/psmdb.subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: percona-server-mongodb-operator
  namespace: everest
  annotations:
    # This annotation ensures that the Subscription is not removed
    # during upgrade, which could otherwise result in a broken installation.
    # The uninstallation of operators is handled gracefully in the pre-delete hook.
    helm.sh/resource-policy: keep
spec:
  channel: stable-v1
  installPlanApproval: Manual
  name: percona-server-mongodb-operator
  source: everest-catalog
  sourceNamespace: everest-olm
  config:
    env:
    - name: DISABLE_TELEMETRY
      value: "false"
---
# Source: everest/charts/dbNamespace/templates/pxc.subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: percona-xtradb-cluster-operator
  namespace: everest
  annotations:
    # This annotation ensures that the Subscription is not removed
    # during upgrade, which could otherwise result in a broken installation.
    # The uninstallation of operators is handled gracefully in the pre-delete hook.
    helm.sh/resource-policy: keep
spec:
  channel: stable-v1
  installPlanApproval: Manual
  name: percona-xtradb-cluster-operator
  source: everest-catalog
  sourceNamespace: everest-olm
  config:
    env:
    - name: DISABLE_TELEMETRY
      value: "false"
---
# Source: everest/templates/monitoring-resources.yaml
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMNodeScrape
metadata:
  name: pmm-vm-cadvisor-metrics
  namespace: everest-monitoring
  labels:
    app.kubernetes.io/managed-by: everest
    everest.percona.com/type: monitoring
spec:
  scheme: "https"
  interval: "10s"
  honorLabels: true
  scrapeTimeout: "2s"
  selector: {}
  tlsConfig:
    insecureSkipVerify: true
    caFile: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
  bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
  relabelConfigs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - targetLabel: __address__
      replacement: kubernetes.default.svc:443
    - sourceLabels: [__meta_kubernetes_node_name]
      regex: (.+)
      targetLabel: __metrics_path__
      replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
  metricRelabelConfigs:
  - action: labeldrop
    regex: cloud_google_com.*
  - source_labels:
    - namespace
    - pod
    target_label: node_name
    regex: (.+);(.+)
    replacement: $1-$2
---
# Source: everest/templates/monitoring-resources.yaml
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMNodeScrape
metadata:
  labels:
    app.kubernetes.io/managed-by: everest
    everest.percona.com/type: monitoring
  name: pmm-vm-kubelet-metrics
  namespace: everest-monitoring
spec:
  bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  honorLabels: true
  interval: 30s
  metricRelabelConfigs:
  - action: labeldrop
    regex: (uid)
  - action: labeldrop
    regex: (id|name)
  - action: drop
    regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    source_labels:
    - __name__
  - action: labeldrop
    regex: cloud_google_com.*
  relabelConfigs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - sourceLabels:
    - __metrics_path__
    targetLabel: metrics_path
  - replacement: kubelet
    targetLabel: job
  scheme: https
  scrapeTimeout: 5s
  tlsConfig:
    caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    insecureSkipVerify: true
---
# Source: everest/templates/monitoring-resources.yaml
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMPodScrape
metadata:
  name: pmm-vm-pod-scrape
  namespace: everest-monitoring
  labels:
    app.kubernetes.io/managed-by: everest
    everest.percona.com/type: monitoring
spec:
  podMetricsEndpoints:
    - port: metrics
      scheme: http
  selector:
    matchLabels:
      monitored-by: vm-operator
---
# Source: everest/templates/monitoring-resources.yaml
apiVersion: operator.victoriametrics.com/v1beta1
kind: VMServiceScrape
metadata:
  name: kube-state-metrics
  namespace: everest-monitoring
  labels:
    app.kubernetes.io/managed-by: everest
    everest.percona.com/type: monitoring
spec:
  jobLabel: app.kubernetes.io/name
  namespaceSelector: {}
  endpoints:
    - scheme: http
      port: http
      honorLabels: true
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-helm-pre-delete-hook
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-operators-installer
  namespace: everest
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-helm-pre-delete-db-resource-cleanup
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
---
# Source: everest/templates/hooks.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: everest-helm-pre-upgrade-hook
  namespace: everest-system
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
# Source: everest/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: everest-helm-pre-upgrade-hook
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
  - apiGroups:
      - operators.coreos.com
    resources:
      - subscriptions
      - clusterserviceversions
    verbs:
      - get
      - list
---
# Source: everest/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: everest-helm-pre-upgrade-hook
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: everest-helm-pre-upgrade-hook
subjects:
  - kind: ServiceAccount
    name: everest-helm-pre-upgrade-hook
    namespace: everest-system
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-helm-pre-delete-hook
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - operators.coreos.com
    resources:
      - clusterserviceversions
      - subscriptions
    verbs:
      - delete
      - list
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-operators-installer
  namespace: everest
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - patch
      - update
  - apiGroups:
      - operators.coreos.com
    resources:
      - installplans
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - operators.coreos.com
    resources:
      - subscriptions
      - clusterserviceversions
    verbs:
      - get
      - list
      - watch
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-helm-pre-delete-db-resource-cleanup
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
rules:
  - apiGroups:
      - everest.percona.com
    resources:
      - databaseclusters
      - backupstorages
      - monitoringconfigs
    verbs:
      - get
      - delete
      - list
      - watch
---
# Source: everest/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: everest-helm-pre-upgrade-hook
  namespace: everest-system
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-helm-pre-delete-hook
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-helm-pre-delete-hook
subjects:
  - kind: ServiceAccount
    name: everest-helm-pre-delete-hook
    namespace: everest
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-operators-installer
  namespace: everest
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-operators-installer
subjects:
  - kind: ServiceAccount
    name: everest-operators-installer
    namespace: everest
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-helm-pre-delete-db-resource-cleanup
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-helm-pre-delete-db-resource-cleanup
subjects:
  - kind: ServiceAccount
    name: everest-helm-pre-delete-db-resource-cleanup
    namespace: everest
---
# Source: everest/templates/hooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: everest-helm-pre-upgrade-hook
  namespace: everest-system
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: everest-helm-pre-upgrade-hook
subjects:
  - kind: ServiceAccount
    name: everest-helm-pre-upgrade-hook
    namespace: everest-system
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: everest-helm-pre-delete-hook-847951
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      containers:
        - image: bitnami/kubectl:latest
          name: everest-helm-pre-delete-hook
          command:
            - /bin/sh
            - -c
            - |
              kubectl delete subscription -n everest --all --wait
              kubectl delete csv -n everest --all --wait
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: everest-helm-pre-delete-hook
      serviceAccountName: everest-helm-pre-delete-hook
      terminationGracePeriodSeconds: 30
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: everest-operators-installer
  namespace: everest
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      containers:
        - image: bitnami/kubectl:latest
          name: everest-operators-installer
          command:
            - /bin/sh
            - -c
            - |
              kubectl label namespace everest app.kubernetes.io/managed-by=everest --overwrite
              subs=$(kubectl -n everest get subscriptions.operators.coreos.com -o jsonpath='{.items[*].metadata.name}')
              for sub in $subs
              do
                # We do not want to touch already installed operators, otherwise bad things can happen.
                installedCSV=$(kubectl -n everest get subscriptions.operators.coreos.com $sub -o jsonpath='{.status.installedCSV}')
                if [ "$installedCSV" != "" ]; then
                  echo "Operator $sub already installed. Skip..."
                  continue
                fi

                echo "Waiting for InstallPlan to be created for Subscription $sub"
                kubectl wait --for=jsonpath='.status.installplan.name' subscriptions.operators.coreos.com/$sub -n everest --timeout=600s
                
                ip=$(kubectl -n everest get subscriptions.operators.coreos.com $sub -o jsonpath='{.status.installplan.name}')
                echo "InstallPlan $ip created for Subscription $sub"

                echo "Approving InstallPlan $ip"
                kubectl -n everest patch installplans.operators.coreos.com $ip --type='json' -p='[{"op": "replace", "path": "/spec/approved", "value": true}]'

                echo "Waiting for InstallPlan to be complete $ip"
                kubectl wait --for=jsonpath='.status.phase'=Complete installplans.operators.coreos.com/$ip -n everest --timeout=600s

                csv=$(kubectl get subscriptions.operators.coreos.com $sub -n everest -o jsonpath='{.status.installedCSV}')

                echo "Waiting for CSV $csv to succeed"
                kubectl wait --for=jsonpath='.status.phase'=Succeeded clusterserviceversions.operators.coreos.com/$csv -n everest --timeout=600s
              done
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: everest-operators-installer
      serviceAccountName: everest-operators-installer
      terminationGracePeriodSeconds: 30
---
# Source: everest/charts/dbNamespace/templates/hooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: everest-helm-pre-delete-db-resource-cleanup-537686
  namespace: everest
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-1"
spec:
  template:
    spec:
      containers:
        - image: bitnami/kubectl:latest
          name: everest-helm-pre-delete-db-resource-cleanup
          command:
            - /bin/sh
            - -ec
          args:
            - |
              echo "Deleting DatabaseClusters"
              kubectl delete databaseclusters -n everest --all --wait --cascade='foreground'
              
              echo "Deleting BackupStorages"
              kubectl delete backupstorages -n everest --all --wait
                
              echo "Deleting MonitoringConfigs"
              kubectl delete monitoringconfigs -n everest --all --wait
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: everest-helm-pre-delete-db-resource-cleanup
      serviceAccountName: everest-helm-pre-delete-db-resource-cleanup
      terminationGracePeriodSeconds: 30
---
# Source: everest/templates/hooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: everest-helm-pre-upgrade-hook-814165
  namespace: everest-system
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      containers:
        - image: alpine:3.20
          name: everest-helm-pre-upgrade-hook
          command:
            - /bin/sh
            - -ec
            - |
              OS=$(uname -s | tr '[:upper:]' '[:lower:]')
              ARCH=$(uname -m)

              # Map ARCH to match available builds
              if [ "$ARCH" = "x86_64" ]; then
                  ARCH="amd64"
              elif [ "$ARCH" = "aarch64" ]; then
                  ARCH="arm64"
              else
                  echo "Unsupported architecture: $ARCH"
                  exit 1
              fi

              VERSION=0.0.0
              apk add --no-cache --quiet curl
              curl -sSL -o everestctl https://github.com/percona/everest/releases/download/v${VERSION}/everestctl-${OS}-${ARCH}
              chmod -R 777 ./everestctl
              
              echo "Checking requirements for upgrade to version ${VERSION}"
              ./everestctl upgrade --in-cluster --dry-run --version-metadata-url=https://check.percona.com --kubeconfig=""
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 30
      serviceAccount: everest-helm-pre-upgrade-hook
      serviceAccountName: everest-helm-pre-upgrade-hook
